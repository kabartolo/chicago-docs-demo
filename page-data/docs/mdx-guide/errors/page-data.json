{"componentChunkName":"component---kabartolo-gatsby-theme-chicago-docs-core-src-templates-doc-query-js","path":"/docs/mdx-guide/errors/","result":{"data":{"doc":{"id":"07b3113d-4319-55d0-b953-8599fd846b8f","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Syntax Errors in MDX\",\n  \"shortTitle\": \"Syntax Errors\",\n  \"description\": \"An overview of syntax errors in MDX files\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"overview\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#overview\",\n    \"aria-label\": \"overview permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Overview\"), mdx(\"p\", null, \"You might run into the following error while writing MDX files:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Error: EnsureResources was not able to find resources for path: {path}\\n\")), mdx(\"p\", null, \"This is most likely due to a syntax error in an MDX file. Unfortunately, with Gatsby, these syntax errors are not always reported in the console.\"), mdx(\"p\", null, \"Both JSX and HTML syntax errors will prevent the post from being published. Be sure to write your MDX files while the Gatsby development server is running, and save often. You might have to clear the site cache and restart the development server (see below) to get specific feedback in the console:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-curl\"\n  }), \"gatsby clean\\ngatsby develop\\n\")), mdx(\"p\", null, \"This page describes the common syntax errors in MDX files.\"), mdx(\"h2\", {\n    \"id\": \"missing-curly-braces\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#missing-curly-braces\",\n    \"aria-label\": \"missing curly braces permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Missing Curly Braces\"), mdx(\"p\", null, \"Non-string JSX attributes need to be wrapped in curly braces ({}): \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Component prop={[1, 2, 3]} />\"), \".\"), mdx(\"p\", null, \"In the following example, the curly braces are missing from the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p\"), \" prop value. Add them in to see the box render correctly.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"\\n<Box\\n  p=4\\n  color=\\\"primary\\\"\\n  bg=\\\"white\\\"\\n>\\n  Check out the syntax error below\\n</Box>\\n\\n\")), mdx(\"p\", null, \"It should look like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"{2}\",\n    \"{2}\": true\n  }), \"\\n<Box\\n  p={4}\\n  color=\\\"primary\\\"\\n  bg=\\\"white\\\"\\n>\\n  That's better\\n</Box>\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"quotation-marks\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#quotation-marks\",\n    \"aria-label\": \"quotation marks permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Quotation Marks\"), mdx(\"p\", null, \"In Markdown, quotation marks ('' or \\\"\\\") are printed literally, and it doesn't matter if they're mismatched or incorrectly nested. \"), mdx(\"p\", null, \"However, there are specific rules for quotation marks when used in JSX and HTML. Quotation marks need to be used in pairs of opening and closing marks. This example fails because the quotation is not closed:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"\\n<a href=\\\"www.google.com>Google</a>\\n\")), mdx(\"p\", null, \"This should be written as\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<a href=\\\"www.google.com\\\">Google</a>\"), \". \"), mdx(\"p\", null, \"Quotation marks should also be correcly nested; this means single quotation marks (') should be used inside double (\\\"), or vice versa. The following will cause an error:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\",\n    \"metastring\": \"live\",\n    \"live\": true\n  }), \"<Textarea\\n  defaultValue=\\\"Say, 'Hello, World!\\\"\\\"\\n  rows={8}\\n/>\\n\\n\")), mdx(\"p\", null, \"This should be written as\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Textarea\\n  defaultValue=\\\"Say, 'Hello, World!'\\\"\\n  rows={8}\\n/>\")), mdx(\"h2\", {\n    \"id\": \"unclosed-tags\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#unclosed-tags\",\n    \"aria-label\": \"unclosed tags permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Unclosed Tags\"), mdx(\"p\", null, \"Both HTML and React tags must be closed. This means adding a closing tag (e.g., \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"</a>\"), \") after the content or using the self-closing version of a tag. For example, you should write the self-closing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<br />\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<br>\"), \".\"), mdx(\"p\", null, \"Be careful when using Chicago Docs components such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"<Alert>\"), \" that expect text between the opening and closing tags. You should include the closing tag (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"</Alert>\"), \") after the text:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Alert>\\n\\nText that will appear in the browser.\\n\\n</Alert>\\n\")), mdx(\"p\", null, \"It's a good idea to write the opening and closing tags at the same time, then add the text between them afterwards. It can be frustrating to get a syntax error when the culprit is one of a hundred JSX and HTML tags.\"));\n}\n;\nMDXContent.isMDXComponent = true;","description":"An overview of syntax errors in MDX files","path":"/docs/mdx-guide/errors/","slug":"errors","title":"Syntax Errors in MDX","showBreadcrumb":true,"showPostNav":true,"showSidebar":true,"showTOC":true}},"pageContext":{"id":"07b3113d-4319-55d0-b953-8599fd846b8f","menu":{"id":"docs","name":"Documentation","slug":"docs","path":"/docs/","sidebarLabel":"Documentation","dropdownLabel":"Documentation","items":[{"id":"73c7fcd2-f348-52c0-b906-e06668880a39","name":"Quick Start","slug":"quick-start","path":"/docs/quick-start/","items":[]},{"id":"configuration","name":"Configuration","slug":"configuration","path":"/docs/configuration/","isGroup":true,"useCustomList":3,"items":[{"id":"f066d0e7-1627-5f07-8fa7-027d399e23de","name":"Site options","slug":"site-options","path":"/docs/configuration/site-options/","items":[]},{"id":"4955b706-94d8-5c7f-933c-3143158ebc9c","name":"Menus","slug":"menus","path":"/docs/configuration/menus/","items":[]},{"id":"bb148a8a-f365-5487-9ffc-5b07b0a8a6c2","name":"Search","slug":"search-config","path":"/docs/configuration/search-config/","items":[]}]},{"id":"mdx-guide","name":"Guide to MDX","slug":"mdx-guide","path":"/docs/mdx-guide/","isGroup":true,"useCustomList":2,"items":[{"id":"45553fc5-c2ee-5775-ab08-b3f0b78e07c0","name":"Writing MDX","slug":"writing","path":"/docs/mdx-guide/writing/","items":[]},{"id":"07b3113d-4319-55d0-b953-8599fd846b8f","name":"Syntax Errors","slug":"errors","path":"/docs/mdx-guide/errors/","items":[]}]},{"id":"cbebf0da-1500-5d66-9038-65cd8804c04d","name":"Styling and Shadowing","slug":"styling-and-shadowing","path":"/docs/styling-and-shadowing/","items":[]},{"id":"1f4e5609-107f-5934-916a-ca6857c97ce1","name":"Components and Hooks","slug":"components-and-hooks","path":"/docs/components-and-hooks/","items":[]},{"id":"df3c4170-f4bc-5efc-8b60-f9819e76b926","name":"Example API Doc","slug":"example-api-doc","path":"/docs/example-api-doc/","items":[]}]},"breadcrumb":[{"path":"/docs/","name":"Documentation"},{"path":"/docs/mdx-guide/","name":"Guide to MDX"},{"path":"/docs/mdx-guide/errors/","name":"Syntax Errors"}],"previous":{"path":"/docs/mdx-guide/writing/","label":"Writing MDX"},"next":{"path":"/docs/styling-and-shadowing/","label":"Styling and Shadowing"}}},"staticQueryHashes":["1013078630","1013078630","1203941282","1203941282","2135897355","2135897355","2430169810","2823672990","2823672990","3216105679","3216105679","3235971795","3235971795","727480955"]}