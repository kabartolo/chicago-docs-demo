{"version":3,"sources":["webpack:///../node_modules/@babel/parser/lib/index.js"],"names":["_assertThisInitialized","_toConsumableArray","_slicedToArray","_get","_inherits","_possibleConstructorReturn","_getPrototypeOf","_createClass","_classCallCheck","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","Object","defineProperty","exports","value","TokenType","label","conf","length","undefined","keyword","beforeExpr","startsExpr","rightAssociative","isLoop","isAssign","prefix","postfix","binop","updateContext","keywords","Map","createKeyword","name","options","token","set","createBinop","types","num","bigint","decimal","regexp","string","eof","bracketL","bracketHashL","bracketBarL","bracketR","bracketBarR","braceL","braceBarL","braceHashL","braceR","braceBarR","parenL","parenR","comma","semi","colon","doubleColon","dot","question","questionDot","arrow","template","ellipsis","backQuote","dollarBraceL","at","hash","interpreterDirective","eq","assign","incDec","bang","tilde","pipeline","nullishCoalescing","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","exponent","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","RegExp","source","isNewLine","code","skipWhiteSpace","isWhitespace","Position","line","col","column","SourceLocation","start","end","filename","identifierName","last","stack","CommentsParser","_BaseParser","key","comment","loc","state","trailingComments","push","leadingComments","node","elements","takeAllComments","lastElement","i","j","commentPreviousNode","splice","newTrailingComments","_i8","leadingComment","type","body","firstChild","lastChild","commentStack","lastInStack","pop","adjustCommentsAfterTrailingComma","properties","slice","innerComments","firstTrailingCommentIndex","findIndex","BaseParser","sawUnambiguousESM","ambiguousScriptDifferentAst","plugins","has","plugin","hasPlugin","get","ErrorMessages","freeze","AccessorIsGenerator","ArgumentsInClass","AsyncFunctionInSingleStatementContext","AwaitBindingIdentifier","AwaitExpressionFormalParameter","AwaitNotInAsyncContext","AwaitNotInAsyncFunction","BadGetterArity","BadSetterArity","BadSetterRestParameter","ConstructorClassField","ConstructorClassPrivateField","ConstructorIsAccessor","ConstructorIsAsync","ConstructorIsGenerator","DeclarationMissingInitializer","DecoratorBeforeExport","DecoratorConstructor","DecoratorExportClass","DecoratorSemicolon","DecoratorStaticBlock","DeletePrivateField","DestructureNamedImport","DuplicateConstructor","DuplicateDefaultExport","DuplicateExport","DuplicateProto","DuplicateRegExpFlags","DuplicateStaticBlock","ElementAfterRest","EscapedCharNotAnIdentifier","ExportBindingIsString","ExportDefaultFromAsIdentifier","ForInOfLoopInitializer","GeneratorInSingleStatementContext","IllegalBreakContinue","IllegalLanguageModeDirective","IllegalReturn","ImportBindingIsString","ImportCallArgumentTrailingComma","ImportCallArity","ImportCallNotNewExpression","ImportCallSpreadArgument","ImportMetaOutsideModule","ImportOutsideModule","InvalidBigIntLiteral","InvalidCodePoint","InvalidDecimal","InvalidDigit","InvalidEscapeSequence","InvalidEscapeSequenceTemplate","InvalidEscapedReservedWord","InvalidIdentifier","InvalidLhs","InvalidLhsBinding","InvalidNumber","InvalidOrMissingExponent","InvalidOrUnexpectedToken","InvalidParenthesizedAssignment","InvalidPrivateFieldResolution","InvalidPropertyBindingPattern","InvalidRecordProperty","InvalidRestAssignmentPattern","LabelRedeclaration","LetInLexicalBinding","LineTerminatorBeforeArrow","MalformedRegExpFlags","MissingClassName","MissingEqInAssignment","MissingUnicodeEscape","MixingCoalesceWithLogical","ModuleAttributeDifferentFromType","ModuleAttributeInvalidValue","ModuleAttributesWithDuplicateKeys","ModuleExportNameHasLoneSurrogate","ModuleExportUndefined","MultipleDefaultsInSwitch","NewlineAfterThrow","NoCatchOrFinally","NumberIdentifier","NumericSeparatorInEscapeSequence","ObsoleteAwaitStar","OptionalChainingNoNew","OptionalChainingNoTemplate","ParamDupe","PatternHasAccessor","PatternHasMethod","PipelineBodyNoArrow","PipelineBodySequenceExpression","PipelineHeadSequenceExpression","PipelineTopicUnused","PrimaryTopicNotAllowed","PrimaryTopicRequiresSmartPipeline","PrivateInExpectedIn","PrivateNameRedeclaration","RecordExpressionBarIncorrectEndSyntaxType","RecordExpressionBarIncorrectStartSyntaxType","RecordExpressionHashIncorrectStartSyntaxType","RecordNoProto","RestTrailingComma","SloppyFunction","StaticPrototype","StrictDelete","StrictEvalArguments","StrictEvalArgumentsBinding","StrictFunction","StrictNumericEscape","StrictOctalLiteral","StrictWith","SuperNotAllowed","SuperPrivateField","TrailingDecorator","TupleExpressionBarIncorrectEndSyntaxType","TupleExpressionBarIncorrectStartSyntaxType","TupleExpressionHashIncorrectStartSyntaxType","UnexpectedArgumentPlaceholder","UnexpectedAwaitAfterPipelineBody","UnexpectedDigitAfterHash","UnexpectedImportExport","UnexpectedKeyword","UnexpectedLeadingDecorator","UnexpectedLexicalDeclaration","UnexpectedNewTarget","UnexpectedNumericSeparator","UnexpectedPrivateField","UnexpectedReservedWord","UnexpectedSuper","UnexpectedToken","UnexpectedTokenUnaryExponentiation","UnsupportedBind","UnsupportedDecoratorExport","UnsupportedDefaultExport","UnsupportedImport","UnsupportedMetaProperty","UnsupportedParameterDecorator","UnsupportedPropertyDecorator","UnsupportedSuper","UnterminatedComment","UnterminatedRegExp","UnterminatedString","UnterminatedTemplate","VarRedeclaration","YieldBindingIdentifier","YieldInParameter","ZeroDigitNumericSeparator","ParserError","_CommentsParser","_super2","pos","startLoc","lastTokStart","lastTokStartLoc","endLoc","lastTokEnd","lastTokEndLoc","input","offset","match","lineStart","lastIndex","exec","index","getLineInfo","errorTemplate","_len","params","Array","_key","raiseWithData","concat","data","_len2","_key2","getLocationForPosition","message","replace","_","_raise","errorContext","err","SyntaxError","errorRecovery","isLookahead","errors","isSimpleProperty","kind","method","TokContext","isExpr","preserveSpace","override","types$1","braceStatement","braceExpression","recordExpression","templateQuasi","parenStatement","parenExpression","p","readTmplToken","functionExpression","functionStatement","context","out","curContext","exprAllowed","prevType","allowed","isIterator","braceIsBlock","statementParens","hasPrecedingLineBreak","b_stat","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","isIdentifierStart","test","String","fromCharCode","isIdentifierChar","reservedWords","keywords$1","Set","reservedWordsStrictSet","reservedWordsStrictBindSet","isReservedWord","word","inModule","isStrictReservedWord","isStrictBindOnlyReservedWord","isStrictBindReservedWord","isKeyword","keywordRelationalOperator","reservedTypes","FlowErrors","AmbiguousConditionalArrow","AmbiguousDeclareModuleKind","AssignReservedType","DeclareClassElement","DeclareClassFieldInitializer","DuplicateDeclareModuleExports","EnumBooleanMemberNotInitialized","EnumDuplicateMemberName","EnumInconsistentMemberValues","EnumInvalidExplicitType","EnumInvalidExplicitTypeUnknownSupplied","EnumInvalidMemberInitializerPrimaryType","EnumInvalidMemberInitializerSymbolType","EnumInvalidMemberInitializerUnknownType","EnumInvalidMemberName","EnumNumberMemberNotInitialized","EnumStringMemberInconsistentlyInitailized","ImportTypeShorthandOnlyInPureImport","InexactInsideExact","InexactInsideNonObject","InexactVariance","InvalidNonTypeImportInDeclareModule","MissingTypeParamDefault","NestedDeclareModule","NestedFlowComment","OptionalBindingPattern","SpreadVariance","TypeBeforeInitializer","TypeCastInPattern","UnexpectedExplicitInexactInObject","UnexpectedReservedType","UnexpectedReservedUnderscore","UnexpectedSpaceBetweenModuloChecks","UnexpectedSpreadType","UnexpectedSubtractionOperand","UnexpectedTokenAfterTypeParameter","UnexpectedTypeParameterBeforeAsyncArrowFunction","UnsupportedDeclareExportKind","UnsupportedStatementInDeclareModule","UnterminatedFlowComment","hasTypeImportKind","importKind","isMaybeDefaultImport","exportSuggestions","const","let","interface","FLOW_PRAGMA_REGEX","entities","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","HEX_NUMBER","DECIMAL_NUMBER","JsxErrors","AttributeIsEmpty","MissingClosingTagFragment","MissingClosingTagElement","UnsupportedJsxValue","UnterminatedJsxContent","UnwrappedAdjacentJSXElements","isFragment","object","getQualifiedJSXName","namespace","property","Error","j_oTag","j_cTag","j_expr","jsxName","jsxText","jsxTagStart","jsxTagEnd","Scope","flags","var","lexical","functions","ScopeHandler","raise","scopeStack","undefinedExports","undefinedPrivateNames","createScope","scope","bindingType","currentScope","checkRedeclarationInScope","maybeExportDefined","SCOPE_PROGRAM","delete","isRedeclaredInScope","indexOf","treatFunctionsAsVarInScope","id","currentVarScope","currentThisScope","TypeScriptScope","_Scope","_super6","_this16","_len6","args","_key6","enums","constEnums","classes","exportOnlyBindings","TypeScriptScopeHandler","_ScopeHandler","_super7","isConst","wasConst","ProductionParameterHandler","stacks","currentFlags","functionFlags","isAsync","isGenerator","nonNull","x","assert","TSErrors","ClassMethodHasDeclare","ClassMethodHasReadonly","ConstructorHasTypeParameters","DeclareClassFieldHasInitializer","DeclareFunctionHasImplementation","DuplicateModifier","EmptyHeritageClauseType","EmptyTypeArguments","EmptyTypeParameters","IndexSignatureHasAbstract","IndexSignatureHasAccessibility","IndexSignatureHasStatic","IndexSignatureHasDeclare","InvalidTupleMemberLabel","MixedLabeledAndUnlabeledElements","OptionalTypeBeforeRequired","PatternIsOptional","PrivateElementHasAbstract","PrivateElementHasAccessibility","TypeAnnotationAfterAssign","UnexpectedParameterModifier","UnexpectedReadonly","UnexpectedTypeAnnotation","UnexpectedTypeCastInParameter","UnsupportedImportTypeArgument","UnsupportedParameterPropertyKind","UnsupportedSignatureParameterKind","placeholder","some","isArray","getPluginOption","option","find","PIPELINE_PROPOSALS","RECORD_AND_TUPLE_SYNTAX_TYPES","mixinPlugins","estree","superClass","_superClass","_super3","_ref","pattern","regex","estreeParseLiteral","bigInt","BigInt","parseLiteral","directive","directiveLiteral","stmt","startNodeAt","expression","raw","extra","finishNodeAt","checkDeclaration","expr","contextDescription","_get2","_len3","_key3","forEach","checkLVal","isRecord","protoRef","refExpressionErrors","_stmt$expression$extr","parenthesized","allowDirectives","topLevel","_this2","directiveStatements","directives","map","d","directiveToStmt","classBody","isConstructor","allowsDirectSuper","parseMethod","typeParameters","estreeParseRegExpLiteral","estreeParseBigIntLiteral","estreeParseDecimalLiteral","startPos","allowExpression","isMethod","allowDirectSuper","inClassScope","funcNode","startNode","finishNode","isPattern","isAccessor","shorthand","isLHS","toAssignable","_get3","_len4","_key4","optional","callee","exported","specifiers","base","noCalls","optionalChainMember","substring","stop","chain","startNodeAtNode","jsx","_superClass3","_class2","_super5","chunkStart","ch","charCodeAt","finishToken","jsxReadEntity","jsxReadNewLine","normalizeCRLF","curLine","quote","entity","str","count","substr","fromCodePoint","parseInt","unexpected","next","jsxParseIdentifier","eat","jsxParseNamespacedName","newNode","jsxParseExpressionContainer","parseExprAtom","parseExpression","expect","jsxParseEmptyExpression","argument","parseMaybeAssignAllowIn","jsxParseAttributeValue","jsxParseElementName","jsxParseOpeningElementAfterName","attributes","jsxParseAttribute","selfClosing","children","openingElement","jsxParseOpeningElementAt","closingElement","contents","jsxParseClosingElementAt","jsxParseElementAt","_node5","jsxParseSpreadChild","openingFragment","closingFragment","isRelational","jsxParseElement","inPropertyName","jsxReadToken","jsxReadWord","jsxReadString","flow","_superClass2","_temp","_super4","_this3","flowPragma","val","matches","tok","oldInType","inType","flowParseType","moduloLoc","moduloPos","checksLoc","expectContextual","predicate","flowParsePredicate","flowParseInterfaceish","parseIdentifier","typeNode","typeContainer","flowParseTypeParameterDeclaration","tmp","flowParseFunctionTypeParams","rest","_this$flowParseTypeAn","flowParseTypeAndPredicateInitialiser","_this$flowParseTypeAn2","returnType","typeAnnotation","resetEndLocation","semicolon","insideModule","flowParseDeclareClass","flowParseDeclareFunction","flowParseDeclareVariable","eatContextual","flowParseDeclareModuleExports","flowParseDeclareModule","isContextual","flowParseDeclareTypeAlias","flowParseDeclareOpaqueType","flowParseDeclareInterface","flowParseDeclareExportDeclaration","flowParseTypeAnnotatableIdentifier","declareName","BIND_KIND_VALUE","_this4","enter","bodyNode","_bodyNode","parseImport","flowParseDeclare","exit","hasModuleExport","bodyElement","declaration","isEsModuleType","default","isLet","suggestion","parseExport","exportKind","flowParseTypeAnnotation","flowParseTypeAlias","flowParseOpaqueType","isClass","flowParseRestrictedIdentifier","extends","implements","mixins","flowParseInterfaceExtends","flowParseObjectType","allowStatic","allowExact","allowSpread","allowProto","allowInexact","flowParseQualifiedTypeIdentifier","flowParseTypeParameterInstantiation","liberal","checkReservedType","right","flowParseTypeInitialiser","declare","supertype","impltype","requireDefault","nodeStart","variance","flowParseVariance","ident","bound","defaultRequired","typeParameter","flowParseTypeParameter","expectRelational","oldNoAnonFunctionType","noAnonFunctionType","flowParseTypeOrImplicitInstantiation","isStatic","static","lookahead","flowParseObjectPropertyKey","flowParseObjectTypeMethodish","flowParseFunctionTypeParam","valueNode","_ref2","endDelim","exact","callProperties","indexers","internalSlots","inexact","protoStart","inexactStart","_lookahead","flowParseObjectTypeInternalSlot","flowParseObjectTypeIndexer","flowParseObjectTypeCallProperty","_lookahead2","propOrInexact","flowParseObjectTypeProperty","flowObjectTypeSemicolon","proto","flowCheckGetterSetterParams","paramCount","node2","qualification","flowParsePrimaryType","lh","checkNotUnderscore","flowParseGenericType","isGroupedType","flowParseInterfaceType","flowIdentToTypeAnnotation","flowParseTupleType","reinterpretTypeAsFunctionTypeParam","flowParseTypeofType","canInsertSemicolon","elementType","flowParsePrefixType","flowParsePostfixType","param","flowParseAnonFunctionWithoutParens","flowParseIntersectionType","flowParseUnionType","allowPrimitiveOverride","allowExpressionBody","_this5","forwardNoArrowParamsConversionAt","_this$flowParseTypeAn3","_this$flowParseTypeAn4","strict","flowParseInterface","shouldParseEnums","_node","flowParseEnumDeclaration","isValidDirective","refNeedsArrowPos","_this6","tryParse","error","failState","clone","originalNoArrowAt","noArrowAt","_this$tryParseConditi","tryParseConditionalConsequent","consequent","failed","_this$getArrowLikeExp","getArrowLikeExpressions","_this$getArrowLikeExp2","valid","invalid","_this$tryParseConditi2","_this$getArrowLikeExp3","_this$getArrowLikeExp4","_this$tryParseConditi3","alternate","parseMaybeAssign","noArrowParamsConversionAt","disallowInvalid","_this7","arrows","_node2","finishArrowValidation","list","list1","list2","partition","every","isAssignable","_node$extra","toAssignableList","trailingComma","SCOPE_FUNCTION","parse","typeCastNode","decl","declarationNode","parseExportSpecifiers","parseExportFrom","_declarationNode","_declarationNode2","_declarationNode3","hasNamespace","isStatement","optionalId","member","parseClassMemberFromModifier","finishOp","current","isIteratorStart","isBinding","_this8","_last","element","operator","typeCastToParameter","exprList","trailingCommaPos","isParenthesizedExpr","_expr$extra","close","canBePattern","isTuple","maybeInArrowParameters","toReferencedList","_get4","_len5","_key5","superTypeParameters","implemented","_node3","isPrivateNameAllowed","left","specifier","local","firstIdentLoc","firstIdent","parseModuleExportName","specifierTypeKind","isLookaheadContextual","as_ident","imported","__clone","nodeIsTypeImport","specifierIsTypeImport","checkReservedWord","allowModifiers","afterLeftParse","_jsx","_this9","_jsx2","_jsx3","abort","_arrowExpression$extr","arrowExpression","resetStartLocationFromNode","maybeUnwrapTypeCastExpression","aborted","async","thrown","_this10","_this10$flowParseType","_this10$flowParseType2","allowDuplicates","isArrowFunction","canBeArrow","_this11","parseCallExpressionArguments","parseAsyncArrowWithTypeParameters","subscriptState","_this12","isLookaheadToken_lt","typeArguments","finishCallExpression","shouldParseTypes","_node4","flowParseTypeParameterInstantiationCallOrNew","_this13","targs","parseFunctionParams","parseArrow","parseArrowExpression","hasFlowComment","nextToken","file","program","fileNode","skipFlowComment","hasFlowCommentCompletion","shiftToFirstNonWhiteSpace","includes","ch2","ch3","_ref3","enumName","memberName","_ref4","toUpperCase","_ref5","_ref6","_ref7","suppliedType","_ref8","explicitType","_ref9","_ref10","_this14","endOfInit","literal","_literal","_literal2","parseBooleanLiteral","init","flowEnumMemberInit","expectedType","flowEnumErrorInvalidMemberInitializer","_ref11","seenNames","members","booleanMembers","numberMembers","stringMembers","defaultedMembers","memberNode","_this$flowEnumMemberR","flowEnumMemberRaw","flowEnumErrorInvalidMemberName","flowEnumErrorDuplicateMemberName","add","flowEnumCheckExplicitTypeMismatch","flowEnumErrorBooleanMemberNotInitialized","flowEnumErrorNumberMemberNotInitialized","initializedMembers","_ref12","_i","flowEnumErrorStringMemberInconsistentlyInitailized","_i2","_member","_ref13","flowEnumErrorInvalidExplicitType","_ref14","_this15","nameLoc","flowEnumParseExplicitType","flowEnumMembers","flowEnumStringMembers","boolsLen","numsLen","strsLen","defaultedLen","_i3","_members$defaultedMem","_i4","_members$defaultedMem2","_member2","flowEnumErrorInconsistentMemberValues","flowEnumBody","nextTokenStart","afterNext","typescript","_superClass4","_class3","_super8","isLiteralPropertyName","allowedModifiers","modifier","tsTryParse","tsNextTokenCanFollowModifier","bind","modified","tsParseModifier","hasOwnProperty","parseElement","tsIsListTerminator","tsParseDelimitedListWorker","expectSuccess","bracket","skipFirstToken","tsParseDelimitedList","qualifier","tsParseEntityName","tsParseTypeArguments","allowReservedWords","typeName","lhs","parameterName","tsParseTypeAnnotation","asserts","exprName","tsParseImportType","parseIdentifierName","constraint","tsEatThenParseType","tsParseTypeParameters","tsParseBracketedList","tsParseTypeParameter","tsParseTypeReference","returnToken","signature","returnTokenRequired","tsTryParseTypeParameters","parameters","tsParseBindingListForSignature","tsParseTypeOrTypePredicateAnnotation","_this17","parseBindingList","tsFillSignature","tsParseTypeMemberSemicolon","tsLookAhead","tsIsUnambiguouslyIndexSignature","tsTryParseTypeAnnotation","readonly","nodeAny","tsParseSignatureMember","createIdentifier","tsParsePropertyOrMethodSignature","idx","tsTryParseIndexSignature","parsePropertyName","tsParseObjectTypeMembers","tsParseList","tsParseTypeMember","tsIsIdentifier","tsExpectThenParseType","tsParseMappedTypeParameter","nameType","tsParseType","tsTryParseType","_this18","elementTypes","tsParseTupleElementType","seenOptionalElement","labeledElements","elementNode","_labeledElements","isLabeled","_this$state","labeledNode","optionalTypeNode","restNode","_this19","parseTemplate","thisKeyword","tsParseThisTypeNode","tsParseThisTypePredicate","keywordTypeFromName","lookaheadCharCode","tsParseLiteralTypeNode","_node6","parseMaybeUnary","tsParseThisTypeOrThisTypePredicate","tsParseTypeQuery","tsIsStartOfMappedType","tsParseMappedType","tsParseTypeLiteral","tsParseTupleType","tsParseParenthesizedType","tsParseTemplateLiteralType","tsParseNonArrayType","_node7","objectType","indexType","tsParseTypeOperatorOrHigher","tsCheckTypeAnnotationForReadOnly","_this20","kw","tsParseTypeOperator","tsParseInferType","tsParseArrayTypeOrHigher","parseConstituentType","_types","tsParseUnionOrIntersectionType","tsParseIntersectionTypeOrHigher","tsIsUnambiguouslyStartOfFunctionType","braceStackCounter","_braceStackCounter","tsSkipParameterStart","_this21","tsInType","t","tsParseTypePredicateAsserts","thisTypePredicate","_node8","typePredicateVariable","tsParseTypePredicatePrefix","_node9","containsEsc","_this22","eatColon","tsParseNonConditionalType","checkType","extendsType","trueType","falseType","tsIsStartOfFunctionType","tsParseFunctionOrConstructorType","tsParseUnionTypeOrHigher","tsTryNextParseConstantContext","tsNextThenParseType","descriptor","originalStart","delimitedList","tsParseExpressionWithTypeArguments","tsParseHeritageClause","_this23","_node10","cb","oldContext","_this24","tsDoThenParseType","_this25","_this26","initializer","BIND_TS_ENUM","tsParseEnumMember","parseBlockOrModuleBlockBody","nested","inner","tsParseModuleOrNamespaceDeclaration","prodParam","tsParseModuleBlock","global","isExport","moduleReference","tsParseModuleReference","tsIsExternalModuleReference","tsParseExternalModuleReference","f","res","nany","_this27","isLineTerminator","starttype","tsInDeclareContext","parseFunctionStatement","parseClass","tsParseEnumDeclaration","parseVarStatement","tsParseAmbientExternalModuleDeclaration","tsParseDeclaration","tsTryParseDeclare","mod","tsCheckLineTerminatorAndMatch","cls","abstract","tsParseInterfaceDeclaration","tsParseTypeAliasDeclaration","tokenType","_this28","oldMaybeInArrowParameters","tsTryParseAndCatch","tsTryParseTypeOrTypePredicateAnnotation","_this29","tsInNoContext","tsIsDeclarationStart","decorators","accessibility","parseAccessModifier","parseMaybeDefault","parseAssignableListItemTypes","elt","pp","parameter","bodilessType","isDeclareContext","items","_this30","isInParens","tsCheckForInvalidTypeCasts","_get5","_len7","_key7","_this31","nonNullExpression","atPossibleAsyncArrow","asyncArrowFn","tsTryParseGenericAsyncArrowFunction","_result","parseTaggedTemplateExpression","_this32","leftStartPos","leftStartLoc","minPrec","reScan_lt_gt","parseExprOp","checkKeywords","ahead","tsParseImportEqualsDeclaration","importNode","isAbstractClass","_this33","tsParseModifiers","callParseClassMember","methodOrProp","tsParseExpressionStatement","_this34","isDeclare","tsTryParseExportDeclaration","resetStartLocation","definite","parseClassPropertyAnnotation","_get6","_len8","_key8","_typeCast","_typeCast2","_jsx4","_typeCast3","typeCast","_get8","_this35","_len9","_key9","_get7","_get9","_typeParameters","_get10","tsParseTypeAssertion","_this36","_get11","_len10","_key10","_get12","_len11","_key11","readToken_lt_gt","_this37","baseCount","firstParam","getObjectOrClassMethodParams","oldIsDeclareContext","v8intrinsic","_superClass6","_class5","_super10","v8IntrinsicStart","identifier","parseV8Intrinsic","placeholders","_superClass5","_class4","_super9","expectedNode","assertNoSpace","finishPlaceholder","isFinished","parsePlaceholder","parseStatement","takeDecorators","oldStrict","parseClassId","parseClassSuper","parseClassBody","expectPlugin","isUnparsedContextual","startsWith","nextTokenStartSince","filter","hasStarImport","maybeParseStarImportSpecifier","parseNamedImportSpecifiers","parseImportSource","mixinPluginNames","keys","defaultOptions","sourceType","sourceFilename","startLine","allowAwaitOutsideFunction","allowReturnOutsideFunction","allowImportExportEverywhere","allowSuperOutsideMethod","allowUndeclaredExports","strictMode","ranges","tokens","createParenthesizedExpressions","State","potentialArrowAt","inPipeline","topicContext","maxNumOfResolvableTopics","maxTopicIndex","soloAwait","inFSharpPipelineDirectBody","labels","decoratorStack","comments","octalPositions","exportedIdentifiers","tokensLength","curPosition","skipArrays","_isDigit","VALID_REGEX_FLAGS","forbiddenNumericSeparatorSiblings","decBinOct","hex","allowedNumericSeparatorSiblings","oct","bin","dec","Token","UtilParser","_Tokenizer","_super12","op","nameStart","nameEnd","messageOrType","missingPlugin","names","_this39","n","join","fn","oldState","abortSignal","_failState","andThrow","shorthandAssign","doubleProto","_ParserError","Tokenizer","_super11","_this38","checkKeywordEscapes","pushToken","old","curr","lastIndexOf","skipSpace","getTokenFromCode","codePointAt","block","text","addComment","pushComment","startSkip","loop","skipBlockComment","skipLineComment","readToken_interpreter","nextPos","readNumber","readRegexp","width","size","next2","readToken_dot","readToken_question","readRadixNumber","readString","readToken_slash","readToken_mult_modulo","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_eq_excl","readToken_numberSign","readWord","escaped","inClass","charAt","content","mods","char","charCode","radix","len","forceLen","allowNumSeparator","forbiddenSiblings","allowedSiblings","total","Infinity","prev","Number","isNaN","isBigInt","readInt","startsWithDot","isFloat","isDecimal","hasExponent","isOctal","hasLeadingZero","integer","underscorePos","parseFloat","throwOnInvalid","codePos","readHexChar","readEscapedChar","containsInvalid","inTemplate","_code","readCodePoint","octalStr","octal","escStart","identifierCheck","esc","readWord1","parent","update","ExpressionErrors","Node","parser","range","unwrapParenthesizedExpression","LValParser","_NodeUtils","_super14","_node$extra3","expressionScope","recordParenthesizedIdentifierError","_last2","_node$extra2","isLast","toAssignableObjectExpressionProp","raiseRestNotLast","checkToRestConversion","arg","_last3","raiseTrailingCommaAfterRest","toReferencedListDeep","parseBindingAtom","parseObjectLike","closeCharCode","allowEmpty","elts","first","parseRestBinding","checkCommaAfterRest","parseDecorator","parseAssignableListItem","_startLoc","_startPos","_left","checkClashes","disallowLetBinding","strictModeChanged","_expr$properties","_expr$elements","elem","_UtilParser","NodeUtils","_super13","processComment","locationNode","ExpressionScope","ArrowHeadParsingScope","_ExpressionScope","_super15","_this40","iterator","ExpressionScopeHandler","isCertainlyParameterDeclaration","canBeArrowParameterDeclaration","recordDeclarationError","_this41","iterateErrors","clearDeclarationError","newExpressionScope","loopLabel","switchLabel","loneSurrogate","StatementParser","_ExpressionParser","_super17","interpreter","parseInterpreterDirective","parseBlockBody","_Array$from","from","addExtra","nextCh","parseDecorators","parseStatementContent","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","nextTokenCharCode","assertModuleNodeAllowed","isAsyncFunction","maybeName","parseLabeledStatement","parseExpressionStatement","allowExport","currentContextDecorators","decorator","canHaveLeadingDecorator","expectOnePlugin","_node12","computed","parseMaybeDecoratorArguments","parseExprSubscripts","isBreak","verifyBreakContinue","lab","_this47","withTopicForbiddingContext","parseHeaderExpression","awaitAt","isAwaitAllowed","parseFor","_init","parseVar","declarations","parseForIn","description","checkExpressionErrors","declarationPosition","parseFunction","hasReturn","discriminant","cur","sawDefault","cases","isCase","simple","_this48","handler","clause","parseCatchClauseParam","finalizer","_this49","_this50","_this$state$labels","_label","statementStart","createNewLexicalScope","afterBlockParse","hasStrictModeDirective","parsedNonDirective","stmtToDirective","setStrict","_this51","_this52","isForIn","await","isFor","isTypescript","parseVarId","parseMaybeAssignDisallowIn","_this53","statement","isHangingStatement","requireId","initFunction","generator","parseFunctionId","parseFunctionBodyAndFinish","registerFunctionStatementId","treatFunctionsAsVar","constructorAllowsSuper","_this54","classScope","hadConstructor","hadStaticBlock","parseClassMember","isClassMethod","pushClassMethod","isClassProperty","parseClassProperty","parseClassStaticBlock","parseClassMemberWithIsStatic","publicMethod","privateMethod","publicProp","privateProp","publicMember","parseClassElementName","pushClassPrivateMethod","isNonstaticConstructor","isPrivate","isSimple","maybeQuestionTokenStart","parsePostMemberNameModifiers","pushClassPrivateProperty","pushClassProperty","checkGetterSetterParams","_member$decorators","SCOPE_CLASS","oldLabels","parseClassPrivateProperty","declarePrivateName","CLASS_ELEMENT_KIND_GETTER","CLASS_ELEMENT_KIND_SETTER","parseInitializer","hasDefault","maybeParseExportDefaultSpecifier","parseAfterDefault","hasStar","eatExportStar","maybeParseExportNamespaceSpecifier","parseAfterNamespace","isFromRequired","hasDeclaration","hasSpecifiers","maybeParseExportNamedSpecifiers","maybeParseExportDeclaration","checkExport","parseExportDefaultExpression","isExportDefaultSpecifier","_node$specifiers2","shouldParseExportDeclaration","parseExportDeclaration","FUNC_STATEMENT","l","hasFrom","nextAfterFrom","assertions","maybeParseImportAssertions","checkNames","isDefault","isFrom","checkDuplicateExports","_declaration$extra","_node$specifiers","exportedName","checkLocalExport","_i5","_node$declaration$dec","_declaration","_i6","_node$properties","_i7","_node$elements","nodes","surrogate","parseNext","maybeParseDefaultImportSpecifier","maybeParseModuleAttributes","attrs","attrNames","keyName","parseAssertEntries","shouldParseDefaultImport","parseImportSpecifierLocal","parseImportSpecifier","_LValParser","ExpressionParser","_super16","used","paramFlags","disallowIn","_this42","disallowInAnd","parseExpressionBase","allowInAnd","expressions","_this43","_this44","ownExpressionErrors","hasYield","_left2","parseYield","parseMaybeConditional","parseExprOps","shouldExitDescending","parseConditional","prec","hasIn","checkPipelineAtInfixOperator","logical","coalesce","hasAwait","parseExprOpRightExpr","nextOp","_this45","withTopicPermittingContext","parseSmartPipelineBody","parseExprOpBaseRightExpr","withSoloAwaitPermittingContext","parseFSharpPipelineBody","parseAwait","isDelete","parseUpdate","_node11","parseSubscripts","maybeAsyncArrow","parseSubscript","parseBind","parseCoverCallAndAsyncArrowHead","parseMember","parseMaybePrivateName","usePrivateName","parseNoCallExpr","shouldParseAsyncArrow","validateAsPattern","parseAsyncArrowFromCallExpression","toReferencedArguments","tag","quasi","_node$arguments","possibleAsyncArrow","dynamicImport","allowPlaceholder","nodeForExtra","oldInFSharpPipelineDirectBody","parseExprListItem","_call$extra","parseSuper","parseImportMetaProperty","_last4","parseAsyncArrowUnaryFunction","parseDo","parseParenAndDistinguishExpression","parseArrayLike","parseFunctionOrFunctionSent","parseNewOrNewTarget","primaryTopicReferenceIsAllowedInCurrentTopicContext","registerTopicReference","lookaheadCh","allowSuper","meta","parseMetaProperty","propertyName","spreadStart","optionalCommaStart","innerStartPos","innerStartLoc","spreadNodeStartPos","spreadNodeStartLoc","parseParenItem","innerEndPos","innerEndLoc","arrowNode","shouldParseArrow","metaProp","inNonArrowFunction","parseNew","parseNewArguments","parseExprList","isTagged","cooked","tail","curElt","parseTemplateElement","quasis","parseTemplateSubstitution","propHash","create","parsePropertyDefinition","checkProto","parseSpread","maybeAsyncOrAccessorProp","parseObjPropValue","_params","getGetterSetterExpectedParamCount","parseObjectMethod","parseObjectProperty","oldInPropertyName","setArrowFunctionParameters","parseFunctionBody","_this46","isExpression","checkParams","nonSimple","isSimpleParamList","errorPos","_node$params","_this$state2","recordAsyncArrowParametersError","inFunction","recordParameterInitializerError","delegate","childExpression","checkSmartPipelineBodyEarlyErrors","parseSmartPipelineBodyInStyle","isSimpleReference","topicReferenceWasUsedInCurrentTopicContext","callback","outerContextTopicState","outerContextSoloAwaitState","ret","ClassScope","privateNames","loneAccessors","ClassScopeHandler","oldClassScope","_Array$from$_i2","redefined","accessor","_this$stack","Parser","_StatementParser","_super18","_this55","opts","_Object$keys","getOptions","getScopeHandler","pluginMap","_ref15","_ref16","pluginsMap","parseTopLevel","getParser","decoratorsBeforeExport","validatePlugins","pluginsFromOptions","pluginList","parserClassCache","getParserClass","_options","ast","_unused","moduleError","_unused2","getExpression","tokTypes"],"mappings":"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","file":"c6802b5e-b2934afc45338b06aa59.js","sourcesContent":["'use strict';\n\nvar _assertThisInitialized = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nvar _toConsumableArray = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _get = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _createClass = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"/home/kate/workspace/gatsby-starter-carraway-docs/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar beforeExpr = true;\nvar startsExpr = true;\nvar isLoop = true;\nvar isAssign = true;\nvar prefix = true;\nvar postfix = true;\n\nvar TokenType = function TokenType(label) {\n  var conf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  _classCallCheck(this, TokenType);\n\n  this.label = void 0;\n  this.keyword = void 0;\n  this.beforeExpr = void 0;\n  this.startsExpr = void 0;\n  this.rightAssociative = void 0;\n  this.isLoop = void 0;\n  this.isAssign = void 0;\n  this.prefix = void 0;\n  this.postfix = void 0;\n  this.binop = void 0;\n  this.updateContext = void 0;\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.rightAssociative = !!conf.rightAssociative;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop != null ? conf.binop : null;\n  this.updateContext = null;\n};\n\nvar keywords = new Map();\n\nfunction createKeyword(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.keyword = name;\n  var token = new TokenType(name, options);\n  keywords.set(name, token);\n  return token;\n}\n\nfunction createBinop(name, binop) {\n  return new TokenType(name, {\n    beforeExpr: beforeExpr,\n    binop: binop\n  });\n}\n\nvar types = {\n  num: new TokenType(\"num\", {\n    startsExpr: startsExpr\n  }),\n  bigint: new TokenType(\"bigint\", {\n    startsExpr: startsExpr\n  }),\n  decimal: new TokenType(\"decimal\", {\n    startsExpr: startsExpr\n  }),\n  regexp: new TokenType(\"regexp\", {\n    startsExpr: startsExpr\n  }),\n  string: new TokenType(\"string\", {\n    startsExpr: startsExpr\n  }),\n  name: new TokenType(\"name\", {\n    startsExpr: startsExpr\n  }),\n  eof: new TokenType(\"eof\"),\n  bracketL: new TokenType(\"[\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketHashL: new TokenType(\"#[\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketBarL: new TokenType(\"[|\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  bracketR: new TokenType(\"]\"),\n  bracketBarR: new TokenType(\"|]\"),\n  braceL: new TokenType(\"{\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceBarL: new TokenType(\"{|\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceHashL: new TokenType(\"#{\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  braceR: new TokenType(\"}\"),\n  braceBarR: new TokenType(\"|}\"),\n  parenL: new TokenType(\"(\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", {\n    beforeExpr: beforeExpr\n  }),\n  semi: new TokenType(\";\", {\n    beforeExpr: beforeExpr\n  }),\n  colon: new TokenType(\":\", {\n    beforeExpr: beforeExpr\n  }),\n  doubleColon: new TokenType(\"::\", {\n    beforeExpr: beforeExpr\n  }),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", {\n    beforeExpr: beforeExpr\n  }),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", {\n    beforeExpr: beforeExpr\n  }),\n  template: new TokenType(\"template\"),\n  ellipsis: new TokenType(\"...\", {\n    beforeExpr: beforeExpr\n  }),\n  backQuote: new TokenType(\"`\", {\n    startsExpr: startsExpr\n  }),\n  dollarBraceL: new TokenType(\"${\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  at: new TokenType(\"@\"),\n  hash: new TokenType(\"#\", {\n    startsExpr: startsExpr\n  }),\n  interpreterDirective: new TokenType(\"#!...\"),\n  eq: new TokenType(\"=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  assign: new TokenType(\"_=\", {\n    beforeExpr: beforeExpr,\n    isAssign: isAssign\n  }),\n  incDec: new TokenType(\"++/--\", {\n    prefix: prefix,\n    postfix: postfix,\n    startsExpr: startsExpr\n  }),\n  bang: new TokenType(\"!\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  tilde: new TokenType(\"~\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  pipeline: createBinop(\"|>\", 0),\n  nullishCoalescing: createBinop(\"??\", 1),\n  logicalOR: createBinop(\"||\", 1),\n  logicalAND: createBinop(\"&&\", 2),\n  bitwiseOR: createBinop(\"|\", 3),\n  bitwiseXOR: createBinop(\"^\", 4),\n  bitwiseAND: createBinop(\"&\", 5),\n  equality: createBinop(\"==/!=/===/!==\", 6),\n  relational: createBinop(\"</>/<=/>=\", 7),\n  bitShift: createBinop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {\n    beforeExpr: beforeExpr,\n    binop: 9,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  modulo: new TokenType(\"%\", {\n    beforeExpr: beforeExpr,\n    binop: 10,\n    startsExpr: startsExpr\n  }),\n  star: new TokenType(\"*\", {\n    binop: 10\n  }),\n  slash: createBinop(\"/\", 10),\n  exponent: new TokenType(\"**\", {\n    beforeExpr: beforeExpr,\n    binop: 11,\n    rightAssociative: true\n  }),\n  _break: createKeyword(\"break\"),\n  _case: createKeyword(\"case\", {\n    beforeExpr: beforeExpr\n  }),\n  _catch: createKeyword(\"catch\"),\n  _continue: createKeyword(\"continue\"),\n  _debugger: createKeyword(\"debugger\"),\n  _default: createKeyword(\"default\", {\n    beforeExpr: beforeExpr\n  }),\n  _do: createKeyword(\"do\", {\n    isLoop: isLoop,\n    beforeExpr: beforeExpr\n  }),\n  _else: createKeyword(\"else\", {\n    beforeExpr: beforeExpr\n  }),\n  _finally: createKeyword(\"finally\"),\n  _for: createKeyword(\"for\", {\n    isLoop: isLoop\n  }),\n  _function: createKeyword(\"function\", {\n    startsExpr: startsExpr\n  }),\n  _if: createKeyword(\"if\"),\n  _return: createKeyword(\"return\", {\n    beforeExpr: beforeExpr\n  }),\n  _switch: createKeyword(\"switch\"),\n  _throw: createKeyword(\"throw\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _try: createKeyword(\"try\"),\n  _var: createKeyword(\"var\"),\n  _const: createKeyword(\"const\"),\n  _while: createKeyword(\"while\", {\n    isLoop: isLoop\n  }),\n  _with: createKeyword(\"with\"),\n  _new: createKeyword(\"new\", {\n    beforeExpr: beforeExpr,\n    startsExpr: startsExpr\n  }),\n  _this: createKeyword(\"this\", {\n    startsExpr: startsExpr\n  }),\n  _super: createKeyword(\"super\", {\n    startsExpr: startsExpr\n  }),\n  _class: createKeyword(\"class\", {\n    startsExpr: startsExpr\n  }),\n  _extends: createKeyword(\"extends\", {\n    beforeExpr: beforeExpr\n  }),\n  _export: createKeyword(\"export\"),\n  _import: createKeyword(\"import\", {\n    startsExpr: startsExpr\n  }),\n  _null: createKeyword(\"null\", {\n    startsExpr: startsExpr\n  }),\n  _true: createKeyword(\"true\", {\n    startsExpr: startsExpr\n  }),\n  _false: createKeyword(\"false\", {\n    startsExpr: startsExpr\n  }),\n  _in: createKeyword(\"in\", {\n    beforeExpr: beforeExpr,\n    binop: 7\n  }),\n  _instanceof: createKeyword(\"instanceof\", {\n    beforeExpr: beforeExpr,\n    binop: 7\n  }),\n  _typeof: createKeyword(\"typeof\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _void: createKeyword(\"void\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  }),\n  _delete: createKeyword(\"delete\", {\n    beforeExpr: beforeExpr,\n    prefix: prefix,\n    startsExpr: startsExpr\n  })\n};\nvar lineBreak = /\\r\\n?|[\\n\\u2028\\u2029]/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  switch (code) {\n    case 10:\n    case 13:\n    case 8232:\n    case 8233:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nfunction isWhitespace(code) {\n  switch (code) {\n    case 0x0009:\n    case 0x000b:\n    case 0x000c:\n    case 32:\n    case 160:\n    case 5760:\n    case 0x2000:\n    case 0x2001:\n    case 0x2002:\n    case 0x2003:\n    case 0x2004:\n    case 0x2005:\n    case 0x2006:\n    case 0x2007:\n    case 0x2008:\n    case 0x2009:\n    case 0x200a:\n    case 0x202f:\n    case 0x205f:\n    case 0x3000:\n    case 0xfeff:\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nvar Position = function Position(line, col) {\n  _classCallCheck(this, Position);\n\n  this.line = void 0;\n  this.column = void 0;\n  this.line = line;\n  this.column = col;\n};\n\nvar SourceLocation = function SourceLocation(start, end) {\n  _classCallCheck(this, SourceLocation);\n\n  this.start = void 0;\n  this.end = void 0;\n  this.filename = void 0;\n  this.identifierName = void 0;\n  this.start = start;\n  this.end = end;\n};\n\nfunction getLineInfo(input, offset) {\n  var line = 1;\n  var lineStart = 0;\n  var match;\n  lineBreakG.lastIndex = 0;\n\n  while ((match = lineBreakG.exec(input)) && match.index < offset) {\n    line++;\n    lineStart = lineBreakG.lastIndex;\n  }\n\n  return new Position(line, offset - lineStart);\n}\n\nvar BaseParser = /*#__PURE__*/function () {\n  function BaseParser() {\n    _classCallCheck(this, BaseParser);\n\n    this.sawUnambiguousESM = false;\n    this.ambiguousScriptDifferentAst = false;\n  }\n\n  _createClass(BaseParser, [{\n    key: \"hasPlugin\",\n    value: function hasPlugin(name) {\n      return this.plugins.has(name);\n    }\n  }, {\n    key: \"getPluginOption\",\n    value: function getPluginOption(plugin, name) {\n      if (this.hasPlugin(plugin)) return this.plugins.get(plugin)[name];\n    }\n  }]);\n\n  return BaseParser;\n}();\n\nfunction last(stack) {\n  return stack[stack.length - 1];\n}\n\nvar CommentsParser = /*#__PURE__*/function (_BaseParser) {\n  _inherits(CommentsParser, _BaseParser);\n\n  var _super = _createSuper(CommentsParser);\n\n  function CommentsParser() {\n    _classCallCheck(this, CommentsParser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CommentsParser, [{\n    key: \"addComment\",\n    value: function addComment(comment) {\n      if (this.filename) comment.loc.filename = this.filename;\n      this.state.trailingComments.push(comment);\n      this.state.leadingComments.push(comment);\n    }\n  }, {\n    key: \"adjustCommentsAfterTrailingComma\",\n    value: function adjustCommentsAfterTrailingComma(node, elements, takeAllComments) {\n      if (this.state.leadingComments.length === 0) {\n        return;\n      }\n\n      var lastElement = null;\n      var i = elements.length;\n\n      while (lastElement === null && i > 0) {\n        lastElement = elements[--i];\n      }\n\n      if (lastElement === null) {\n        return;\n      }\n\n      for (var j = 0; j < this.state.leadingComments.length; j++) {\n        if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n          this.state.leadingComments.splice(j, 1);\n          j--;\n        }\n      }\n\n      var newTrailingComments = [];\n\n      for (var _i8 = 0; _i8 < this.state.leadingComments.length; _i8++) {\n        var leadingComment = this.state.leadingComments[_i8];\n\n        if (leadingComment.end < node.end) {\n          newTrailingComments.push(leadingComment);\n\n          if (!takeAllComments) {\n            this.state.leadingComments.splice(_i8, 1);\n            _i8--;\n          }\n        } else {\n          if (node.trailingComments === undefined) {\n            node.trailingComments = [];\n          }\n\n          node.trailingComments.push(leadingComment);\n        }\n      }\n\n      if (takeAllComments) this.state.leadingComments = [];\n\n      if (newTrailingComments.length > 0) {\n        lastElement.trailingComments = newTrailingComments;\n      } else if (lastElement.trailingComments !== undefined) {\n        lastElement.trailingComments = [];\n      }\n    }\n  }, {\n    key: \"processComment\",\n    value: function processComment(node) {\n      if (node.type === \"Program\" && node.body.length > 0) return;\n      var stack = this.state.commentStack;\n      var firstChild, lastChild, trailingComments, i, j;\n\n      if (this.state.trailingComments.length > 0) {\n        if (this.state.trailingComments[0].start >= node.end) {\n          trailingComments = this.state.trailingComments;\n          this.state.trailingComments = [];\n        } else {\n          this.state.trailingComments.length = 0;\n        }\n      } else if (stack.length > 0) {\n        var lastInStack = last(stack);\n\n        if (lastInStack.trailingComments && lastInStack.trailingComments[0].start >= node.end) {\n          trailingComments = lastInStack.trailingComments;\n          delete lastInStack.trailingComments;\n        }\n      }\n\n      if (stack.length > 0 && last(stack).start >= node.start) {\n        firstChild = stack.pop();\n      }\n\n      while (stack.length > 0 && last(stack).start >= node.start) {\n        lastChild = stack.pop();\n      }\n\n      if (!lastChild && firstChild) lastChild = firstChild;\n\n      if (firstChild) {\n        switch (node.type) {\n          case \"ObjectExpression\":\n            this.adjustCommentsAfterTrailingComma(node, node.properties);\n            break;\n\n          case \"ObjectPattern\":\n            this.adjustCommentsAfterTrailingComma(node, node.properties, true);\n            break;\n\n          case \"CallExpression\":\n            this.adjustCommentsAfterTrailingComma(node, node.arguments);\n            break;\n\n          case \"ArrayExpression\":\n            this.adjustCommentsAfterTrailingComma(node, node.elements);\n            break;\n\n          case \"ArrayPattern\":\n            this.adjustCommentsAfterTrailingComma(node, node.elements, true);\n            break;\n        }\n      } else if (this.state.commentPreviousNode && (this.state.commentPreviousNode.type === \"ImportSpecifier\" && node.type !== \"ImportSpecifier\" || this.state.commentPreviousNode.type === \"ExportSpecifier\" && node.type !== \"ExportSpecifier\")) {\n        this.adjustCommentsAfterTrailingComma(node, [this.state.commentPreviousNode]);\n      }\n\n      if (lastChild) {\n        if (lastChild.leadingComments) {\n          if (lastChild !== node && lastChild.leadingComments.length > 0 && last(lastChild.leadingComments).end <= node.start) {\n            node.leadingComments = lastChild.leadingComments;\n            delete lastChild.leadingComments;\n          } else {\n            for (i = lastChild.leadingComments.length - 2; i >= 0; --i) {\n              if (lastChild.leadingComments[i].end <= node.start) {\n                node.leadingComments = lastChild.leadingComments.splice(0, i + 1);\n                break;\n              }\n            }\n          }\n        }\n      } else if (this.state.leadingComments.length > 0) {\n        if (last(this.state.leadingComments).end <= node.start) {\n          if (this.state.commentPreviousNode) {\n            for (j = 0; j < this.state.leadingComments.length; j++) {\n              if (this.state.leadingComments[j].end < this.state.commentPreviousNode.end) {\n                this.state.leadingComments.splice(j, 1);\n                j--;\n              }\n            }\n          }\n\n          if (this.state.leadingComments.length > 0) {\n            node.leadingComments = this.state.leadingComments;\n            this.state.leadingComments = [];\n          }\n        } else {\n          for (i = 0; i < this.state.leadingComments.length; i++) {\n            if (this.state.leadingComments[i].end > node.start) {\n              break;\n            }\n          }\n\n          var leadingComments = this.state.leadingComments.slice(0, i);\n\n          if (leadingComments.length) {\n            node.leadingComments = leadingComments;\n          }\n\n          trailingComments = this.state.leadingComments.slice(i);\n\n          if (trailingComments.length === 0) {\n            trailingComments = null;\n          }\n        }\n      }\n\n      this.state.commentPreviousNode = node;\n\n      if (trailingComments) {\n        if (trailingComments.length && trailingComments[0].start >= node.start && last(trailingComments).end <= node.end) {\n          node.innerComments = trailingComments;\n        } else {\n          var firstTrailingCommentIndex = trailingComments.findIndex(function (comment) {\n            return comment.end >= node.end;\n          });\n\n          if (firstTrailingCommentIndex > 0) {\n            node.innerComments = trailingComments.slice(0, firstTrailingCommentIndex);\n            node.trailingComments = trailingComments.slice(firstTrailingCommentIndex);\n          } else {\n            node.trailingComments = trailingComments;\n          }\n        }\n      }\n\n      stack.push(node);\n    }\n  }]);\n\n  return CommentsParser;\n}(BaseParser);\n\nvar ErrorMessages = Object.freeze({\n  AccessorIsGenerator: \"A %0ter cannot be a generator\",\n  ArgumentsInClass: \"'arguments' is only allowed in functions and class methods\",\n  AsyncFunctionInSingleStatementContext: \"Async functions can only be declared at the top level or inside a block\",\n  AwaitBindingIdentifier: \"Can not use 'await' as identifier inside an async function\",\n  AwaitExpressionFormalParameter: \"await is not allowed in async function parameters\",\n  AwaitNotInAsyncContext: \"'await' is only allowed within async functions and at the top levels of modules\",\n  AwaitNotInAsyncFunction: \"'await' is only allowed within async functions\",\n  BadGetterArity: \"getter must not have any formal parameters\",\n  BadSetterArity: \"setter must have exactly one formal parameter\",\n  BadSetterRestParameter: \"setter function argument must not be a rest parameter\",\n  ConstructorClassField: \"Classes may not have a field named 'constructor'\",\n  ConstructorClassPrivateField: \"Classes may not have a private field named '#constructor'\",\n  ConstructorIsAccessor: \"Class constructor may not be an accessor\",\n  ConstructorIsAsync: \"Constructor can't be an async function\",\n  ConstructorIsGenerator: \"Constructor can't be a generator\",\n  DeclarationMissingInitializer: \"%0 require an initialization value\",\n  DecoratorBeforeExport: \"Decorators must be placed *before* the 'export' keyword. You can set the 'decoratorsBeforeExport' option to false to use the 'export @decorator class {}' syntax\",\n  DecoratorConstructor: \"Decorators can't be used with a constructor. Did you mean '@dec class { ... }'?\",\n  DecoratorExportClass: \"Using the export keyword between a decorator and a class is not allowed. Please use `export @dec class` instead.\",\n  DecoratorSemicolon: \"Decorators must not be followed by a semicolon\",\n  DecoratorStaticBlock: \"Decorators can't be used with a static block\",\n  DeletePrivateField: \"Deleting a private field is not allowed\",\n  DestructureNamedImport: \"ES2015 named imports do not destructure. Use another statement for destructuring after the import.\",\n  DuplicateConstructor: \"Duplicate constructor in the same class\",\n  DuplicateDefaultExport: \"Only one default export allowed per module.\",\n  DuplicateExport: \"`%0` has already been exported. Exported identifiers must be unique.\",\n  DuplicateProto: \"Redefinition of __proto__ property\",\n  DuplicateRegExpFlags: \"Duplicate regular expression flag\",\n  DuplicateStaticBlock: \"Duplicate static block in the same class\",\n  ElementAfterRest: \"Rest element must be last element\",\n  EscapedCharNotAnIdentifier: \"Invalid Unicode escape\",\n  ExportBindingIsString: \"A string literal cannot be used as an exported binding without `from`.\\n- Did you mean `export { %0 as '%1' } from 'some-module'`?\",\n  ExportDefaultFromAsIdentifier: \"'from' is not allowed as an identifier after 'export default'\",\n  ForInOfLoopInitializer: \"%0 loop variable declaration may not have an initializer\",\n  GeneratorInSingleStatementContext: \"Generators can only be declared at the top level or inside a block\",\n  IllegalBreakContinue: \"Unsyntactic %0\",\n  IllegalLanguageModeDirective: \"Illegal 'use strict' directive in function with non-simple parameter list\",\n  IllegalReturn: \"'return' outside of function\",\n  ImportBindingIsString: 'A string literal cannot be used as an imported binding.\\n- Did you mean `import { \"%0\" as foo }`?',\n  ImportCallArgumentTrailingComma: \"Trailing comma is disallowed inside import(...) arguments\",\n  ImportCallArity: \"import() requires exactly %0\",\n  ImportCallNotNewExpression: \"Cannot use new with import(...)\",\n  ImportCallSpreadArgument: \"... is not allowed in import()\",\n  ImportMetaOutsideModule: \"import.meta may appear only with 'sourceType: \\\"module\\\"'\",\n  ImportOutsideModule: \"'import' and 'export' may appear only with 'sourceType: \\\"module\\\"'\",\n  InvalidBigIntLiteral: \"Invalid BigIntLiteral\",\n  InvalidCodePoint: \"Code point out of bounds\",\n  InvalidDecimal: \"Invalid decimal\",\n  InvalidDigit: \"Expected number in radix %0\",\n  InvalidEscapeSequence: \"Bad character escape sequence\",\n  InvalidEscapeSequenceTemplate: \"Invalid escape sequence in template\",\n  InvalidEscapedReservedWord: \"Escape sequence in keyword %0\",\n  InvalidIdentifier: \"Invalid identifier %0\",\n  InvalidLhs: \"Invalid left-hand side in %0\",\n  InvalidLhsBinding: \"Binding invalid left-hand side in %0\",\n  InvalidNumber: \"Invalid number\",\n  InvalidOrMissingExponent: \"Floating-point numbers require a valid exponent after the 'e'\",\n  InvalidOrUnexpectedToken: \"Unexpected character '%0'\",\n  InvalidParenthesizedAssignment: \"Invalid parenthesized assignment pattern\",\n  InvalidPrivateFieldResolution: \"Private name #%0 is not defined\",\n  InvalidPropertyBindingPattern: \"Binding member expression\",\n  InvalidRecordProperty: \"Only properties and spread elements are allowed in record definitions\",\n  InvalidRestAssignmentPattern: \"Invalid rest operator's argument\",\n  LabelRedeclaration: \"Label '%0' is already declared\",\n  LetInLexicalBinding: \"'let' is not allowed to be used as a name in 'let' or 'const' declarations.\",\n  LineTerminatorBeforeArrow: \"No line break is allowed before '=>'\",\n  MalformedRegExpFlags: \"Invalid regular expression flag\",\n  MissingClassName: \"A class name is required\",\n  MissingEqInAssignment: \"Only '=' operator can be used for specifying default value.\",\n  MissingUnicodeEscape: \"Expecting Unicode escape sequence \\\\uXXXX\",\n  MixingCoalesceWithLogical: \"Nullish coalescing operator(??) requires parens when mixing with logical operators\",\n  ModuleAttributeDifferentFromType: \"The only accepted module attribute is `type`\",\n  ModuleAttributeInvalidValue: \"Only string literals are allowed as module attribute values\",\n  ModuleAttributesWithDuplicateKeys: 'Duplicate key \"%0\" is not allowed in module attributes',\n  ModuleExportNameHasLoneSurrogate: \"An export name cannot include a lone surrogate, found '\\\\u%0'\",\n  ModuleExportUndefined: \"Export '%0' is not defined\",\n  MultipleDefaultsInSwitch: \"Multiple default clauses\",\n  NewlineAfterThrow: \"Illegal newline after throw\",\n  NoCatchOrFinally: \"Missing catch or finally clause\",\n  NumberIdentifier: \"Identifier directly after number\",\n  NumericSeparatorInEscapeSequence: \"Numeric separators are not allowed inside unicode escape sequences or hex escape sequences\",\n  ObsoleteAwaitStar: \"await* has been removed from the async functions proposal. Use Promise.all() instead.\",\n  OptionalChainingNoNew: \"constructors in/after an Optional Chain are not allowed\",\n  OptionalChainingNoTemplate: \"Tagged Template Literals are not allowed in optionalChain\",\n  ParamDupe: \"Argument name clash\",\n  PatternHasAccessor: \"Object pattern can't contain getter or setter\",\n  PatternHasMethod: \"Object pattern can't contain methods\",\n  PipelineBodyNoArrow: 'Unexpected arrow \"=>\" after pipeline body; arrow function in pipeline body must be parenthesized',\n  PipelineBodySequenceExpression: \"Pipeline body may not be a comma-separated sequence expression\",\n  PipelineHeadSequenceExpression: \"Pipeline head should not be a comma-separated sequence expression\",\n  PipelineTopicUnused: \"Pipeline is in topic style but does not use topic reference\",\n  PrimaryTopicNotAllowed: \"Topic reference was used in a lexical context without topic binding\",\n  PrimaryTopicRequiresSmartPipeline: \"Primary Topic Reference found but pipelineOperator not passed 'smart' for 'proposal' option.\",\n  PrivateInExpectedIn: \"Private names are only allowed in property accesses (`obj.#%0`) or in `in` expressions (`#%0 in obj`)\",\n  PrivateNameRedeclaration: \"Duplicate private name #%0\",\n  RecordExpressionBarIncorrectEndSyntaxType: \"Record expressions ending with '|}' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionBarIncorrectStartSyntaxType: \"Record expressions starting with '{|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  RecordExpressionHashIncorrectStartSyntaxType: \"Record expressions starting with '#{' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  RecordNoProto: \"'__proto__' is not allowed in Record expressions\",\n  RestTrailingComma: \"Unexpected trailing comma after rest element\",\n  SloppyFunction: \"In non-strict mode code, functions can only be declared at top level, inside a block, or as the body of an if statement\",\n  StaticPrototype: \"Classes may not have static property named prototype\",\n  StrictDelete: \"Deleting local variable in strict mode\",\n  StrictEvalArguments: \"Assigning to '%0' in strict mode\",\n  StrictEvalArgumentsBinding: \"Binding '%0' in strict mode\",\n  StrictFunction: \"In strict mode code, functions can only be declared at top level or inside a block\",\n  StrictNumericEscape: \"The only valid numeric escape in strict mode is '\\\\0'\",\n  StrictOctalLiteral: \"Legacy octal literals are not allowed in strict mode\",\n  StrictWith: \"'with' in strict mode\",\n  SuperNotAllowed: \"super() is only valid inside a class constructor of a subclass. Maybe a typo in the method name ('constructor') or not extending another class?\",\n  SuperPrivateField: \"Private fields can't be accessed on super\",\n  TrailingDecorator: \"Decorators must be attached to a class element\",\n  TupleExpressionBarIncorrectEndSyntaxType: \"Tuple expressions ending with '|]' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionBarIncorrectStartSyntaxType: \"Tuple expressions starting with '[|' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'bar'\",\n  TupleExpressionHashIncorrectStartSyntaxType: \"Tuple expressions starting with '#[' are only allowed when the 'syntaxType' option of the 'recordAndTuple' plugin is set to 'hash'\",\n  UnexpectedArgumentPlaceholder: \"Unexpected argument placeholder\",\n  UnexpectedAwaitAfterPipelineBody: 'Unexpected \"await\" after pipeline body; await must have parentheses in minimal proposal',\n  UnexpectedDigitAfterHash: \"Unexpected digit after hash token\",\n  UnexpectedImportExport: \"'import' and 'export' may only appear at the top level\",\n  UnexpectedKeyword: \"Unexpected keyword '%0'\",\n  UnexpectedLeadingDecorator: \"Leading decorators must be attached to a class declaration\",\n  UnexpectedLexicalDeclaration: \"Lexical declaration cannot appear in a single-statement context\",\n  UnexpectedNewTarget: \"new.target can only be used in functions\",\n  UnexpectedNumericSeparator: \"A numeric separator is only allowed between two digits\",\n  UnexpectedPrivateField: \"Private names can only be used as the name of a class element (i.e. class C { #p = 42; #m() {} } )\\n or a property of member expression (i.e. this.#p).\",\n  UnexpectedReservedWord: \"Unexpected reserved word '%0'\",\n  UnexpectedSuper: \"super is only allowed in object methods and classes\",\n  UnexpectedToken: \"Unexpected token '%0'\",\n  UnexpectedTokenUnaryExponentiation: \"Illegal expression. Wrap left hand side or entire exponentiation in parentheses.\",\n  UnsupportedBind: \"Binding should be performed on object property.\",\n  UnsupportedDecoratorExport: \"A decorated export must export a class declaration\",\n  UnsupportedDefaultExport: \"Only expressions, functions or classes are allowed as the `default` export.\",\n  UnsupportedImport: \"import can only be used in import() or import.meta\",\n  UnsupportedMetaProperty: \"The only valid meta property for %0 is %0.%1\",\n  UnsupportedParameterDecorator: \"Decorators cannot be used to decorate parameters\",\n  UnsupportedPropertyDecorator: \"Decorators cannot be used to decorate object literal properties\",\n  UnsupportedSuper: \"super can only be used with function calls (i.e. super()) or in property accesses (i.e. super.prop or super[prop])\",\n  UnterminatedComment: \"Unterminated comment\",\n  UnterminatedRegExp: \"Unterminated regular expression\",\n  UnterminatedString: \"Unterminated string constant\",\n  UnterminatedTemplate: \"Unterminated template\",\n  VarRedeclaration: \"Identifier '%0' has already been declared\",\n  YieldBindingIdentifier: \"Can not use 'yield' as identifier inside a generator\",\n  YieldInParameter: \"Yield expression is not allowed in formal parameters\",\n  ZeroDigitNumericSeparator: \"Numeric separator can not be used after leading 0\"\n});\n\nvar ParserError = /*#__PURE__*/function (_CommentsParser) {\n  _inherits(ParserError, _CommentsParser);\n\n  var _super2 = _createSuper(ParserError);\n\n  function ParserError() {\n    _classCallCheck(this, ParserError);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(ParserError, [{\n    key: \"getLocationForPosition\",\n    value: function getLocationForPosition(pos) {\n      var loc;\n      if (pos === this.state.start) loc = this.state.startLoc;else if (pos === this.state.lastTokStart) loc = this.state.lastTokStartLoc;else if (pos === this.state.end) loc = this.state.endLoc;else if (pos === this.state.lastTokEnd) loc = this.state.lastTokEndLoc;else loc = getLineInfo(this.input, pos);\n      return loc;\n    }\n  }, {\n    key: \"raise\",\n    value: function raise(pos, errorTemplate) {\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      return this.raiseWithData.apply(this, [pos, undefined, errorTemplate].concat(params));\n    }\n  }, {\n    key: \"raiseWithData\",\n    value: function raiseWithData(pos, data, errorTemplate) {\n      for (var _len2 = arguments.length, params = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        params[_key2 - 3] = arguments[_key2];\n      }\n\n      var loc = this.getLocationForPosition(pos);\n      var message = errorTemplate.replace(/%(\\d+)/g, function (_, i) {\n        return params[i];\n      }) + \" (\".concat(loc.line, \":\").concat(loc.column, \")\");\n      return this._raise(Object.assign({\n        loc: loc,\n        pos: pos\n      }, data), message);\n    }\n  }, {\n    key: \"_raise\",\n    value: function _raise(errorContext, message) {\n      var err = new SyntaxError(message);\n      Object.assign(err, errorContext);\n\n      if (this.options.errorRecovery) {\n        if (!this.isLookahead) this.state.errors.push(err);\n        return err;\n      } else {\n        throw err;\n      }\n    }\n  }]);\n\n  return ParserError;\n}(CommentsParser);\n\nfunction isSimpleProperty(node) {\n  return node != null && node.type === \"Property\" && node.kind === \"init\" && node.method === false;\n}\n\nvar estree = function estree(superClass) {\n  return /*#__PURE__*/function (_superClass) {\n    _inherits(_class, _superClass);\n\n    var _super3 = _createSuper(_class);\n\n    function _class() {\n      _classCallCheck(this, _class);\n\n      return _super3.apply(this, arguments);\n    }\n\n    _createClass(_class, [{\n      key: \"estreeParseRegExpLiteral\",\n      value: function estreeParseRegExpLiteral(_ref) {\n        var pattern = _ref.pattern,\n            flags = _ref.flags;\n        var regex = null;\n\n        try {\n          regex = new RegExp(pattern, flags);\n        } catch (e) {}\n\n        var node = this.estreeParseLiteral(regex);\n        node.regex = {\n          pattern: pattern,\n          flags: flags\n        };\n        return node;\n      }\n    }, {\n      key: \"estreeParseBigIntLiteral\",\n      value: function estreeParseBigIntLiteral(value) {\n        var bigInt = typeof BigInt !== \"undefined\" ? BigInt(value) : null;\n        var node = this.estreeParseLiteral(bigInt);\n        node.bigint = String(node.value || value);\n        return node;\n      }\n    }, {\n      key: \"estreeParseDecimalLiteral\",\n      value: function estreeParseDecimalLiteral(value) {\n        var decimal = null;\n        var node = this.estreeParseLiteral(decimal);\n        node.decimal = String(node.value || value);\n        return node;\n      }\n    }, {\n      key: \"estreeParseLiteral\",\n      value: function estreeParseLiteral(value) {\n        return this.parseLiteral(value, \"Literal\");\n      }\n    }, {\n      key: \"directiveToStmt\",\n      value: function directiveToStmt(directive) {\n        var directiveLiteral = directive.value;\n        var stmt = this.startNodeAt(directive.start, directive.loc.start);\n        var expression = this.startNodeAt(directiveLiteral.start, directiveLiteral.loc.start);\n        expression.value = directiveLiteral.value;\n        expression.raw = directiveLiteral.extra.raw;\n        stmt.expression = this.finishNodeAt(expression, \"Literal\", directiveLiteral.end, directiveLiteral.loc.end);\n        stmt.directive = directiveLiteral.extra.raw.slice(1, -1);\n        return this.finishNodeAt(stmt, \"ExpressionStatement\", directive.end, directive.loc.end);\n      }\n    }, {\n      key: \"initFunction\",\n      value: function initFunction(node, isAsync) {\n        _get(_getPrototypeOf(_class.prototype), \"initFunction\", this).call(this, node, isAsync);\n\n        node.expression = false;\n      }\n    }, {\n      key: \"checkDeclaration\",\n      value: function checkDeclaration(node) {\n        if (isSimpleProperty(node)) {\n          this.checkDeclaration(node.value);\n        } else {\n          _get(_getPrototypeOf(_class.prototype), \"checkDeclaration\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"getObjectOrClassMethodParams\",\n      value: function getObjectOrClassMethodParams(method) {\n        return method.value.params;\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr, contextDescription) {\n        var _this = this,\n            _get2;\n\n        for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          args[_key3 - 2] = arguments[_key3];\n        }\n\n        switch (expr.type) {\n          case \"ObjectPattern\":\n            expr.properties.forEach(function (prop) {\n              _this.checkLVal.apply(_this, [prop.type === \"Property\" ? prop.value : prop, \"object destructuring pattern\"].concat(args));\n            });\n            break;\n\n          default:\n            (_get2 = _get(_getPrototypeOf(_class.prototype), \"checkLVal\", this)).call.apply(_get2, [this, expr, contextDescription].concat(args));\n\n        }\n      }\n    }, {\n      key: \"checkProto\",\n      value: function checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n        if (prop.method) {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class.prototype), \"checkProto\", this).call(this, prop, isRecord, protoRef, refExpressionErrors);\n      }\n    }, {\n      key: \"isValidDirective\",\n      value: function isValidDirective(stmt) {\n        var _stmt$expression$extr;\n\n        return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"Literal\" && typeof stmt.expression.value === \"string\" && !((_stmt$expression$extr = stmt.expression.extra) == null ? void 0 : _stmt$expression$extr.parenthesized);\n      }\n    }, {\n      key: \"stmtToDirective\",\n      value: function stmtToDirective(stmt) {\n        var directive = _get(_getPrototypeOf(_class.prototype), \"stmtToDirective\", this).call(this, stmt);\n\n        var value = stmt.expression.value;\n        directive.value.value = value;\n        return directive;\n      }\n    }, {\n      key: \"parseBlockBody\",\n      value: function parseBlockBody(node, allowDirectives, topLevel, end) {\n        var _this2 = this;\n\n        _get(_getPrototypeOf(_class.prototype), \"parseBlockBody\", this).call(this, node, allowDirectives, topLevel, end);\n\n        var directiveStatements = node.directives.map(function (d) {\n          return _this2.directiveToStmt(d);\n        });\n        node.body = directiveStatements.concat(node.body);\n        delete node.directives;\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true);\n\n        if (method.typeParameters) {\n          method.value.typeParameters = method.typeParameters;\n          delete method.typeParameters;\n        }\n\n        classBody.body.push(method);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom(refExpressionErrors) {\n        switch (this.state.type) {\n          case types.num:\n          case types.string:\n            return this.estreeParseLiteral(this.state.value);\n\n          case types.regexp:\n            return this.estreeParseRegExpLiteral(this.state.value);\n\n          case types.bigint:\n            return this.estreeParseBigIntLiteral(this.state.value);\n\n          case types.decimal:\n            return this.estreeParseDecimalLiteral(this.state.value);\n\n          case types._null:\n            return this.estreeParseLiteral(null);\n\n          case types._true:\n            return this.estreeParseLiteral(true);\n\n          case types._false:\n            return this.estreeParseLiteral(false);\n\n          default:\n            return _get(_getPrototypeOf(_class.prototype), \"parseExprAtom\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"parseLiteral\",\n      value: function parseLiteral(value, type, startPos, startLoc) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseLiteral\", this).call(this, value, type, startPos, startLoc);\n\n        node.raw = node.extra.raw;\n        delete node.extra;\n        return node;\n      }\n    }, {\n      key: \"parseFunctionBody\",\n      value: function parseFunctionBody(node, allowExpression) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        _get(_getPrototypeOf(_class.prototype), \"parseFunctionBody\", this).call(this, node, allowExpression, isMethod);\n\n        node.expression = node.body.type !== \"BlockStatement\";\n      }\n    }, {\n      key: \"parseMethod\",\n      value: function parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type) {\n        var inClassScope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n        var funcNode = this.startNode();\n        funcNode.kind = node.kind;\n        funcNode = _get(_getPrototypeOf(_class.prototype), \"parseMethod\", this).call(this, funcNode, isGenerator, isAsync, isConstructor, allowDirectSuper, type, inClassScope);\n        funcNode.type = \"FunctionExpression\";\n        delete funcNode.kind;\n        node.value = funcNode;\n        type = type === \"ClassMethod\" ? \"MethodDefinition\" : type;\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"parseObjectMethod\",\n      value: function parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseObjectMethod\", this).call(this, prop, isGenerator, isAsync, isPattern, isAccessor);\n\n        if (node) {\n          node.type = \"Property\";\n          if (node.kind === \"method\") node.kind = \"init\";\n          node.shorthand = false;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseObjectProperty\",\n      value: function parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseObjectProperty\", this).call(this, prop, startPos, startLoc, isPattern, refExpressionErrors);\n\n        if (node) {\n          node.kind = \"init\";\n          node.type = \"Property\";\n        }\n\n        return node;\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (isSimpleProperty(node)) {\n          this.toAssignable(node.value);\n          return node;\n        }\n\n        return _get(_getPrototypeOf(_class.prototype), \"toAssignable\", this).call(this, node, isLHS);\n      }\n    }, {\n      key: \"toAssignableObjectExpressionProp\",\n      value: function toAssignableObjectExpressionProp(prop) {\n        if (prop.kind === \"get\" || prop.kind === \"set\") {\n          throw this.raise(prop.key.start, ErrorMessages.PatternHasAccessor);\n        } else if (prop.method) {\n          throw this.raise(prop.key.start, ErrorMessages.PatternHasMethod);\n        } else {\n          var _get3;\n\n          for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n            args[_key4 - 1] = arguments[_key4];\n          }\n\n          (_get3 = _get(_getPrototypeOf(_class.prototype), \"toAssignableObjectExpressionProp\", this)).call.apply(_get3, [this, prop].concat(args));\n        }\n      }\n    }, {\n      key: \"finishCallExpression\",\n      value: function finishCallExpression(node, optional) {\n        _get(_getPrototypeOf(_class.prototype), \"finishCallExpression\", this).call(this, node, optional);\n\n        if (node.callee.type === \"Import\") {\n          node.type = \"ImportExpression\";\n          node.source = node.arguments[0];\n          delete node.arguments;\n          delete node.callee;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"toReferencedArguments\",\n      value: function toReferencedArguments(node) {\n        if (node.type === \"ImportExpression\") {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class.prototype), \"toReferencedArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        _get(_getPrototypeOf(_class.prototype), \"parseExport\", this).call(this, node);\n\n        switch (node.type) {\n          case \"ExportAllDeclaration\":\n            node.exported = null;\n            break;\n\n          case \"ExportNamedDeclaration\":\n            if (node.specifiers.length === 1 && node.specifiers[0].type === \"ExportNamespaceSpecifier\") {\n              node.type = \"ExportAllDeclaration\";\n              node.exported = node.specifiers[0].exported;\n              delete node.specifiers;\n            }\n\n            break;\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n        var node = _get(_getPrototypeOf(_class.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, state);\n\n        if (state.optionalChainMember) {\n          if (node.type === \"OptionalMemberExpression\" || node.type === \"OptionalCallExpression\") {\n            node.type = node.type.substring(8);\n          }\n\n          if (state.stop) {\n            var chain = this.startNodeAtNode(node);\n            chain.expression = node;\n            return this.finishNode(chain, \"ChainExpression\");\n          }\n        } else if (node.type === \"MemberExpression\" || node.type === \"CallExpression\") {\n          node.optional = false;\n        }\n\n        return node;\n      }\n    }]);\n\n    return _class;\n  }(superClass);\n};\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override) {\n  _classCallCheck(this, TokContext);\n\n  this.token = void 0;\n  this.isExpr = void 0;\n  this.preserveSpace = void 0;\n  this.override = void 0;\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n};\n\nvar types$1 = {\n  braceStatement: new TokContext(\"{\", false),\n  braceExpression: new TokContext(\"{\", true),\n  recordExpression: new TokContext(\"#{\", true),\n  templateQuasi: new TokContext(\"${\", false),\n  parenStatement: new TokContext(\"(\", false),\n  parenExpression: new TokContext(\"(\", true),\n  template: new TokContext(\"`\", true, true, function (p) {\n    return p.readTmplToken();\n  }),\n  functionExpression: new TokContext(\"function\", true),\n  functionStatement: new TokContext(\"function\", false)\n};\n\ntypes.parenR.updateContext = types.braceR.updateContext = function () {\n  if (this.state.context.length === 1) {\n    this.state.exprAllowed = true;\n    return;\n  }\n\n  var out = this.state.context.pop();\n\n  if (out === types$1.braceStatement && this.curContext().token === \"function\") {\n    out = this.state.context.pop();\n  }\n\n  this.state.exprAllowed = !out.isExpr;\n};\n\ntypes.name.updateContext = function (prevType) {\n  var allowed = false;\n\n  if (prevType !== types.dot) {\n    if (this.state.value === \"of\" && !this.state.exprAllowed && prevType !== types._function && prevType !== types._class) {\n      allowed = true;\n    }\n  }\n\n  this.state.exprAllowed = allowed;\n\n  if (this.state.isIterator) {\n    this.state.isIterator = false;\n  }\n};\n\ntypes.braceL.updateContext = function (prevType) {\n  this.state.context.push(this.braceIsBlock(prevType) ? types$1.braceStatement : types$1.braceExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function () {\n  this.state.context.push(types$1.templateQuasi);\n  this.state.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function (prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.state.context.push(statementParens ? types$1.parenStatement : types$1.parenExpression);\n  this.state.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function () {};\n\ntypes._function.updateContext = types._class.updateContext = function (prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else && !(prevType === types._return && this.hasPrecedingLineBreak()) && !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat)) {\n    this.state.context.push(types$1.functionExpression);\n  } else {\n    this.state.context.push(types$1.functionStatement);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function () {\n  if (this.curContext() === types$1.template) {\n    this.state.context.pop();\n  } else {\n    this.state.context.push(types$1.template);\n  }\n\n  this.state.exprAllowed = false;\n};\n\ntypes.braceHashL.updateContext = function () {\n  this.state.context.push(types$1.recordExpression);\n  this.state.exprAllowed = true;\n};\n\nvar nonASCIIidentifierStartChars = \"\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC\";\nvar nonASCIIidentifierChars = \"\\u200C\\u200D\\xB7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08D3-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF\\u1AC0\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DF9\\u1DFB-\\u1DFF\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F\";\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 157, 310, 10, 21, 11, 7, 153, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 107, 20, 28, 22, 13, 52, 76, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 230, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 35, 56, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2749, 1070, 4050, 582, 8634, 568, 8, 30, 114, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8952, 286, 50, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 2357, 44, 11, 6, 17, 0, 370, 43, 1301, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42717, 35, 4148, 12, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 176, 2, 54, 14, 32, 9, 16, 3, 46, 10, 54, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 135, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 5319, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 419, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n\n  for (var i = 0, length = set.length; i < length; i += 2) {\n    pos += set[i];\n    if (pos > code) return false;\n    pos += set[i + 1];\n    if (pos >= code) return true;\n  }\n\n  return false;\n}\n\nfunction isIdentifierStart(code) {\n  if (code < 65) return code === 36;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes);\n}\n\nfunction isIdentifierChar(code) {\n  if (code < 48) return code === 36;\n  if (code < 58) return true;\n  if (code < 65) return false;\n  if (code <= 90) return true;\n  if (code < 97) return code === 95;\n  if (code <= 122) return true;\n\n  if (code <= 0xffff) {\n    return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code));\n  }\n\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes);\n}\n\nvar reservedWords = {\n  keyword: [\"break\", \"case\", \"catch\", \"continue\", \"debugger\", \"default\", \"do\", \"else\", \"finally\", \"for\", \"function\", \"if\", \"return\", \"switch\", \"throw\", \"try\", \"var\", \"const\", \"while\", \"with\", \"new\", \"this\", \"super\", \"class\", \"extends\", \"export\", \"import\", \"null\", \"true\", \"false\", \"in\", \"instanceof\", \"typeof\", \"void\", \"delete\"],\n  strict: [\"implements\", \"interface\", \"let\", \"package\", \"private\", \"protected\", \"public\", \"static\", \"yield\"],\n  strictBind: [\"eval\", \"arguments\"]\n};\nvar keywords$1 = new Set(reservedWords.keyword);\nvar reservedWordsStrictSet = new Set(reservedWords.strict);\nvar reservedWordsStrictBindSet = new Set(reservedWords.strictBind);\n\nfunction isReservedWord(word, inModule) {\n  return inModule && word === \"await\" || word === \"enum\";\n}\n\nfunction isStrictReservedWord(word, inModule) {\n  return isReservedWord(word, inModule) || reservedWordsStrictSet.has(word);\n}\n\nfunction isStrictBindOnlyReservedWord(word) {\n  return reservedWordsStrictBindSet.has(word);\n}\n\nfunction isStrictBindReservedWord(word, inModule) {\n  return isStrictReservedWord(word, inModule) || isStrictBindOnlyReservedWord(word);\n}\n\nfunction isKeyword(word) {\n  return keywords$1.has(word);\n}\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\nfunction isIteratorStart(current, next) {\n  return current === 64 && next === 64;\n}\n\nvar SCOPE_OTHER = 0,\n    SCOPE_PROGRAM = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ARROW = 4,\n    SCOPE_SIMPLE_CATCH = 8,\n    SCOPE_SUPER = 16,\n    SCOPE_DIRECT_SUPER = 32,\n    SCOPE_CLASS = 64,\n    SCOPE_TS_MODULE = 128,\n    SCOPE_VAR = SCOPE_PROGRAM | SCOPE_FUNCTION | SCOPE_TS_MODULE;\nvar BIND_KIND_VALUE = 1,\n    BIND_KIND_TYPE = 2,\n    BIND_SCOPE_VAR = 4,\n    BIND_SCOPE_LEXICAL = 8,\n    BIND_SCOPE_FUNCTION = 16,\n    BIND_FLAGS_NONE = 64,\n    BIND_FLAGS_CLASS = 128,\n    BIND_FLAGS_TS_ENUM = 256,\n    BIND_FLAGS_TS_CONST_ENUM = 512,\n    BIND_FLAGS_TS_EXPORT_ONLY = 1024;\nvar BIND_CLASS = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_CLASS,\n    BIND_LEXICAL = BIND_KIND_VALUE | 0 | BIND_SCOPE_LEXICAL | 0,\n    BIND_VAR = BIND_KIND_VALUE | 0 | BIND_SCOPE_VAR | 0,\n    BIND_FUNCTION = BIND_KIND_VALUE | 0 | BIND_SCOPE_FUNCTION | 0,\n    BIND_TS_INTERFACE = 0 | BIND_KIND_TYPE | 0 | BIND_FLAGS_CLASS,\n    BIND_TS_TYPE = 0 | BIND_KIND_TYPE | 0 | 0,\n    BIND_TS_ENUM = BIND_KIND_VALUE | BIND_KIND_TYPE | BIND_SCOPE_LEXICAL | BIND_FLAGS_TS_ENUM,\n    BIND_TS_AMBIENT = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY,\n    BIND_NONE = 0 | 0 | 0 | BIND_FLAGS_NONE,\n    BIND_OUTSIDE = BIND_KIND_VALUE | 0 | 0 | BIND_FLAGS_NONE,\n    BIND_TS_CONST_ENUM = BIND_TS_ENUM | BIND_FLAGS_TS_CONST_ENUM,\n    BIND_TS_NAMESPACE = 0 | 0 | 0 | BIND_FLAGS_TS_EXPORT_ONLY;\nvar CLASS_ELEMENT_FLAG_STATIC = 4,\n    CLASS_ELEMENT_KIND_GETTER = 2,\n    CLASS_ELEMENT_KIND_SETTER = 1,\n    CLASS_ELEMENT_KIND_ACCESSOR = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_KIND_SETTER;\nvar CLASS_ELEMENT_STATIC_GETTER = CLASS_ELEMENT_KIND_GETTER | CLASS_ELEMENT_FLAG_STATIC,\n    CLASS_ELEMENT_STATIC_SETTER = CLASS_ELEMENT_KIND_SETTER | CLASS_ELEMENT_FLAG_STATIC,\n    CLASS_ELEMENT_INSTANCE_GETTER = CLASS_ELEMENT_KIND_GETTER,\n    CLASS_ELEMENT_INSTANCE_SETTER = CLASS_ELEMENT_KIND_SETTER,\n    CLASS_ELEMENT_OTHER = 0;\nvar reservedTypes = new Set([\"_\", \"any\", \"bool\", \"boolean\", \"empty\", \"extends\", \"false\", \"interface\", \"mixed\", \"null\", \"number\", \"static\", \"string\", \"true\", \"typeof\", \"void\"]);\nvar FlowErrors = Object.freeze({\n  AmbiguousConditionalArrow: \"Ambiguous expression: wrap the arrow functions in parentheses to disambiguate.\",\n  AmbiguousDeclareModuleKind: \"Found both `declare module.exports` and `declare export` in the same module. Modules can only have 1 since they are either an ES module or they are a CommonJS module\",\n  AssignReservedType: \"Cannot overwrite reserved type %0\",\n  DeclareClassElement: \"The `declare` modifier can only appear on class fields.\",\n  DeclareClassFieldInitializer: \"Initializers are not allowed in fields with the `declare` modifier.\",\n  DuplicateDeclareModuleExports: \"Duplicate `declare module.exports` statement\",\n  EnumBooleanMemberNotInitialized: \"Boolean enum members need to be initialized. Use either `%0 = true,` or `%0 = false,` in enum `%1`.\",\n  EnumDuplicateMemberName: \"Enum member names need to be unique, but the name `%0` has already been used before in enum `%1`.\",\n  EnumInconsistentMemberValues: \"Enum `%0` has inconsistent member initializers. Either use no initializers, or consistently use literals (either booleans, numbers, or strings) for all member initializers.\",\n  EnumInvalidExplicitType: \"Enum type `%1` is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidExplicitTypeUnknownSupplied: \"Supplied enum type is not valid. Use one of `boolean`, `number`, `string`, or `symbol` in enum `%0`.\",\n  EnumInvalidMemberInitializerPrimaryType: \"Enum `%0` has type `%2`, so the initializer of `%1` needs to be a %2 literal.\",\n  EnumInvalidMemberInitializerSymbolType: \"Symbol enum members cannot be initialized. Use `%1,` in enum `%0`.\",\n  EnumInvalidMemberInitializerUnknownType: \"The enum member initializer for `%1` needs to be a literal (either a boolean, number, or string) in enum `%0`.\",\n  EnumInvalidMemberName: \"Enum member names cannot start with lowercase 'a' through 'z'. Instead of using `%0`, consider using `%1`, in enum `%2`.\",\n  EnumNumberMemberNotInitialized: \"Number enum members need to be initialized, e.g. `%1 = 1` in enum `%0`.\",\n  EnumStringMemberInconsistentlyInitailized: \"String enum members need to consistently either all use initializers, or use no initializers, in enum `%0`.\",\n  ImportTypeShorthandOnlyInPureImport: \"The `type` and `typeof` keywords on named imports can only be used on regular `import` statements. It cannot be used with `import type` or `import typeof` statements\",\n  InexactInsideExact: \"Explicit inexact syntax cannot appear inside an explicit exact object type\",\n  InexactInsideNonObject: \"Explicit inexact syntax cannot appear in class or interface definitions\",\n  InexactVariance: \"Explicit inexact syntax cannot have variance\",\n  InvalidNonTypeImportInDeclareModule: \"Imports within a `declare module` body must always be `import type` or `import typeof`\",\n  MissingTypeParamDefault: \"Type parameter declaration needs a default, since a preceding type parameter declaration has a default.\",\n  NestedDeclareModule: \"`declare module` cannot be used inside another `declare module`\",\n  NestedFlowComment: \"Cannot have a flow comment inside another flow comment\",\n  OptionalBindingPattern: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  SpreadVariance: \"Spread properties cannot have variance\",\n  TypeBeforeInitializer: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  TypeCastInPattern: \"The type cast expression is expected to be wrapped with parenthesis\",\n  UnexpectedExplicitInexactInObject: \"Explicit inexact syntax must appear at the end of an inexact object\",\n  UnexpectedReservedType: \"Unexpected reserved type %0\",\n  UnexpectedReservedUnderscore: \"`_` is only allowed as a type argument to call or new\",\n  UnexpectedSpaceBetweenModuloChecks: \"Spaces between `%` and `checks` are not allowed here.\",\n  UnexpectedSpreadType: \"Spread operator cannot appear in class or interface definitions\",\n  UnexpectedSubtractionOperand: 'Unexpected token, expected \"number\" or \"bigint\"',\n  UnexpectedTokenAfterTypeParameter: \"Expected an arrow function after this type parameter declaration\",\n  UnexpectedTypeParameterBeforeAsyncArrowFunction: \"Type parameters must come after the async keyword, e.g. instead of `<T> async () => {}`, use `async <T>() => {}`\",\n  UnsupportedDeclareExportKind: \"`declare export %0` is not supported. Use `%1` instead\",\n  UnsupportedStatementInDeclareModule: \"Only declares and type imports are allowed inside declare module\",\n  UnterminatedFlowComment: \"Unterminated flow-comment\"\n});\n\nfunction isEsModuleType(bodyElement) {\n  return bodyElement.type === \"DeclareExportAllDeclaration\" || bodyElement.type === \"DeclareExportDeclaration\" && (!bodyElement.declaration || bodyElement.declaration.type !== \"TypeAlias\" && bodyElement.declaration.type !== \"InterfaceDeclaration\");\n}\n\nfunction hasTypeImportKind(node) {\n  return node.importKind === \"type\" || node.importKind === \"typeof\";\n}\n\nfunction isMaybeDefaultImport(state) {\n  return (state.type === types.name || !!state.type.keyword) && state.value !== \"from\";\n}\n\nvar exportSuggestions = {\n  const: \"declare export var\",\n  let: \"declare export var\",\n  type: \"export type\",\n  interface: \"export interface\"\n};\n\nfunction partition(list, test) {\n  var list1 = [];\n  var list2 = [];\n\n  for (var i = 0; i < list.length; i++) {\n    (test(list[i], i, list) ? list1 : list2).push(list[i]);\n  }\n\n  return [list1, list2];\n}\n\nvar FLOW_PRAGMA_REGEX = /\\*?\\s*@((?:no)?flow)\\b/;\n\nvar flow = function flow(superClass) {\n  var _temp;\n\n  return _temp = /*#__PURE__*/function (_superClass2) {\n    _inherits(_temp, _superClass2);\n\n    var _super4 = _createSuper(_temp);\n\n    function _temp(options, input) {\n      var _this3;\n\n      _classCallCheck(this, _temp);\n\n      _this3 = _super4.call(this, options, input);\n      _this3.flowPragma = void 0;\n      _this3.flowPragma = undefined;\n      return _this3;\n    }\n\n    _createClass(_temp, [{\n      key: \"shouldParseTypes\",\n      value: function shouldParseTypes() {\n        return this.getPluginOption(\"flow\", \"all\") || this.flowPragma === \"flow\";\n      }\n    }, {\n      key: \"shouldParseEnums\",\n      value: function shouldParseEnums() {\n        return !!this.getPluginOption(\"flow\", \"enums\");\n      }\n    }, {\n      key: \"finishToken\",\n      value: function finishToken(type, val) {\n        if (type !== types.string && type !== types.semi && type !== types.interpreterDirective) {\n          if (this.flowPragma === undefined) {\n            this.flowPragma = null;\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"finishToken\", this).call(this, type, val);\n      }\n    }, {\n      key: \"addComment\",\n      value: function addComment(comment) {\n        if (this.flowPragma === undefined) {\n          var matches = FLOW_PRAGMA_REGEX.exec(comment.value);\n          if (!matches) ;else if (matches[1] === \"flow\") {\n            this.flowPragma = \"flow\";\n          } else if (matches[1] === \"noflow\") {\n            this.flowPragma = \"noflow\";\n          } else {\n            throw new Error(\"Unexpected flow pragma\");\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"addComment\", this).call(this, comment);\n      }\n    }, {\n      key: \"flowParseTypeInitialiser\",\n      value: function flowParseTypeInitialiser(tok) {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        this.expect(tok || types.colon);\n        var type = this.flowParseType();\n        this.state.inType = oldInType;\n        return type;\n      }\n    }, {\n      key: \"flowParsePredicate\",\n      value: function flowParsePredicate() {\n        var node = this.startNode();\n        var moduloLoc = this.state.startLoc;\n        var moduloPos = this.state.start;\n        this.expect(types.modulo);\n        var checksLoc = this.state.startLoc;\n        this.expectContextual(\"checks\");\n\n        if (moduloLoc.line !== checksLoc.line || moduloLoc.column !== checksLoc.column - 1) {\n          this.raise(moduloPos, FlowErrors.UnexpectedSpaceBetweenModuloChecks);\n        }\n\n        if (this.eat(types.parenL)) {\n          node.value = this.parseExpression();\n          this.expect(types.parenR);\n          return this.finishNode(node, \"DeclaredPredicate\");\n        } else {\n          return this.finishNode(node, \"InferredPredicate\");\n        }\n      }\n    }, {\n      key: \"flowParseTypeAndPredicateInitialiser\",\n      value: function flowParseTypeAndPredicateInitialiser() {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        this.expect(types.colon);\n        var type = null;\n        var predicate = null;\n\n        if (this.match(types.modulo)) {\n          this.state.inType = oldInType;\n          predicate = this.flowParsePredicate();\n        } else {\n          type = this.flowParseType();\n          this.state.inType = oldInType;\n\n          if (this.match(types.modulo)) {\n            predicate = this.flowParsePredicate();\n          }\n        }\n\n        return [type, predicate];\n      }\n    }, {\n      key: \"flowParseDeclareClass\",\n      value: function flowParseDeclareClass(node) {\n        this.next();\n        this.flowParseInterfaceish(node, true);\n        return this.finishNode(node, \"DeclareClass\");\n      }\n    }, {\n      key: \"flowParseDeclareFunction\",\n      value: function flowParseDeclareFunction(node) {\n        this.next();\n        var id = node.id = this.parseIdentifier();\n        var typeNode = this.startNode();\n        var typeContainer = this.startNode();\n\n        if (this.isRelational(\"<\")) {\n          typeNode.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          typeNode.typeParameters = null;\n        }\n\n        this.expect(types.parenL);\n        var tmp = this.flowParseFunctionTypeParams();\n        typeNode.params = tmp.params;\n        typeNode.rest = tmp.rest;\n        this.expect(types.parenR);\n\n        var _this$flowParseTypeAn = this.flowParseTypeAndPredicateInitialiser();\n\n        var _this$flowParseTypeAn2 = _slicedToArray(_this$flowParseTypeAn, 2);\n\n        typeNode.returnType = _this$flowParseTypeAn2[0];\n        node.predicate = _this$flowParseTypeAn2[1];\n        typeContainer.typeAnnotation = this.finishNode(typeNode, \"FunctionTypeAnnotation\");\n        id.typeAnnotation = this.finishNode(typeContainer, \"TypeAnnotation\");\n        this.resetEndLocation(id);\n        this.semicolon();\n        return this.finishNode(node, \"DeclareFunction\");\n      }\n    }, {\n      key: \"flowParseDeclare\",\n      value: function flowParseDeclare(node, insideModule) {\n        if (this.match(types._class)) {\n          return this.flowParseDeclareClass(node);\n        } else if (this.match(types._function)) {\n          return this.flowParseDeclareFunction(node);\n        } else if (this.match(types._var)) {\n          return this.flowParseDeclareVariable(node);\n        } else if (this.eatContextual(\"module\")) {\n          if (this.match(types.dot)) {\n            return this.flowParseDeclareModuleExports(node);\n          } else {\n            if (insideModule) {\n              this.raise(this.state.lastTokStart, FlowErrors.NestedDeclareModule);\n            }\n\n            return this.flowParseDeclareModule(node);\n          }\n        } else if (this.isContextual(\"type\")) {\n          return this.flowParseDeclareTypeAlias(node);\n        } else if (this.isContextual(\"opaque\")) {\n          return this.flowParseDeclareOpaqueType(node);\n        } else if (this.isContextual(\"interface\")) {\n          return this.flowParseDeclareInterface(node);\n        } else if (this.match(types._export)) {\n          return this.flowParseDeclareExportDeclaration(node, insideModule);\n        } else {\n          throw this.unexpected();\n        }\n      }\n    }, {\n      key: \"flowParseDeclareVariable\",\n      value: function flowParseDeclareVariable(node) {\n        this.next();\n        node.id = this.flowParseTypeAnnotatableIdentifier(true);\n        this.scope.declareName(node.id.name, BIND_VAR, node.id.start);\n        this.semicolon();\n        return this.finishNode(node, \"DeclareVariable\");\n      }\n    }, {\n      key: \"flowParseDeclareModule\",\n      value: function flowParseDeclareModule(node) {\n        var _this4 = this;\n\n        this.scope.enter(SCOPE_OTHER);\n\n        if (this.match(types.string)) {\n          node.id = this.parseExprAtom();\n        } else {\n          node.id = this.parseIdentifier();\n        }\n\n        var bodyNode = node.body = this.startNode();\n        var body = bodyNode.body = [];\n        this.expect(types.braceL);\n\n        while (!this.match(types.braceR)) {\n          var _bodyNode = this.startNode();\n\n          if (this.match(types._import)) {\n            this.next();\n\n            if (!this.isContextual(\"type\") && !this.match(types._typeof)) {\n              this.raise(this.state.lastTokStart, FlowErrors.InvalidNonTypeImportInDeclareModule);\n            }\n\n            this.parseImport(_bodyNode);\n          } else {\n            this.expectContextual(\"declare\", FlowErrors.UnsupportedStatementInDeclareModule);\n            _bodyNode = this.flowParseDeclare(_bodyNode, true);\n          }\n\n          body.push(_bodyNode);\n        }\n\n        this.scope.exit();\n        this.expect(types.braceR);\n        this.finishNode(bodyNode, \"BlockStatement\");\n        var kind = null;\n        var hasModuleExport = false;\n        body.forEach(function (bodyElement) {\n          if (isEsModuleType(bodyElement)) {\n            if (kind === \"CommonJS\") {\n              _this4.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n            }\n\n            kind = \"ES\";\n          } else if (bodyElement.type === \"DeclareModuleExports\") {\n            if (hasModuleExport) {\n              _this4.raise(bodyElement.start, FlowErrors.DuplicateDeclareModuleExports);\n            }\n\n            if (kind === \"ES\") {\n              _this4.raise(bodyElement.start, FlowErrors.AmbiguousDeclareModuleKind);\n            }\n\n            kind = \"CommonJS\";\n            hasModuleExport = true;\n          }\n        });\n        node.kind = kind || \"CommonJS\";\n        return this.finishNode(node, \"DeclareModule\");\n      }\n    }, {\n      key: \"flowParseDeclareExportDeclaration\",\n      value: function flowParseDeclareExportDeclaration(node, insideModule) {\n        this.expect(types._export);\n\n        if (this.eat(types._default)) {\n          if (this.match(types._function) || this.match(types._class)) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n          } else {\n            node.declaration = this.flowParseType();\n            this.semicolon();\n          }\n\n          node.default = true;\n          return this.finishNode(node, \"DeclareExportDeclaration\");\n        } else {\n          if (this.match(types._const) || this.isLet() || (this.isContextual(\"type\") || this.isContextual(\"interface\")) && !insideModule) {\n            var label = this.state.value;\n            var suggestion = exportSuggestions[label];\n            throw this.raise(this.state.start, FlowErrors.UnsupportedDeclareExportKind, label, suggestion);\n          }\n\n          if (this.match(types._var) || this.match(types._function) || this.match(types._class) || this.isContextual(\"opaque\")) {\n            node.declaration = this.flowParseDeclare(this.startNode());\n            node.default = false;\n            return this.finishNode(node, \"DeclareExportDeclaration\");\n          } else if (this.match(types.star) || this.match(types.braceL) || this.isContextual(\"interface\") || this.isContextual(\"type\") || this.isContextual(\"opaque\")) {\n            node = this.parseExport(node);\n\n            if (node.type === \"ExportNamedDeclaration\") {\n              node.type = \"ExportDeclaration\";\n              node.default = false;\n              delete node.exportKind;\n            }\n\n            node.type = \"Declare\" + node.type;\n            return node;\n          }\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"flowParseDeclareModuleExports\",\n      value: function flowParseDeclareModuleExports(node) {\n        this.next();\n        this.expectContextual(\"exports\");\n        node.typeAnnotation = this.flowParseTypeAnnotation();\n        this.semicolon();\n        return this.finishNode(node, \"DeclareModuleExports\");\n      }\n    }, {\n      key: \"flowParseDeclareTypeAlias\",\n      value: function flowParseDeclareTypeAlias(node) {\n        this.next();\n        this.flowParseTypeAlias(node);\n        node.type = \"DeclareTypeAlias\";\n        return node;\n      }\n    }, {\n      key: \"flowParseDeclareOpaqueType\",\n      value: function flowParseDeclareOpaqueType(node) {\n        this.next();\n        this.flowParseOpaqueType(node, true);\n        node.type = \"DeclareOpaqueType\";\n        return node;\n      }\n    }, {\n      key: \"flowParseDeclareInterface\",\n      value: function flowParseDeclareInterface(node) {\n        this.next();\n        this.flowParseInterfaceish(node);\n        return this.finishNode(node, \"DeclareInterface\");\n      }\n    }, {\n      key: \"flowParseInterfaceish\",\n      value: function flowParseInterfaceish(node) {\n        var isClass = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        node.id = this.flowParseRestrictedIdentifier(!isClass, true);\n        this.scope.declareName(node.id.name, isClass ? BIND_FUNCTION : BIND_LEXICAL, node.id.start);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.extends = [];\n        node.implements = [];\n        node.mixins = [];\n\n        if (this.eat(types._extends)) {\n          do {\n            node.extends.push(this.flowParseInterfaceExtends());\n          } while (!isClass && this.eat(types.comma));\n        }\n\n        if (this.isContextual(\"mixins\")) {\n          this.next();\n\n          do {\n            node.mixins.push(this.flowParseInterfaceExtends());\n          } while (this.eat(types.comma));\n        }\n\n        if (this.isContextual(\"implements\")) {\n          this.next();\n\n          do {\n            node.implements.push(this.flowParseInterfaceExtends());\n          } while (this.eat(types.comma));\n        }\n\n        node.body = this.flowParseObjectType({\n          allowStatic: isClass,\n          allowExact: false,\n          allowSpread: false,\n          allowProto: isClass,\n          allowInexact: false\n        });\n      }\n    }, {\n      key: \"flowParseInterfaceExtends\",\n      value: function flowParseInterfaceExtends() {\n        var node = this.startNode();\n        node.id = this.flowParseQualifiedTypeIdentifier();\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        } else {\n          node.typeParameters = null;\n        }\n\n        return this.finishNode(node, \"InterfaceExtends\");\n      }\n    }, {\n      key: \"flowParseInterface\",\n      value: function flowParseInterface(node) {\n        this.flowParseInterfaceish(node);\n        return this.finishNode(node, \"InterfaceDeclaration\");\n      }\n    }, {\n      key: \"checkNotUnderscore\",\n      value: function checkNotUnderscore(word) {\n        if (word === \"_\") {\n          this.raise(this.state.start, FlowErrors.UnexpectedReservedUnderscore);\n        }\n      }\n    }, {\n      key: \"checkReservedType\",\n      value: function checkReservedType(word, startLoc, declaration) {\n        if (!reservedTypes.has(word)) return;\n        this.raise(startLoc, declaration ? FlowErrors.AssignReservedType : FlowErrors.UnexpectedReservedType, word);\n      }\n    }, {\n      key: \"flowParseRestrictedIdentifier\",\n      value: function flowParseRestrictedIdentifier(liberal, declaration) {\n        this.checkReservedType(this.state.value, this.state.start, declaration);\n        return this.parseIdentifier(liberal);\n      }\n    }, {\n      key: \"flowParseTypeAlias\",\n      value: function flowParseTypeAlias(node) {\n        node.id = this.flowParseRestrictedIdentifier(false, true);\n        this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.right = this.flowParseTypeInitialiser(types.eq);\n        this.semicolon();\n        return this.finishNode(node, \"TypeAlias\");\n      }\n    }, {\n      key: \"flowParseOpaqueType\",\n      value: function flowParseOpaqueType(node, declare) {\n        this.expectContextual(\"type\");\n        node.id = this.flowParseRestrictedIdentifier(true, true);\n        this.scope.declareName(node.id.name, BIND_LEXICAL, node.id.start);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        } else {\n          node.typeParameters = null;\n        }\n\n        node.supertype = null;\n\n        if (this.match(types.colon)) {\n          node.supertype = this.flowParseTypeInitialiser(types.colon);\n        }\n\n        node.impltype = null;\n\n        if (!declare) {\n          node.impltype = this.flowParseTypeInitialiser(types.eq);\n        }\n\n        this.semicolon();\n        return this.finishNode(node, \"OpaqueType\");\n      }\n    }, {\n      key: \"flowParseTypeParameter\",\n      value: function flowParseTypeParameter() {\n        var requireDefault = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var nodeStart = this.state.start;\n        var node = this.startNode();\n        var variance = this.flowParseVariance();\n        var ident = this.flowParseTypeAnnotatableIdentifier();\n        node.name = ident.name;\n        node.variance = variance;\n        node.bound = ident.typeAnnotation;\n\n        if (this.match(types.eq)) {\n          this.eat(types.eq);\n          node.default = this.flowParseType();\n        } else {\n          if (requireDefault) {\n            this.raise(nodeStart, FlowErrors.MissingTypeParamDefault);\n          }\n        }\n\n        return this.finishNode(node, \"TypeParameter\");\n      }\n    }, {\n      key: \"flowParseTypeParameterDeclaration\",\n      value: function flowParseTypeParameterDeclaration() {\n        var oldInType = this.state.inType;\n        var node = this.startNode();\n        node.params = [];\n        this.state.inType = true;\n\n        if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n          this.next();\n        } else {\n          this.unexpected();\n        }\n\n        var defaultRequired = false;\n\n        do {\n          var typeParameter = this.flowParseTypeParameter(defaultRequired);\n          node.params.push(typeParameter);\n\n          if (typeParameter.default) {\n            defaultRequired = true;\n          }\n\n          if (!this.isRelational(\">\")) {\n            this.expect(types.comma);\n          }\n        } while (!this.isRelational(\">\"));\n\n        this.expectRelational(\">\");\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterDeclaration\");\n      }\n    }, {\n      key: \"flowParseTypeParameterInstantiation\",\n      value: function flowParseTypeParameterInstantiation() {\n        var node = this.startNode();\n        var oldInType = this.state.inType;\n        node.params = [];\n        this.state.inType = true;\n        this.expectRelational(\"<\");\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n        this.state.noAnonFunctionType = false;\n\n        while (!this.isRelational(\">\")) {\n          node.params.push(this.flowParseType());\n\n          if (!this.isRelational(\">\")) {\n            this.expect(types.comma);\n          }\n        }\n\n        this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        this.expectRelational(\">\");\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterInstantiation\");\n      }\n    }, {\n      key: \"flowParseTypeParameterInstantiationCallOrNew\",\n      value: function flowParseTypeParameterInstantiationCallOrNew() {\n        var node = this.startNode();\n        var oldInType = this.state.inType;\n        node.params = [];\n        this.state.inType = true;\n        this.expectRelational(\"<\");\n\n        while (!this.isRelational(\">\")) {\n          node.params.push(this.flowParseTypeOrImplicitInstantiation());\n\n          if (!this.isRelational(\">\")) {\n            this.expect(types.comma);\n          }\n        }\n\n        this.expectRelational(\">\");\n        this.state.inType = oldInType;\n        return this.finishNode(node, \"TypeParameterInstantiation\");\n      }\n    }, {\n      key: \"flowParseInterfaceType\",\n      value: function flowParseInterfaceType() {\n        var node = this.startNode();\n        this.expectContextual(\"interface\");\n        node.extends = [];\n\n        if (this.eat(types._extends)) {\n          do {\n            node.extends.push(this.flowParseInterfaceExtends());\n          } while (this.eat(types.comma));\n        }\n\n        node.body = this.flowParseObjectType({\n          allowStatic: false,\n          allowExact: false,\n          allowSpread: false,\n          allowProto: false,\n          allowInexact: false\n        });\n        return this.finishNode(node, \"InterfaceTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseObjectPropertyKey\",\n      value: function flowParseObjectPropertyKey() {\n        return this.match(types.num) || this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n      }\n    }, {\n      key: \"flowParseObjectTypeIndexer\",\n      value: function flowParseObjectTypeIndexer(node, isStatic, variance) {\n        node.static = isStatic;\n\n        if (this.lookahead().type === types.colon) {\n          node.id = this.flowParseObjectPropertyKey();\n          node.key = this.flowParseTypeInitialiser();\n        } else {\n          node.id = null;\n          node.key = this.flowParseType();\n        }\n\n        this.expect(types.bracketR);\n        node.value = this.flowParseTypeInitialiser();\n        node.variance = variance;\n        return this.finishNode(node, \"ObjectTypeIndexer\");\n      }\n    }, {\n      key: \"flowParseObjectTypeInternalSlot\",\n      value: function flowParseObjectTypeInternalSlot(node, isStatic) {\n        node.static = isStatic;\n        node.id = this.flowParseObjectPropertyKey();\n        this.expect(types.bracketR);\n        this.expect(types.bracketR);\n\n        if (this.isRelational(\"<\") || this.match(types.parenL)) {\n          node.method = true;\n          node.optional = false;\n          node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n        } else {\n          node.method = false;\n\n          if (this.eat(types.question)) {\n            node.optional = true;\n          }\n\n          node.value = this.flowParseTypeInitialiser();\n        }\n\n        return this.finishNode(node, \"ObjectTypeInternalSlot\");\n      }\n    }, {\n      key: \"flowParseObjectTypeMethodish\",\n      value: function flowParseObjectTypeMethodish(node) {\n        node.params = [];\n        node.rest = null;\n        node.typeParameters = null;\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        this.expect(types.parenL);\n\n        while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          node.params.push(this.flowParseFunctionTypeParam());\n\n          if (!this.match(types.parenR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        if (this.eat(types.ellipsis)) {\n          node.rest = this.flowParseFunctionTypeParam();\n        }\n\n        this.expect(types.parenR);\n        node.returnType = this.flowParseTypeInitialiser();\n        return this.finishNode(node, \"FunctionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseObjectTypeCallProperty\",\n      value: function flowParseObjectTypeCallProperty(node, isStatic) {\n        var valueNode = this.startNode();\n        node.static = isStatic;\n        node.value = this.flowParseObjectTypeMethodish(valueNode);\n        return this.finishNode(node, \"ObjectTypeCallProperty\");\n      }\n    }, {\n      key: \"flowParseObjectType\",\n      value: function flowParseObjectType(_ref2) {\n        var allowStatic = _ref2.allowStatic,\n            allowExact = _ref2.allowExact,\n            allowSpread = _ref2.allowSpread,\n            allowProto = _ref2.allowProto,\n            allowInexact = _ref2.allowInexact;\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        var nodeStart = this.startNode();\n        nodeStart.callProperties = [];\n        nodeStart.properties = [];\n        nodeStart.indexers = [];\n        nodeStart.internalSlots = [];\n        var endDelim;\n        var exact;\n        var inexact = false;\n\n        if (allowExact && this.match(types.braceBarL)) {\n          this.expect(types.braceBarL);\n          endDelim = types.braceBarR;\n          exact = true;\n        } else {\n          this.expect(types.braceL);\n          endDelim = types.braceR;\n          exact = false;\n        }\n\n        nodeStart.exact = exact;\n\n        while (!this.match(endDelim)) {\n          var isStatic = false;\n          var protoStart = null;\n          var inexactStart = null;\n          var node = this.startNode();\n\n          if (allowProto && this.isContextual(\"proto\")) {\n            var lookahead = this.lookahead();\n\n            if (lookahead.type !== types.colon && lookahead.type !== types.question) {\n              this.next();\n              protoStart = this.state.start;\n              allowStatic = false;\n            }\n          }\n\n          if (allowStatic && this.isContextual(\"static\")) {\n            var _lookahead = this.lookahead();\n\n            if (_lookahead.type !== types.colon && _lookahead.type !== types.question) {\n              this.next();\n              isStatic = true;\n            }\n          }\n\n          var variance = this.flowParseVariance();\n\n          if (this.eat(types.bracketL)) {\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (this.eat(types.bracketL)) {\n              if (variance) {\n                this.unexpected(variance.start);\n              }\n\n              nodeStart.internalSlots.push(this.flowParseObjectTypeInternalSlot(node, isStatic));\n            } else {\n              nodeStart.indexers.push(this.flowParseObjectTypeIndexer(node, isStatic, variance));\n            }\n          } else if (this.match(types.parenL) || this.isRelational(\"<\")) {\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            nodeStart.callProperties.push(this.flowParseObjectTypeCallProperty(node, isStatic));\n          } else {\n            var kind = \"init\";\n\n            if (this.isContextual(\"get\") || this.isContextual(\"set\")) {\n              var _lookahead2 = this.lookahead();\n\n              if (_lookahead2.type === types.name || _lookahead2.type === types.string || _lookahead2.type === types.num) {\n                kind = this.state.value;\n                this.next();\n              }\n            }\n\n            var propOrInexact = this.flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact != null ? allowInexact : !exact);\n\n            if (propOrInexact === null) {\n              inexact = true;\n              inexactStart = this.state.lastTokStart;\n            } else {\n              nodeStart.properties.push(propOrInexact);\n            }\n          }\n\n          this.flowObjectTypeSemicolon();\n\n          if (inexactStart && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n            this.raise(inexactStart, FlowErrors.UnexpectedExplicitInexactInObject);\n          }\n        }\n\n        this.expect(endDelim);\n\n        if (allowSpread) {\n          nodeStart.inexact = inexact;\n        }\n\n        var out = this.finishNode(nodeStart, \"ObjectTypeAnnotation\");\n        this.state.inType = oldInType;\n        return out;\n      }\n    }, {\n      key: \"flowParseObjectTypeProperty\",\n      value: function flowParseObjectTypeProperty(node, isStatic, protoStart, variance, kind, allowSpread, allowInexact) {\n        if (this.eat(types.ellipsis)) {\n          var isInexactToken = this.match(types.comma) || this.match(types.semi) || this.match(types.braceR) || this.match(types.braceBarR);\n\n          if (isInexactToken) {\n            if (!allowSpread) {\n              this.raise(this.state.lastTokStart, FlowErrors.InexactInsideNonObject);\n            } else if (!allowInexact) {\n              this.raise(this.state.lastTokStart, FlowErrors.InexactInsideExact);\n            }\n\n            if (variance) {\n              this.raise(variance.start, FlowErrors.InexactVariance);\n            }\n\n            return null;\n          }\n\n          if (!allowSpread) {\n            this.raise(this.state.lastTokStart, FlowErrors.UnexpectedSpreadType);\n          }\n\n          if (protoStart != null) {\n            this.unexpected(protoStart);\n          }\n\n          if (variance) {\n            this.raise(variance.start, FlowErrors.SpreadVariance);\n          }\n\n          node.argument = this.flowParseType();\n          return this.finishNode(node, \"ObjectTypeSpreadProperty\");\n        } else {\n          node.key = this.flowParseObjectPropertyKey();\n          node.static = isStatic;\n          node.proto = protoStart != null;\n          node.kind = kind;\n          var optional = false;\n\n          if (this.isRelational(\"<\") || this.match(types.parenL)) {\n            node.method = true;\n\n            if (protoStart != null) {\n              this.unexpected(protoStart);\n            }\n\n            if (variance) {\n              this.unexpected(variance.start);\n            }\n\n            node.value = this.flowParseObjectTypeMethodish(this.startNodeAt(node.start, node.loc.start));\n\n            if (kind === \"get\" || kind === \"set\") {\n              this.flowCheckGetterSetterParams(node);\n            }\n          } else {\n            if (kind !== \"init\") this.unexpected();\n            node.method = false;\n\n            if (this.eat(types.question)) {\n              optional = true;\n            }\n\n            node.value = this.flowParseTypeInitialiser();\n            node.variance = variance;\n          }\n\n          node.optional = optional;\n          return this.finishNode(node, \"ObjectTypeProperty\");\n        }\n      }\n    }, {\n      key: \"flowCheckGetterSetterParams\",\n      value: function flowCheckGetterSetterParams(property) {\n        var paramCount = property.kind === \"get\" ? 0 : 1;\n        var start = property.start;\n        var length = property.value.params.length + (property.value.rest ? 1 : 0);\n\n        if (length !== paramCount) {\n          if (property.kind === \"get\") {\n            this.raise(start, ErrorMessages.BadGetterArity);\n          } else {\n            this.raise(start, ErrorMessages.BadSetterArity);\n          }\n        }\n\n        if (property.kind === \"set\" && property.value.rest) {\n          this.raise(start, ErrorMessages.BadSetterRestParameter);\n        }\n      }\n    }, {\n      key: \"flowObjectTypeSemicolon\",\n      value: function flowObjectTypeSemicolon() {\n        if (!this.eat(types.semi) && !this.eat(types.comma) && !this.match(types.braceR) && !this.match(types.braceBarR)) {\n          this.unexpected();\n        }\n      }\n    }, {\n      key: \"flowParseQualifiedTypeIdentifier\",\n      value: function flowParseQualifiedTypeIdentifier(startPos, startLoc, id) {\n        startPos = startPos || this.state.start;\n        startLoc = startLoc || this.state.startLoc;\n        var node = id || this.flowParseRestrictedIdentifier(true);\n\n        while (this.eat(types.dot)) {\n          var node2 = this.startNodeAt(startPos, startLoc);\n          node2.qualification = node;\n          node2.id = this.flowParseRestrictedIdentifier(true);\n          node = this.finishNode(node2, \"QualifiedTypeIdentifier\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"flowParseGenericType\",\n      value: function flowParseGenericType(startPos, startLoc, id) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.typeParameters = null;\n        node.id = this.flowParseQualifiedTypeIdentifier(startPos, startLoc, id);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterInstantiation();\n        }\n\n        return this.finishNode(node, \"GenericTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTypeofType\",\n      value: function flowParseTypeofType() {\n        var node = this.startNode();\n        this.expect(types._typeof);\n        node.argument = this.flowParsePrimaryType();\n        return this.finishNode(node, \"TypeofTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTupleType\",\n      value: function flowParseTupleType() {\n        var node = this.startNode();\n        node.types = [];\n        this.expect(types.bracketL);\n\n        while (this.state.pos < this.length && !this.match(types.bracketR)) {\n          node.types.push(this.flowParseType());\n          if (this.match(types.bracketR)) break;\n          this.expect(types.comma);\n        }\n\n        this.expect(types.bracketR);\n        return this.finishNode(node, \"TupleTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseFunctionTypeParam\",\n      value: function flowParseFunctionTypeParam() {\n        var name = null;\n        var optional = false;\n        var typeAnnotation = null;\n        var node = this.startNode();\n        var lh = this.lookahead();\n\n        if (lh.type === types.colon || lh.type === types.question) {\n          name = this.parseIdentifier();\n\n          if (this.eat(types.question)) {\n            optional = true;\n          }\n\n          typeAnnotation = this.flowParseTypeInitialiser();\n        } else {\n          typeAnnotation = this.flowParseType();\n        }\n\n        node.name = name;\n        node.optional = optional;\n        node.typeAnnotation = typeAnnotation;\n        return this.finishNode(node, \"FunctionTypeParam\");\n      }\n    }, {\n      key: \"reinterpretTypeAsFunctionTypeParam\",\n      value: function reinterpretTypeAsFunctionTypeParam(type) {\n        var node = this.startNodeAt(type.start, type.loc.start);\n        node.name = null;\n        node.optional = false;\n        node.typeAnnotation = type;\n        return this.finishNode(node, \"FunctionTypeParam\");\n      }\n    }, {\n      key: \"flowParseFunctionTypeParams\",\n      value: function flowParseFunctionTypeParams() {\n        var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n        var rest = null;\n\n        while (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n          params.push(this.flowParseFunctionTypeParam());\n\n          if (!this.match(types.parenR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        if (this.eat(types.ellipsis)) {\n          rest = this.flowParseFunctionTypeParam();\n        }\n\n        return {\n          params: params,\n          rest: rest\n        };\n      }\n    }, {\n      key: \"flowIdentToTypeAnnotation\",\n      value: function flowIdentToTypeAnnotation(startPos, startLoc, node, id) {\n        switch (id.name) {\n          case \"any\":\n            return this.finishNode(node, \"AnyTypeAnnotation\");\n\n          case \"bool\":\n          case \"boolean\":\n            return this.finishNode(node, \"BooleanTypeAnnotation\");\n\n          case \"mixed\":\n            return this.finishNode(node, \"MixedTypeAnnotation\");\n\n          case \"empty\":\n            return this.finishNode(node, \"EmptyTypeAnnotation\");\n\n          case \"number\":\n            return this.finishNode(node, \"NumberTypeAnnotation\");\n\n          case \"string\":\n            return this.finishNode(node, \"StringTypeAnnotation\");\n\n          case \"symbol\":\n            return this.finishNode(node, \"SymbolTypeAnnotation\");\n\n          default:\n            this.checkNotUnderscore(id.name);\n            return this.flowParseGenericType(startPos, startLoc, id);\n        }\n      }\n    }, {\n      key: \"flowParsePrimaryType\",\n      value: function flowParsePrimaryType() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var node = this.startNode();\n        var tmp;\n        var type;\n        var isGroupedType = false;\n        var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n\n        switch (this.state.type) {\n          case types.name:\n            if (this.isContextual(\"interface\")) {\n              return this.flowParseInterfaceType();\n            }\n\n            return this.flowIdentToTypeAnnotation(startPos, startLoc, node, this.parseIdentifier());\n\n          case types.braceL:\n            return this.flowParseObjectType({\n              allowStatic: false,\n              allowExact: false,\n              allowSpread: true,\n              allowProto: false,\n              allowInexact: true\n            });\n\n          case types.braceBarL:\n            return this.flowParseObjectType({\n              allowStatic: false,\n              allowExact: true,\n              allowSpread: true,\n              allowProto: false,\n              allowInexact: false\n            });\n\n          case types.bracketL:\n            this.state.noAnonFunctionType = false;\n            type = this.flowParseTupleType();\n            this.state.noAnonFunctionType = oldNoAnonFunctionType;\n            return type;\n\n          case types.relational:\n            if (this.state.value === \"<\") {\n              node.typeParameters = this.flowParseTypeParameterDeclaration();\n              this.expect(types.parenL);\n              tmp = this.flowParseFunctionTypeParams();\n              node.params = tmp.params;\n              node.rest = tmp.rest;\n              this.expect(types.parenR);\n              this.expect(types.arrow);\n              node.returnType = this.flowParseType();\n              return this.finishNode(node, \"FunctionTypeAnnotation\");\n            }\n\n            break;\n\n          case types.parenL:\n            this.next();\n\n            if (!this.match(types.parenR) && !this.match(types.ellipsis)) {\n              if (this.match(types.name)) {\n                var token = this.lookahead().type;\n                isGroupedType = token !== types.question && token !== types.colon;\n              } else {\n                isGroupedType = true;\n              }\n            }\n\n            if (isGroupedType) {\n              this.state.noAnonFunctionType = false;\n              type = this.flowParseType();\n              this.state.noAnonFunctionType = oldNoAnonFunctionType;\n\n              if (this.state.noAnonFunctionType || !(this.match(types.comma) || this.match(types.parenR) && this.lookahead().type === types.arrow)) {\n                this.expect(types.parenR);\n                return type;\n              } else {\n                this.eat(types.comma);\n              }\n            }\n\n            if (type) {\n              tmp = this.flowParseFunctionTypeParams([this.reinterpretTypeAsFunctionTypeParam(type)]);\n            } else {\n              tmp = this.flowParseFunctionTypeParams();\n            }\n\n            node.params = tmp.params;\n            node.rest = tmp.rest;\n            this.expect(types.parenR);\n            this.expect(types.arrow);\n            node.returnType = this.flowParseType();\n            node.typeParameters = null;\n            return this.finishNode(node, \"FunctionTypeAnnotation\");\n\n          case types.string:\n            return this.parseLiteral(this.state.value, \"StringLiteralTypeAnnotation\");\n\n          case types._true:\n          case types._false:\n            node.value = this.match(types._true);\n            this.next();\n            return this.finishNode(node, \"BooleanLiteralTypeAnnotation\");\n\n          case types.plusMin:\n            if (this.state.value === \"-\") {\n              this.next();\n\n              if (this.match(types.num)) {\n                return this.parseLiteral(-this.state.value, \"NumberLiteralTypeAnnotation\", node.start, node.loc.start);\n              }\n\n              if (this.match(types.bigint)) {\n                return this.parseLiteral(-this.state.value, \"BigIntLiteralTypeAnnotation\", node.start, node.loc.start);\n              }\n\n              throw this.raise(this.state.start, FlowErrors.UnexpectedSubtractionOperand);\n            }\n\n            throw this.unexpected();\n\n          case types.num:\n            return this.parseLiteral(this.state.value, \"NumberLiteralTypeAnnotation\");\n\n          case types.bigint:\n            return this.parseLiteral(this.state.value, \"BigIntLiteralTypeAnnotation\");\n\n          case types._void:\n            this.next();\n            return this.finishNode(node, \"VoidTypeAnnotation\");\n\n          case types._null:\n            this.next();\n            return this.finishNode(node, \"NullLiteralTypeAnnotation\");\n\n          case types._this:\n            this.next();\n            return this.finishNode(node, \"ThisTypeAnnotation\");\n\n          case types.star:\n            this.next();\n            return this.finishNode(node, \"ExistsTypeAnnotation\");\n\n          default:\n            if (this.state.type.keyword === \"typeof\") {\n              return this.flowParseTypeofType();\n            } else if (this.state.type.keyword) {\n              var label = this.state.type.label;\n              this.next();\n              return _get(_getPrototypeOf(_temp.prototype), \"createIdentifier\", this).call(this, node, label);\n            }\n\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"flowParsePostfixType\",\n      value: function flowParsePostfixType() {\n        var startPos = this.state.start,\n            startLoc = this.state.startLoc;\n        var type = this.flowParsePrimaryType();\n\n        while (this.match(types.bracketL) && !this.canInsertSemicolon()) {\n          var node = this.startNodeAt(startPos, startLoc);\n          node.elementType = type;\n          this.expect(types.bracketL);\n          this.expect(types.bracketR);\n          type = this.finishNode(node, \"ArrayTypeAnnotation\");\n        }\n\n        return type;\n      }\n    }, {\n      key: \"flowParsePrefixType\",\n      value: function flowParsePrefixType() {\n        var node = this.startNode();\n\n        if (this.eat(types.question)) {\n          node.typeAnnotation = this.flowParsePrefixType();\n          return this.finishNode(node, \"NullableTypeAnnotation\");\n        } else {\n          return this.flowParsePostfixType();\n        }\n      }\n    }, {\n      key: \"flowParseAnonFunctionWithoutParens\",\n      value: function flowParseAnonFunctionWithoutParens() {\n        var param = this.flowParsePrefixType();\n\n        if (!this.state.noAnonFunctionType && this.eat(types.arrow)) {\n          var node = this.startNodeAt(param.start, param.loc.start);\n          node.params = [this.reinterpretTypeAsFunctionTypeParam(param)];\n          node.rest = null;\n          node.returnType = this.flowParseType();\n          node.typeParameters = null;\n          return this.finishNode(node, \"FunctionTypeAnnotation\");\n        }\n\n        return param;\n      }\n    }, {\n      key: \"flowParseIntersectionType\",\n      value: function flowParseIntersectionType() {\n        var node = this.startNode();\n        this.eat(types.bitwiseAND);\n        var type = this.flowParseAnonFunctionWithoutParens();\n        node.types = [type];\n\n        while (this.eat(types.bitwiseAND)) {\n          node.types.push(this.flowParseAnonFunctionWithoutParens());\n        }\n\n        return node.types.length === 1 ? type : this.finishNode(node, \"IntersectionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseUnionType\",\n      value: function flowParseUnionType() {\n        var node = this.startNode();\n        this.eat(types.bitwiseOR);\n        var type = this.flowParseIntersectionType();\n        node.types = [type];\n\n        while (this.eat(types.bitwiseOR)) {\n          node.types.push(this.flowParseIntersectionType());\n        }\n\n        return node.types.length === 1 ? type : this.finishNode(node, \"UnionTypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseType\",\n      value: function flowParseType() {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n        var type = this.flowParseUnionType();\n        this.state.inType = oldInType;\n        this.state.exprAllowed = this.state.exprAllowed || this.state.noAnonFunctionType;\n        return type;\n      }\n    }, {\n      key: \"flowParseTypeOrImplicitInstantiation\",\n      value: function flowParseTypeOrImplicitInstantiation() {\n        if (this.state.type === types.name && this.state.value === \"_\") {\n          var startPos = this.state.start;\n          var startLoc = this.state.startLoc;\n          var node = this.parseIdentifier();\n          return this.flowParseGenericType(startPos, startLoc, node);\n        } else {\n          return this.flowParseType();\n        }\n      }\n    }, {\n      key: \"flowParseTypeAnnotation\",\n      value: function flowParseTypeAnnotation() {\n        var node = this.startNode();\n        node.typeAnnotation = this.flowParseTypeInitialiser();\n        return this.finishNode(node, \"TypeAnnotation\");\n      }\n    }, {\n      key: \"flowParseTypeAnnotatableIdentifier\",\n      value: function flowParseTypeAnnotatableIdentifier(allowPrimitiveOverride) {\n        var ident = allowPrimitiveOverride ? this.parseIdentifier() : this.flowParseRestrictedIdentifier();\n\n        if (this.match(types.colon)) {\n          ident.typeAnnotation = this.flowParseTypeAnnotation();\n          this.resetEndLocation(ident);\n        }\n\n        return ident;\n      }\n    }, {\n      key: \"typeCastToParameter\",\n      value: function typeCastToParameter(node) {\n        node.expression.typeAnnotation = node.typeAnnotation;\n        this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n        return node.expression;\n      }\n    }, {\n      key: \"flowParseVariance\",\n      value: function flowParseVariance() {\n        var variance = null;\n\n        if (this.match(types.plusMin)) {\n          variance = this.startNode();\n\n          if (this.state.value === \"+\") {\n            variance.kind = \"plus\";\n          } else {\n            variance.kind = \"minus\";\n          }\n\n          this.next();\n          this.finishNode(variance, \"Variance\");\n        }\n\n        return variance;\n      }\n    }, {\n      key: \"parseFunctionBody\",\n      value: function parseFunctionBody(node, allowExpressionBody) {\n        var _this5 = this;\n\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (allowExpressionBody) {\n          return this.forwardNoArrowParamsConversionAt(node, function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseFunctionBody\", _this5).call(_this5, node, true, isMethod);\n          });\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseFunctionBody\", this).call(this, node, false, isMethod);\n      }\n    }, {\n      key: \"parseFunctionBodyAndFinish\",\n      value: function parseFunctionBodyAndFinish(node, type) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (this.match(types.colon)) {\n          var typeNode = this.startNode();\n\n          var _this$flowParseTypeAn3 = this.flowParseTypeAndPredicateInitialiser();\n\n          var _this$flowParseTypeAn4 = _slicedToArray(_this$flowParseTypeAn3, 2);\n\n          typeNode.typeAnnotation = _this$flowParseTypeAn4[0];\n          node.predicate = _this$flowParseTypeAn4[1];\n          node.returnType = typeNode.typeAnnotation ? this.finishNode(typeNode, \"TypeAnnotation\") : null;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, type, isMethod);\n      }\n    }, {\n      key: \"parseStatement\",\n      value: function parseStatement(context, topLevel) {\n        if (this.state.strict && this.match(types.name) && this.state.value === \"interface\") {\n          var lookahead = this.lookahead();\n\n          if (lookahead.type === types.name || isKeyword(lookahead.value)) {\n            var node = this.startNode();\n            this.next();\n            return this.flowParseInterface(node);\n          }\n        } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n          var _node = this.startNode();\n\n          this.next();\n          return this.flowParseEnumDeclaration(_node);\n        }\n\n        var stmt = _get(_getPrototypeOf(_temp.prototype), \"parseStatement\", this).call(this, context, topLevel);\n\n        if (this.flowPragma === undefined && !this.isValidDirective(stmt)) {\n          this.flowPragma = null;\n        }\n\n        return stmt;\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        if (expr.type === \"Identifier\") {\n          if (expr.name === \"declare\") {\n            if (this.match(types._class) || this.match(types.name) || this.match(types._function) || this.match(types._var) || this.match(types._export)) {\n              return this.flowParseDeclare(node);\n            }\n          } else if (this.match(types.name)) {\n            if (expr.name === \"interface\") {\n              return this.flowParseInterface(node);\n            } else if (expr.name === \"type\") {\n              return this.flowParseTypeAlias(node);\n            } else if (expr.name === \"opaque\") {\n              return this.flowParseOpaqueType(node, false);\n            }\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseExpressionStatement\", this).call(this, node, expr);\n      }\n    }, {\n      key: \"shouldParseExportDeclaration\",\n      value: function shouldParseExportDeclaration() {\n        return this.isContextual(\"type\") || this.isContextual(\"interface\") || this.isContextual(\"opaque\") || this.shouldParseEnums() && this.isContextual(\"enum\") || _get(_getPrototypeOf(_temp.prototype), \"shouldParseExportDeclaration\", this).call(this);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.match(types.name) && (this.state.value === \"type\" || this.state.value === \"interface\" || this.state.value === \"opaque\" || this.shouldParseEnums() && this.state.value === \"enum\")) {\n          return false;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"parseExportDefaultExpression\",\n      value: function parseExportDefaultExpression() {\n        if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n          var node = this.startNode();\n          this.next();\n          return this.flowParseEnumDeclaration(node);\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseExportDefaultExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseConditional\",\n      value: function parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n        var _this6 = this;\n\n        if (!this.match(types.question)) return expr;\n\n        if (refNeedsArrowPos) {\n          var result = this.tryParse(function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseConditional\", _this6).call(_this6, expr, startPos, startLoc);\n          });\n\n          if (!result.node) {\n            refNeedsArrowPos.start = result.error.pos || this.state.start;\n            return expr;\n          }\n\n          if (result.error) this.state = result.failState;\n          return result.node;\n        }\n\n        this.expect(types.question);\n        var state = this.state.clone();\n        var originalNoArrowAt = this.state.noArrowAt;\n        var node = this.startNodeAt(startPos, startLoc);\n\n        var _this$tryParseConditi = this.tryParseConditionalConsequent(),\n            consequent = _this$tryParseConditi.consequent,\n            failed = _this$tryParseConditi.failed;\n\n        var _this$getArrowLikeExp = this.getArrowLikeExpressions(consequent),\n            _this$getArrowLikeExp2 = _slicedToArray(_this$getArrowLikeExp, 2),\n            valid = _this$getArrowLikeExp2[0],\n            invalid = _this$getArrowLikeExp2[1];\n\n        if (failed || invalid.length > 0) {\n          var noArrowAt = _toConsumableArray(originalNoArrowAt);\n\n          if (invalid.length > 0) {\n            this.state = state;\n            this.state.noArrowAt = noArrowAt;\n\n            for (var i = 0; i < invalid.length; i++) {\n              noArrowAt.push(invalid[i].start);\n            }\n\n            var _this$tryParseConditi2 = this.tryParseConditionalConsequent();\n\n            consequent = _this$tryParseConditi2.consequent;\n            failed = _this$tryParseConditi2.failed;\n\n            var _this$getArrowLikeExp3 = this.getArrowLikeExpressions(consequent);\n\n            var _this$getArrowLikeExp4 = _slicedToArray(_this$getArrowLikeExp3, 2);\n\n            valid = _this$getArrowLikeExp4[0];\n            invalid = _this$getArrowLikeExp4[1];\n          }\n\n          if (failed && valid.length > 1) {\n            this.raise(state.start, FlowErrors.AmbiguousConditionalArrow);\n          }\n\n          if (failed && valid.length === 1) {\n            this.state = state;\n            this.state.noArrowAt = noArrowAt.concat(valid[0].start);\n\n            var _this$tryParseConditi3 = this.tryParseConditionalConsequent();\n\n            consequent = _this$tryParseConditi3.consequent;\n            failed = _this$tryParseConditi3.failed;\n          }\n        }\n\n        this.getArrowLikeExpressions(consequent, true);\n        this.state.noArrowAt = originalNoArrowAt;\n        this.expect(types.colon);\n        node.test = expr;\n        node.consequent = consequent;\n        node.alternate = this.forwardNoArrowParamsConversionAt(node, function () {\n          return _this6.parseMaybeAssign(undefined, undefined, undefined);\n        });\n        return this.finishNode(node, \"ConditionalExpression\");\n      }\n    }, {\n      key: \"tryParseConditionalConsequent\",\n      value: function tryParseConditionalConsequent() {\n        this.state.noArrowParamsConversionAt.push(this.state.start);\n        var consequent = this.parseMaybeAssignAllowIn();\n        var failed = !this.match(types.colon);\n        this.state.noArrowParamsConversionAt.pop();\n        return {\n          consequent: consequent,\n          failed: failed\n        };\n      }\n    }, {\n      key: \"getArrowLikeExpressions\",\n      value: function getArrowLikeExpressions(node, disallowInvalid) {\n        var _this7 = this;\n\n        var stack = [node];\n        var arrows = [];\n\n        while (stack.length !== 0) {\n          var _node2 = stack.pop();\n\n          if (_node2.type === \"ArrowFunctionExpression\") {\n            if (_node2.typeParameters || !_node2.returnType) {\n              this.finishArrowValidation(_node2);\n            } else {\n              arrows.push(_node2);\n            }\n\n            stack.push(_node2.body);\n          } else if (_node2.type === \"ConditionalExpression\") {\n            stack.push(_node2.consequent);\n            stack.push(_node2.alternate);\n          }\n        }\n\n        if (disallowInvalid) {\n          arrows.forEach(function (node) {\n            return _this7.finishArrowValidation(node);\n          });\n          return [arrows, []];\n        }\n\n        return partition(arrows, function (node) {\n          return node.params.every(function (param) {\n            return _this7.isAssignable(param, true);\n          });\n        });\n      }\n    }, {\n      key: \"finishArrowValidation\",\n      value: function finishArrowValidation(node) {\n        var _node$extra;\n\n        this.toAssignableList(node.params, (_node$extra = node.extra) == null ? void 0 : _node$extra.trailingComma, false);\n        this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n\n        _get(_getPrototypeOf(_temp.prototype), \"checkParams\", this).call(this, node, false, true);\n\n        this.scope.exit();\n      }\n    }, {\n      key: \"forwardNoArrowParamsConversionAt\",\n      value: function forwardNoArrowParamsConversionAt(node, parse) {\n        var result;\n\n        if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          this.state.noArrowParamsConversionAt.push(this.state.start);\n          result = parse();\n          this.state.noArrowParamsConversionAt.pop();\n        } else {\n          result = parse();\n        }\n\n        return result;\n      }\n    }, {\n      key: \"parseParenItem\",\n      value: function parseParenItem(node, startPos, startLoc) {\n        node = _get(_getPrototypeOf(_temp.prototype), \"parseParenItem\", this).call(this, node, startPos, startLoc);\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n          this.resetEndLocation(node);\n        }\n\n        if (this.match(types.colon)) {\n          var typeCastNode = this.startNodeAt(startPos, startLoc);\n          typeCastNode.expression = node;\n          typeCastNode.typeAnnotation = this.flowParseTypeAnnotation();\n          return this.finishNode(typeCastNode, \"TypeCastExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"assertModuleNodeAllowed\",\n      value: function assertModuleNodeAllowed(node) {\n        if (node.type === \"ImportDeclaration\" && (node.importKind === \"type\" || node.importKind === \"typeof\") || node.type === \"ExportNamedDeclaration\" && node.exportKind === \"type\" || node.type === \"ExportAllDeclaration\" && node.exportKind === \"type\") {\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"assertModuleNodeAllowed\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        var decl = _get(_getPrototypeOf(_temp.prototype), \"parseExport\", this).call(this, node);\n\n        if (decl.type === \"ExportNamedDeclaration\" || decl.type === \"ExportAllDeclaration\") {\n          decl.exportKind = decl.exportKind || \"value\";\n        }\n\n        return decl;\n      }\n    }, {\n      key: \"parseExportDeclaration\",\n      value: function parseExportDeclaration(node) {\n        if (this.isContextual(\"type\")) {\n          node.exportKind = \"type\";\n          var declarationNode = this.startNode();\n          this.next();\n\n          if (this.match(types.braceL)) {\n            node.specifiers = this.parseExportSpecifiers();\n            this.parseExportFrom(node);\n            return null;\n          } else {\n            return this.flowParseTypeAlias(declarationNode);\n          }\n        } else if (this.isContextual(\"opaque\")) {\n          node.exportKind = \"type\";\n\n          var _declarationNode = this.startNode();\n\n          this.next();\n          return this.flowParseOpaqueType(_declarationNode, false);\n        } else if (this.isContextual(\"interface\")) {\n          node.exportKind = \"type\";\n\n          var _declarationNode2 = this.startNode();\n\n          this.next();\n          return this.flowParseInterface(_declarationNode2);\n        } else if (this.shouldParseEnums() && this.isContextual(\"enum\")) {\n          node.exportKind = \"value\";\n\n          var _declarationNode3 = this.startNode();\n\n          this.next();\n          return this.flowParseEnumDeclaration(_declarationNode3);\n        } else {\n          return _get(_getPrototypeOf(_temp.prototype), \"parseExportDeclaration\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"eatExportStar\",\n      value: function eatExportStar(node) {\n        if (_get(_getPrototypeOf(_temp.prototype), \"eatExportStar\", this).apply(this, arguments)) return true;\n\n        if (this.isContextual(\"type\") && this.lookahead().type === types.star) {\n          node.exportKind = \"type\";\n          this.next();\n          this.next();\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"maybeParseExportNamespaceSpecifier\",\n      value: function maybeParseExportNamespaceSpecifier(node) {\n        var pos = this.state.start;\n\n        var hasNamespace = _get(_getPrototypeOf(_temp.prototype), \"maybeParseExportNamespaceSpecifier\", this).call(this, node);\n\n        if (hasNamespace && node.exportKind === \"type\") {\n          this.unexpected(pos);\n        }\n\n        return hasNamespace;\n      }\n    }, {\n      key: \"parseClassId\",\n      value: function parseClassId(node, isStatement, optionalId) {\n        _get(_getPrototypeOf(_temp.prototype), \"parseClassId\", this).call(this, node, isStatement, optionalId);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n      }\n    }, {\n      key: \"parseClassMember\",\n      value: function parseClassMember(classBody, member, state) {\n        var pos = this.state.start;\n\n        if (this.isContextual(\"declare\")) {\n          if (this.parseClassMemberFromModifier(classBody, member)) {\n            return;\n          }\n\n          member.declare = true;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseClassMember\", this).call(this, classBody, member, state);\n\n        if (member.declare) {\n          if (member.type !== \"ClassProperty\" && member.type !== \"ClassPrivateProperty\") {\n            this.raise(pos, FlowErrors.DeclareClassElement);\n          } else if (member.value) {\n            this.raise(member.value.start, FlowErrors.DeclareClassFieldInitializer);\n          }\n        }\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 123 && next === 124) {\n          return this.finishOp(types.braceBarL, 2);\n        } else if (this.state.inType && (code === 62 || code === 60)) {\n          return this.finishOp(types.relational, 1);\n        } else if (this.state.inType && code === 63) {\n          return this.finishOp(types.question, 1);\n        } else if (isIteratorStart(code, next)) {\n          this.state.isIterator = true;\n          return _get(_getPrototypeOf(_temp.prototype), \"readWord\", this).call(this);\n        } else {\n          return _get(_getPrototypeOf(_temp.prototype), \"getTokenFromCode\", this).call(this, code);\n        }\n      }\n    }, {\n      key: \"isAssignable\",\n      value: function isAssignable(node, isBinding) {\n        var _this8 = this;\n\n        switch (node.type) {\n          case \"Identifier\":\n          case \"ObjectPattern\":\n          case \"ArrayPattern\":\n          case \"AssignmentPattern\":\n            return true;\n\n          case \"ObjectExpression\":\n            {\n              var _last = node.properties.length - 1;\n\n              return node.properties.every(function (prop, i) {\n                return prop.type !== \"ObjectMethod\" && (i === _last || prop.type === \"SpreadElement\") && _this8.isAssignable(prop);\n              });\n            }\n\n          case \"ObjectProperty\":\n            return this.isAssignable(node.value);\n\n          case \"SpreadElement\":\n            return this.isAssignable(node.argument);\n\n          case \"ArrayExpression\":\n            return node.elements.every(function (element) {\n              return _this8.isAssignable(element);\n            });\n\n          case \"AssignmentExpression\":\n            return node.operator === \"=\";\n\n          case \"ParenthesizedExpression\":\n          case \"TypeCastExpression\":\n            return this.isAssignable(node.expression);\n\n          case \"MemberExpression\":\n          case \"OptionalMemberExpression\":\n            return !isBinding;\n\n          default:\n            return false;\n        }\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        if (node.type === \"TypeCastExpression\") {\n          return _get(_getPrototypeOf(_temp.prototype), \"toAssignable\", this).call(this, this.typeCastToParameter(node), isLHS);\n        } else {\n          return _get(_getPrototypeOf(_temp.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"toAssignableList\",\n      value: function toAssignableList(exprList, trailingCommaPos, isLHS) {\n        for (var i = 0; i < exprList.length; i++) {\n          var expr = exprList[i];\n\n          if ((expr == null ? void 0 : expr.type) === \"TypeCastExpression\") {\n            exprList[i] = this.typeCastToParameter(expr);\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"toAssignableList\", this).call(this, exprList, trailingCommaPos, isLHS);\n      }\n    }, {\n      key: \"toReferencedList\",\n      value: function toReferencedList(exprList, isParenthesizedExpr) {\n        for (var i = 0; i < exprList.length; i++) {\n          var _expr$extra;\n\n          var expr = exprList[i];\n\n          if (expr && expr.type === \"TypeCastExpression\" && !((_expr$extra = expr.extra) == null ? void 0 : _expr$extra.parenthesized) && (exprList.length > 1 || !isParenthesizedExpr)) {\n            this.raise(expr.typeAnnotation.start, FlowErrors.TypeCastInPattern);\n          }\n        }\n\n        return exprList;\n      }\n    }, {\n      key: \"parseArrayLike\",\n      value: function parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n        var node = _get(_getPrototypeOf(_temp.prototype), \"parseArrayLike\", this).call(this, close, canBePattern, isTuple, refExpressionErrors);\n\n        if (canBePattern && !this.state.maybeInArrowParameters) {\n          this.toReferencedList(node.elements);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr) {\n        if (expr.type !== \"TypeCastExpression\") {\n          var _get4;\n\n          for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n            args[_key5 - 1] = arguments[_key5];\n          }\n\n          return (_get4 = _get(_getPrototypeOf(_temp.prototype), \"checkLVal\", this)).call.apply(_get4, [this, expr].concat(args));\n        }\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty(node) {\n        if (this.match(types.colon)) {\n          node.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseClassProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty(node) {\n        if (this.match(types.colon)) {\n          node.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseClassPrivateProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"isClassMethod\",\n      value: function isClassMethod() {\n        return this.isRelational(\"<\") || _get(_getPrototypeOf(_temp.prototype), \"isClassMethod\", this).call(this);\n      }\n    }, {\n      key: \"isClassProperty\",\n      value: function isClassProperty() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_temp.prototype), \"isClassProperty\", this).call(this);\n      }\n    }, {\n      key: \"isNonstaticConstructor\",\n      value: function isNonstaticConstructor(method) {\n        return !this.match(types.colon) && _get(_getPrototypeOf(_temp.prototype), \"isNonstaticConstructor\", this).call(this, method);\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        if (method.variance) {\n          this.unexpected(method.variance.start);\n        }\n\n        delete method.variance;\n\n        if (this.isRelational(\"<\")) {\n          method.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"pushClassMethod\", this).call(this, classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n      }\n    }, {\n      key: \"pushClassPrivateMethod\",\n      value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n        if (method.variance) {\n          this.unexpected(method.variance.start);\n        }\n\n        delete method.variance;\n\n        if (this.isRelational(\"<\")) {\n          method.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"pushClassPrivateMethod\", this).call(this, classBody, method, isGenerator, isAsync);\n      }\n    }, {\n      key: \"parseClassSuper\",\n      value: function parseClassSuper(node) {\n        _get(_getPrototypeOf(_temp.prototype), \"parseClassSuper\", this).call(this, node);\n\n        if (node.superClass && this.isRelational(\"<\")) {\n          node.superTypeParameters = this.flowParseTypeParameterInstantiation();\n        }\n\n        if (this.isContextual(\"implements\")) {\n          this.next();\n          var implemented = node.implements = [];\n\n          do {\n            var _node3 = this.startNode();\n\n            _node3.id = this.flowParseRestrictedIdentifier(true);\n\n            if (this.isRelational(\"<\")) {\n              _node3.typeParameters = this.flowParseTypeParameterInstantiation();\n            } else {\n              _node3.typeParameters = null;\n            }\n\n            implemented.push(this.finishNode(_node3, \"ClassImplements\"));\n          } while (this.eat(types.comma));\n        }\n      }\n    }, {\n      key: \"parsePropertyName\",\n      value: function parsePropertyName(node, isPrivateNameAllowed) {\n        var variance = this.flowParseVariance();\n\n        var key = _get(_getPrototypeOf(_temp.prototype), \"parsePropertyName\", this).call(this, node, isPrivateNameAllowed);\n\n        node.variance = variance;\n        return key;\n      }\n    }, {\n      key: \"parseObjPropValue\",\n      value: function parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n        if (prop.variance) {\n          this.unexpected(prop.variance.start);\n        }\n\n        delete prop.variance;\n        var typeParameters;\n\n        if (this.isRelational(\"<\") && !isAccessor) {\n          typeParameters = this.flowParseTypeParameterDeclaration();\n          if (!this.match(types.parenL)) this.unexpected();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseObjPropValue\", this).call(this, prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n\n        if (typeParameters) {\n          (prop.value || prop).typeParameters = typeParameters;\n        }\n      }\n    }, {\n      key: \"parseAssignableListItemTypes\",\n      value: function parseAssignableListItemTypes(param) {\n        if (this.eat(types.question)) {\n          if (param.type !== \"Identifier\") {\n            this.raise(param.start, FlowErrors.OptionalBindingPattern);\n          }\n\n          param.optional = true;\n        }\n\n        if (this.match(types.colon)) {\n          param.typeAnnotation = this.flowParseTypeAnnotation();\n        }\n\n        this.resetEndLocation(param);\n        return param;\n      }\n    }, {\n      key: \"parseMaybeDefault\",\n      value: function parseMaybeDefault(startPos, startLoc, left) {\n        var node = _get(_getPrototypeOf(_temp.prototype), \"parseMaybeDefault\", this).call(this, startPos, startLoc, left);\n\n        if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n          this.raise(node.typeAnnotation.start, FlowErrors.TypeBeforeInitializer);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"shouldParseDefaultImport\",\n      value: function shouldParseDefaultImport(node) {\n        if (!hasTypeImportKind(node)) {\n          return _get(_getPrototypeOf(_temp.prototype), \"shouldParseDefaultImport\", this).call(this, node);\n        }\n\n        return isMaybeDefaultImport(this.state);\n      }\n    }, {\n      key: \"parseImportSpecifierLocal\",\n      value: function parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n        specifier.local = hasTypeImportKind(node) ? this.flowParseRestrictedIdentifier(true, true) : this.parseIdentifier();\n        this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n        node.specifiers.push(this.finishNode(specifier, type));\n      }\n    }, {\n      key: \"maybeParseDefaultImportSpecifier\",\n      value: function maybeParseDefaultImportSpecifier(node) {\n        node.importKind = \"value\";\n        var kind = null;\n\n        if (this.match(types._typeof)) {\n          kind = \"typeof\";\n        } else if (this.isContextual(\"type\")) {\n          kind = \"type\";\n        }\n\n        if (kind) {\n          var lh = this.lookahead();\n\n          if (kind === \"type\" && lh.type === types.star) {\n            this.unexpected(lh.start);\n          }\n\n          if (isMaybeDefaultImport(lh) || lh.type === types.braceL || lh.type === types.star) {\n            this.next();\n            node.importKind = kind;\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"maybeParseDefaultImportSpecifier\", this).call(this, node);\n      }\n    }, {\n      key: \"parseImportSpecifier\",\n      value: function parseImportSpecifier(node) {\n        var specifier = this.startNode();\n        var firstIdentLoc = this.state.start;\n        var firstIdent = this.parseModuleExportName();\n        var specifierTypeKind = null;\n\n        if (firstIdent.type === \"Identifier\") {\n          if (firstIdent.name === \"type\") {\n            specifierTypeKind = \"type\";\n          } else if (firstIdent.name === \"typeof\") {\n            specifierTypeKind = \"typeof\";\n          }\n        }\n\n        var isBinding = false;\n\n        if (this.isContextual(\"as\") && !this.isLookaheadContextual(\"as\")) {\n          var as_ident = this.parseIdentifier(true);\n\n          if (specifierTypeKind !== null && !this.match(types.name) && !this.state.type.keyword) {\n            specifier.imported = as_ident;\n            specifier.importKind = specifierTypeKind;\n            specifier.local = as_ident.__clone();\n          } else {\n            specifier.imported = firstIdent;\n            specifier.importKind = null;\n            specifier.local = this.parseIdentifier();\n          }\n        } else if (specifierTypeKind !== null && (this.match(types.name) || this.state.type.keyword)) {\n          specifier.imported = this.parseIdentifier(true);\n          specifier.importKind = specifierTypeKind;\n\n          if (this.eatContextual(\"as\")) {\n            specifier.local = this.parseIdentifier();\n          } else {\n            isBinding = true;\n            specifier.local = specifier.imported.__clone();\n          }\n        } else {\n          if (firstIdent.type === \"StringLiteral\") {\n            throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, firstIdent.value);\n          }\n\n          isBinding = true;\n          specifier.imported = firstIdent;\n          specifier.importKind = null;\n          specifier.local = specifier.imported.__clone();\n        }\n\n        var nodeIsTypeImport = hasTypeImportKind(node);\n        var specifierIsTypeImport = hasTypeImportKind(specifier);\n\n        if (nodeIsTypeImport && specifierIsTypeImport) {\n          this.raise(firstIdentLoc, FlowErrors.ImportTypeShorthandOnlyInPureImport);\n        }\n\n        if (nodeIsTypeImport || specifierIsTypeImport) {\n          this.checkReservedType(specifier.local.name, specifier.local.start, true);\n        }\n\n        if (isBinding && !nodeIsTypeImport && !specifierIsTypeImport) {\n          this.checkReservedWord(specifier.local.name, specifier.start, true, true);\n        }\n\n        this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n        node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n      }\n    }, {\n      key: \"parseFunctionParams\",\n      value: function parseFunctionParams(node, allowModifiers) {\n        var kind = node.kind;\n\n        if (kind !== \"get\" && kind !== \"set\" && this.isRelational(\"<\")) {\n          node.typeParameters = this.flowParseTypeParameterDeclaration();\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseFunctionParams\", this).call(this, node, allowModifiers);\n      }\n    }, {\n      key: \"parseVarId\",\n      value: function parseVarId(decl, kind) {\n        _get(_getPrototypeOf(_temp.prototype), \"parseVarId\", this).call(this, decl, kind);\n\n        if (this.match(types.colon)) {\n          decl.id.typeAnnotation = this.flowParseTypeAnnotation();\n          this.resetEndLocation(decl.id);\n        }\n      }\n    }, {\n      key: \"parseAsyncArrowFromCallExpression\",\n      value: function parseAsyncArrowFromCallExpression(node, call) {\n        if (this.match(types.colon)) {\n          var oldNoAnonFunctionType = this.state.noAnonFunctionType;\n          this.state.noAnonFunctionType = true;\n          node.returnType = this.flowParseTypeAnnotation();\n          this.state.noAnonFunctionType = oldNoAnonFunctionType;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseAsyncArrowFromCallExpression\", this).call(this, node, call);\n      }\n    }, {\n      key: \"shouldParseAsyncArrow\",\n      value: function shouldParseAsyncArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_temp.prototype), \"shouldParseAsyncArrow\", this).call(this);\n      }\n    }, {\n      key: \"parseMaybeAssign\",\n      value: function parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n        var _this9 = this;\n\n        var _jsx;\n\n        var state = null;\n        var jsx;\n\n        if (this.hasPlugin(\"jsx\") && (this.match(types.jsxTagStart) || this.isRelational(\"<\"))) {\n          state = this.state.clone();\n          jsx = this.tryParse(function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseMaybeAssign\", _this9).call(_this9, refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n          }, state);\n          if (!jsx.error) return jsx.node;\n          var context = this.state.context;\n\n          if (context[context.length - 1] === types$1.j_oTag) {\n            context.length -= 2;\n          } else if (context[context.length - 1] === types$1.j_expr) {\n            context.length -= 1;\n          }\n        }\n\n        if (((_jsx = jsx) == null ? void 0 : _jsx.error) || this.isRelational(\"<\")) {\n          var _jsx2, _jsx3;\n\n          state = state || this.state.clone();\n          var typeParameters;\n          var arrow = this.tryParse(function (abort) {\n            var _arrowExpression$extr;\n\n            typeParameters = _this9.flowParseTypeParameterDeclaration();\n\n            var arrowExpression = _this9.forwardNoArrowParamsConversionAt(typeParameters, function () {\n              var result = _get(_getPrototypeOf(_temp.prototype), \"parseMaybeAssign\", _this9).call(_this9, refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n\n              _this9.resetStartLocationFromNode(result, typeParameters);\n\n              return result;\n            });\n\n            if (arrowExpression.type !== \"ArrowFunctionExpression\" && ((_arrowExpression$extr = arrowExpression.extra) == null ? void 0 : _arrowExpression$extr.parenthesized)) {\n              abort();\n            }\n\n            var expr = _this9.maybeUnwrapTypeCastExpression(arrowExpression);\n\n            expr.typeParameters = typeParameters;\n\n            _this9.resetStartLocationFromNode(expr, typeParameters);\n\n            return arrowExpression;\n          }, state);\n          var arrowExpression = null;\n\n          if (arrow.node && this.maybeUnwrapTypeCastExpression(arrow.node).type === \"ArrowFunctionExpression\") {\n            if (!arrow.error && !arrow.aborted) {\n              if (arrow.node.async) {\n                this.raise(typeParameters.start, FlowErrors.UnexpectedTypeParameterBeforeAsyncArrowFunction);\n              }\n\n              return arrow.node;\n            }\n\n            arrowExpression = arrow.node;\n          }\n\n          if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n            this.state = jsx.failState;\n            return jsx.node;\n          }\n\n          if (arrowExpression) {\n            this.state = arrow.failState;\n            return arrowExpression;\n          }\n\n          if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n          if (arrow.thrown) throw arrow.error;\n          throw this.raise(typeParameters.start, FlowErrors.UnexpectedTokenAfterTypeParameter);\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseMaybeAssign\", this).call(this, refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n      }\n    }, {\n      key: \"parseArrow\",\n      value: function parseArrow(node) {\n        var _this10 = this;\n\n        if (this.match(types.colon)) {\n          var result = this.tryParse(function () {\n            var oldNoAnonFunctionType = _this10.state.noAnonFunctionType;\n            _this10.state.noAnonFunctionType = true;\n\n            var typeNode = _this10.startNode();\n\n            var _this10$flowParseType = _this10.flowParseTypeAndPredicateInitialiser();\n\n            var _this10$flowParseType2 = _slicedToArray(_this10$flowParseType, 2);\n\n            typeNode.typeAnnotation = _this10$flowParseType2[0];\n            node.predicate = _this10$flowParseType2[1];\n            _this10.state.noAnonFunctionType = oldNoAnonFunctionType;\n            if (_this10.canInsertSemicolon()) _this10.unexpected();\n            if (!_this10.match(types.arrow)) _this10.unexpected();\n            return typeNode;\n          });\n          if (result.thrown) return null;\n          if (result.error) this.state = result.failState;\n          node.returnType = result.node.typeAnnotation ? this.finishNode(result.node, \"TypeAnnotation\") : null;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseArrow\", this).call(this, node);\n      }\n    }, {\n      key: \"shouldParseArrow\",\n      value: function shouldParseArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_temp.prototype), \"shouldParseArrow\", this).call(this);\n      }\n    }, {\n      key: \"setArrowFunctionParameters\",\n      value: function setArrowFunctionParameters(node, params) {\n        if (this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          node.params = params;\n        } else {\n          _get(_getPrototypeOf(_temp.prototype), \"setArrowFunctionParameters\", this).call(this, node, params);\n        }\n      }\n    }, {\n      key: \"checkParams\",\n      value: function checkParams(node, allowDuplicates, isArrowFunction) {\n        if (isArrowFunction && this.state.noArrowParamsConversionAt.indexOf(node.start) !== -1) {\n          return;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"checkParams\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseParenAndDistinguishExpression\",\n      value: function parseParenAndDistinguishExpression(canBeArrow) {\n        return _get(_getPrototypeOf(_temp.prototype), \"parseParenAndDistinguishExpression\", this).call(this, canBeArrow && this.state.noArrowAt.indexOf(this.state.start) === -1);\n      }\n    }, {\n      key: \"parseSubscripts\",\n      value: function parseSubscripts(base, startPos, startLoc, noCalls) {\n        var _this11 = this;\n\n        if (base.type === \"Identifier\" && base.name === \"async\" && this.state.noArrowAt.indexOf(startPos) !== -1) {\n          this.next();\n          var node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          base = this.finishNode(node, \"CallExpression\");\n        } else if (base.type === \"Identifier\" && base.name === \"async\" && this.isRelational(\"<\")) {\n          var state = this.state.clone();\n          var arrow = this.tryParse(function (abort) {\n            return _this11.parseAsyncArrowWithTypeParameters(startPos, startLoc) || abort();\n          }, state);\n          if (!arrow.error && !arrow.aborted) return arrow.node;\n          var result = this.tryParse(function () {\n            return _get(_getPrototypeOf(_temp.prototype), \"parseSubscripts\", _this11).call(_this11, base, startPos, startLoc, noCalls);\n          }, state);\n          if (result.node && !result.error) return result.node;\n\n          if (arrow.node) {\n            this.state = arrow.failState;\n            return arrow.node;\n          }\n\n          if (result.node) {\n            this.state = result.failState;\n            return result.node;\n          }\n\n          throw arrow.error || result.error;\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseSubscripts\", this).call(this, base, startPos, startLoc, noCalls);\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, subscriptState) {\n        var _this12 = this;\n\n        if (this.match(types.questionDot) && this.isLookaheadToken_lt()) {\n          subscriptState.optionalChainMember = true;\n\n          if (noCalls) {\n            subscriptState.stop = true;\n            return base;\n          }\n\n          this.next();\n          var node = this.startNodeAt(startPos, startLoc);\n          node.callee = base;\n          node.typeArguments = this.flowParseTypeParameterInstantiation();\n          this.expect(types.parenL);\n          node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n          node.optional = true;\n          return this.finishCallExpression(node, true);\n        } else if (!noCalls && this.shouldParseTypes() && this.isRelational(\"<\")) {\n          var _node4 = this.startNodeAt(startPos, startLoc);\n\n          _node4.callee = base;\n          var result = this.tryParse(function () {\n            _node4.typeArguments = _this12.flowParseTypeParameterInstantiationCallOrNew();\n\n            _this12.expect(types.parenL);\n\n            _node4.arguments = _this12.parseCallExpressionArguments(types.parenR, false);\n            if (subscriptState.optionalChainMember) _node4.optional = false;\n            return _this12.finishCallExpression(_node4, subscriptState.optionalChainMember);\n          });\n\n          if (result.node) {\n            if (result.error) this.state = result.failState;\n            return result.node;\n          }\n        }\n\n        return _get(_getPrototypeOf(_temp.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, subscriptState);\n      }\n    }, {\n      key: \"parseNewArguments\",\n      value: function parseNewArguments(node) {\n        var _this13 = this;\n\n        var targs = null;\n\n        if (this.shouldParseTypes() && this.isRelational(\"<\")) {\n          targs = this.tryParse(function () {\n            return _this13.flowParseTypeParameterInstantiationCallOrNew();\n          }).node;\n        }\n\n        node.typeArguments = targs;\n\n        _get(_getPrototypeOf(_temp.prototype), \"parseNewArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseAsyncArrowWithTypeParameters\",\n      value: function parseAsyncArrowWithTypeParameters(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n        this.parseFunctionParams(node);\n        if (!this.parseArrow(node)) return;\n        return this.parseArrowExpression(node, undefined, true);\n      }\n    }, {\n      key: \"readToken_mult_modulo\",\n      value: function readToken_mult_modulo(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 42 && next === 47 && this.state.hasFlowComment) {\n          this.state.hasFlowComment = false;\n          this.state.pos += 2;\n          this.nextToken();\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"readToken_mult_modulo\", this).call(this, code);\n      }\n    }, {\n      key: \"readToken_pipe_amp\",\n      value: function readToken_pipe_amp(code) {\n        var next = this.input.charCodeAt(this.state.pos + 1);\n\n        if (code === 124 && next === 125) {\n          this.finishOp(types.braceBarR, 2);\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"readToken_pipe_amp\", this).call(this, code);\n      }\n    }, {\n      key: \"parseTopLevel\",\n      value: function parseTopLevel(file, program) {\n        var fileNode = _get(_getPrototypeOf(_temp.prototype), \"parseTopLevel\", this).call(this, file, program);\n\n        if (this.state.hasFlowComment) {\n          this.raise(this.state.pos, FlowErrors.UnterminatedFlowComment);\n        }\n\n        return fileNode;\n      }\n    }, {\n      key: \"skipBlockComment\",\n      value: function skipBlockComment() {\n        if (this.hasPlugin(\"flowComments\") && this.skipFlowComment()) {\n          if (this.state.hasFlowComment) {\n            this.unexpected(null, FlowErrors.NestedFlowComment);\n          }\n\n          this.hasFlowCommentCompletion();\n          this.state.pos += this.skipFlowComment();\n          this.state.hasFlowComment = true;\n          return;\n        }\n\n        if (this.state.hasFlowComment) {\n          var end = this.input.indexOf(\"*-/\", this.state.pos += 2);\n\n          if (end === -1) {\n            throw this.raise(this.state.pos - 2, ErrorMessages.UnterminatedComment);\n          }\n\n          this.state.pos = end + 3;\n          return;\n        }\n\n        _get(_getPrototypeOf(_temp.prototype), \"skipBlockComment\", this).call(this);\n      }\n    }, {\n      key: \"skipFlowComment\",\n      value: function skipFlowComment() {\n        var pos = this.state.pos;\n        var shiftToFirstNonWhiteSpace = 2;\n\n        while ([32, 9].includes(this.input.charCodeAt(pos + shiftToFirstNonWhiteSpace))) {\n          shiftToFirstNonWhiteSpace++;\n        }\n\n        var ch2 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos);\n        var ch3 = this.input.charCodeAt(shiftToFirstNonWhiteSpace + pos + 1);\n\n        if (ch2 === 58 && ch3 === 58) {\n          return shiftToFirstNonWhiteSpace + 2;\n        }\n\n        if (this.input.slice(shiftToFirstNonWhiteSpace + pos, shiftToFirstNonWhiteSpace + pos + 12) === \"flow-include\") {\n          return shiftToFirstNonWhiteSpace + 12;\n        }\n\n        if (ch2 === 58 && ch3 !== 58) {\n          return shiftToFirstNonWhiteSpace;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"hasFlowCommentCompletion\",\n      value: function hasFlowCommentCompletion() {\n        var end = this.input.indexOf(\"*/\", this.state.pos);\n\n        if (end === -1) {\n          throw this.raise(this.state.pos, ErrorMessages.UnterminatedComment);\n        }\n      }\n    }, {\n      key: \"flowEnumErrorBooleanMemberNotInitialized\",\n      value: function flowEnumErrorBooleanMemberNotInitialized(pos, _ref3) {\n        var enumName = _ref3.enumName,\n            memberName = _ref3.memberName;\n        this.raise(pos, FlowErrors.EnumBooleanMemberNotInitialized, memberName, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidMemberName\",\n      value: function flowEnumErrorInvalidMemberName(pos, _ref4) {\n        var enumName = _ref4.enumName,\n            memberName = _ref4.memberName;\n        var suggestion = memberName[0].toUpperCase() + memberName.slice(1);\n        this.raise(pos, FlowErrors.EnumInvalidMemberName, memberName, suggestion, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorDuplicateMemberName\",\n      value: function flowEnumErrorDuplicateMemberName(pos, _ref5) {\n        var enumName = _ref5.enumName,\n            memberName = _ref5.memberName;\n        this.raise(pos, FlowErrors.EnumDuplicateMemberName, memberName, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInconsistentMemberValues\",\n      value: function flowEnumErrorInconsistentMemberValues(pos, _ref6) {\n        var enumName = _ref6.enumName;\n        this.raise(pos, FlowErrors.EnumInconsistentMemberValues, enumName);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidExplicitType\",\n      value: function flowEnumErrorInvalidExplicitType(pos, _ref7) {\n        var enumName = _ref7.enumName,\n            suppliedType = _ref7.suppliedType;\n        return this.raise(pos, suppliedType === null ? FlowErrors.EnumInvalidExplicitTypeUnknownSupplied : FlowErrors.EnumInvalidExplicitType, enumName, suppliedType);\n      }\n    }, {\n      key: \"flowEnumErrorInvalidMemberInitializer\",\n      value: function flowEnumErrorInvalidMemberInitializer(pos, _ref8) {\n        var enumName = _ref8.enumName,\n            explicitType = _ref8.explicitType,\n            memberName = _ref8.memberName;\n        var message = null;\n\n        switch (explicitType) {\n          case \"boolean\":\n          case \"number\":\n          case \"string\":\n            message = FlowErrors.EnumInvalidMemberInitializerPrimaryType;\n            break;\n\n          case \"symbol\":\n            message = FlowErrors.EnumInvalidMemberInitializerSymbolType;\n            break;\n\n          default:\n            message = FlowErrors.EnumInvalidMemberInitializerUnknownType;\n        }\n\n        return this.raise(pos, message, enumName, memberName, explicitType);\n      }\n    }, {\n      key: \"flowEnumErrorNumberMemberNotInitialized\",\n      value: function flowEnumErrorNumberMemberNotInitialized(pos, _ref9) {\n        var enumName = _ref9.enumName,\n            memberName = _ref9.memberName;\n        this.raise(pos, FlowErrors.EnumNumberMemberNotInitialized, enumName, memberName);\n      }\n    }, {\n      key: \"flowEnumErrorStringMemberInconsistentlyInitailized\",\n      value: function flowEnumErrorStringMemberInconsistentlyInitailized(pos, _ref10) {\n        var enumName = _ref10.enumName;\n        this.raise(pos, FlowErrors.EnumStringMemberInconsistentlyInitailized, enumName);\n      }\n    }, {\n      key: \"flowEnumMemberInit\",\n      value: function flowEnumMemberInit() {\n        var _this14 = this;\n\n        var startPos = this.state.start;\n\n        var endOfInit = function endOfInit() {\n          return _this14.match(types.comma) || _this14.match(types.braceR);\n        };\n\n        switch (this.state.type) {\n          case types.num:\n            {\n              var literal = this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n              if (endOfInit()) {\n                return {\n                  type: \"number\",\n                  pos: literal.start,\n                  value: literal\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          case types.string:\n            {\n              var _literal = this.parseLiteral(this.state.value, \"StringLiteral\");\n\n              if (endOfInit()) {\n                return {\n                  type: \"string\",\n                  pos: _literal.start,\n                  value: _literal\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          case types._true:\n          case types._false:\n            {\n              var _literal2 = this.parseBooleanLiteral();\n\n              if (endOfInit()) {\n                return {\n                  type: \"boolean\",\n                  pos: _literal2.start,\n                  value: _literal2\n                };\n              }\n\n              return {\n                type: \"invalid\",\n                pos: startPos\n              };\n            }\n\n          default:\n            return {\n              type: \"invalid\",\n              pos: startPos\n            };\n        }\n      }\n    }, {\n      key: \"flowEnumMemberRaw\",\n      value: function flowEnumMemberRaw() {\n        var pos = this.state.start;\n        var id = this.parseIdentifier(true);\n        var init = this.eat(types.eq) ? this.flowEnumMemberInit() : {\n          type: \"none\",\n          pos: pos\n        };\n        return {\n          id: id,\n          init: init\n        };\n      }\n    }, {\n      key: \"flowEnumCheckExplicitTypeMismatch\",\n      value: function flowEnumCheckExplicitTypeMismatch(pos, context, expectedType) {\n        var explicitType = context.explicitType;\n\n        if (explicitType === null) {\n          return;\n        }\n\n        if (explicitType !== expectedType) {\n          this.flowEnumErrorInvalidMemberInitializer(pos, context);\n        }\n      }\n    }, {\n      key: \"flowEnumMembers\",\n      value: function flowEnumMembers(_ref11) {\n        var enumName = _ref11.enumName,\n            explicitType = _ref11.explicitType;\n        var seenNames = new Set();\n        var members = {\n          booleanMembers: [],\n          numberMembers: [],\n          stringMembers: [],\n          defaultedMembers: []\n        };\n\n        while (!this.match(types.braceR)) {\n          var memberNode = this.startNode();\n\n          var _this$flowEnumMemberR = this.flowEnumMemberRaw(),\n              id = _this$flowEnumMemberR.id,\n              init = _this$flowEnumMemberR.init;\n\n          var memberName = id.name;\n\n          if (memberName === \"\") {\n            continue;\n          }\n\n          if (/^[a-z]/.test(memberName)) {\n            this.flowEnumErrorInvalidMemberName(id.start, {\n              enumName: enumName,\n              memberName: memberName\n            });\n          }\n\n          if (seenNames.has(memberName)) {\n            this.flowEnumErrorDuplicateMemberName(id.start, {\n              enumName: enumName,\n              memberName: memberName\n            });\n          }\n\n          seenNames.add(memberName);\n          var context = {\n            enumName: enumName,\n            explicitType: explicitType,\n            memberName: memberName\n          };\n          memberNode.id = id;\n\n          switch (init.type) {\n            case \"boolean\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"boolean\");\n                memberNode.init = init.value;\n                members.booleanMembers.push(this.finishNode(memberNode, \"EnumBooleanMember\"));\n                break;\n              }\n\n            case \"number\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"number\");\n                memberNode.init = init.value;\n                members.numberMembers.push(this.finishNode(memberNode, \"EnumNumberMember\"));\n                break;\n              }\n\n            case \"string\":\n              {\n                this.flowEnumCheckExplicitTypeMismatch(init.pos, context, \"string\");\n                memberNode.init = init.value;\n                members.stringMembers.push(this.finishNode(memberNode, \"EnumStringMember\"));\n                break;\n              }\n\n            case \"invalid\":\n              {\n                throw this.flowEnumErrorInvalidMemberInitializer(init.pos, context);\n              }\n\n            case \"none\":\n              {\n                switch (explicitType) {\n                  case \"boolean\":\n                    this.flowEnumErrorBooleanMemberNotInitialized(init.pos, context);\n                    break;\n\n                  case \"number\":\n                    this.flowEnumErrorNumberMemberNotInitialized(init.pos, context);\n                    break;\n\n                  default:\n                    members.defaultedMembers.push(this.finishNode(memberNode, \"EnumDefaultedMember\"));\n                }\n              }\n          }\n\n          if (!this.match(types.braceR)) {\n            this.expect(types.comma);\n          }\n        }\n\n        return members;\n      }\n    }, {\n      key: \"flowEnumStringMembers\",\n      value: function flowEnumStringMembers(initializedMembers, defaultedMembers, _ref12) {\n        var enumName = _ref12.enumName;\n\n        if (initializedMembers.length === 0) {\n          return defaultedMembers;\n        } else if (defaultedMembers.length === 0) {\n          return initializedMembers;\n        } else if (defaultedMembers.length > initializedMembers.length) {\n          for (var _i = 0; _i < initializedMembers.length; _i++) {\n            var member = initializedMembers[_i];\n            this.flowEnumErrorStringMemberInconsistentlyInitailized(member.start, {\n              enumName: enumName\n            });\n          }\n\n          return defaultedMembers;\n        } else {\n          for (var _i2 = 0; _i2 < defaultedMembers.length; _i2++) {\n            var _member = defaultedMembers[_i2];\n            this.flowEnumErrorStringMemberInconsistentlyInitailized(_member.start, {\n              enumName: enumName\n            });\n          }\n\n          return initializedMembers;\n        }\n      }\n    }, {\n      key: \"flowEnumParseExplicitType\",\n      value: function flowEnumParseExplicitType(_ref13) {\n        var enumName = _ref13.enumName;\n\n        if (this.eatContextual(\"of\")) {\n          if (!this.match(types.name)) {\n            throw this.flowEnumErrorInvalidExplicitType(this.state.start, {\n              enumName: enumName,\n              suppliedType: null\n            });\n          }\n\n          var value = this.state.value;\n          this.next();\n\n          if (value !== \"boolean\" && value !== \"number\" && value !== \"string\" && value !== \"symbol\") {\n            this.flowEnumErrorInvalidExplicitType(this.state.start, {\n              enumName: enumName,\n              suppliedType: value\n            });\n          }\n\n          return value;\n        }\n\n        return null;\n      }\n    }, {\n      key: \"flowEnumBody\",\n      value: function flowEnumBody(node, _ref14) {\n        var _this15 = this;\n\n        var enumName = _ref14.enumName,\n            nameLoc = _ref14.nameLoc;\n        var explicitType = this.flowEnumParseExplicitType({\n          enumName: enumName\n        });\n        this.expect(types.braceL);\n        var members = this.flowEnumMembers({\n          enumName: enumName,\n          explicitType: explicitType\n        });\n\n        switch (explicitType) {\n          case \"boolean\":\n            node.explicitType = true;\n            node.members = members.booleanMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumBooleanBody\");\n\n          case \"number\":\n            node.explicitType = true;\n            node.members = members.numberMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumNumberBody\");\n\n          case \"string\":\n            node.explicitType = true;\n            node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n              enumName: enumName\n            });\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumStringBody\");\n\n          case \"symbol\":\n            node.members = members.defaultedMembers;\n            this.expect(types.braceR);\n            return this.finishNode(node, \"EnumSymbolBody\");\n\n          default:\n            {\n              var empty = function empty() {\n                node.members = [];\n\n                _this15.expect(types.braceR);\n\n                return _this15.finishNode(node, \"EnumStringBody\");\n              };\n\n              node.explicitType = false;\n              var boolsLen = members.booleanMembers.length;\n              var numsLen = members.numberMembers.length;\n              var strsLen = members.stringMembers.length;\n              var defaultedLen = members.defaultedMembers.length;\n\n              if (!boolsLen && !numsLen && !strsLen && !defaultedLen) {\n                return empty();\n              } else if (!boolsLen && !numsLen) {\n                node.members = this.flowEnumStringMembers(members.stringMembers, members.defaultedMembers, {\n                  enumName: enumName\n                });\n                this.expect(types.braceR);\n                return this.finishNode(node, \"EnumStringBody\");\n              } else if (!numsLen && !strsLen && boolsLen >= defaultedLen) {\n                for (var _i3 = 0, _members$defaultedMem = members.defaultedMembers; _i3 < _members$defaultedMem.length; _i3++) {\n                  var member = _members$defaultedMem[_i3];\n                  this.flowEnumErrorBooleanMemberNotInitialized(member.start, {\n                    enumName: enumName,\n                    memberName: member.id.name\n                  });\n                }\n\n                node.members = members.booleanMembers;\n                this.expect(types.braceR);\n                return this.finishNode(node, \"EnumBooleanBody\");\n              } else if (!boolsLen && !strsLen && numsLen >= defaultedLen) {\n                for (var _i4 = 0, _members$defaultedMem2 = members.defaultedMembers; _i4 < _members$defaultedMem2.length; _i4++) {\n                  var _member2 = _members$defaultedMem2[_i4];\n                  this.flowEnumErrorNumberMemberNotInitialized(_member2.start, {\n                    enumName: enumName,\n                    memberName: _member2.id.name\n                  });\n                }\n\n                node.members = members.numberMembers;\n                this.expect(types.braceR);\n                return this.finishNode(node, \"EnumNumberBody\");\n              } else {\n                this.flowEnumErrorInconsistentMemberValues(nameLoc, {\n                  enumName: enumName\n                });\n                return empty();\n              }\n            }\n        }\n      }\n    }, {\n      key: \"flowParseEnumDeclaration\",\n      value: function flowParseEnumDeclaration(node) {\n        var id = this.parseIdentifier();\n        node.id = id;\n        node.body = this.flowEnumBody(this.startNode(), {\n          enumName: id.name,\n          nameLoc: id.start\n        });\n        return this.finishNode(node, \"EnumDeclaration\");\n      }\n    }, {\n      key: \"updateContext\",\n      value: function updateContext(prevType) {\n        if (this.match(types.name) && this.state.value === \"of\" && prevType === types.name && this.input.slice(this.state.lastTokStart, this.state.lastTokEnd) === \"interface\") {\n          this.state.exprAllowed = false;\n        } else {\n          _get(_getPrototypeOf(_temp.prototype), \"updateContext\", this).call(this, prevType);\n        }\n      }\n    }, {\n      key: \"isLookaheadToken_lt\",\n      value: function isLookaheadToken_lt() {\n        var next = this.nextTokenStart();\n\n        if (this.input.charCodeAt(next) === 60) {\n          var afterNext = this.input.charCodeAt(next + 1);\n          return afterNext !== 60 && afterNext !== 61;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"maybeUnwrapTypeCastExpression\",\n      value: function maybeUnwrapTypeCastExpression(node) {\n        return node.type === \"TypeCastExpression\" ? node.expression : node;\n      }\n    }]);\n\n    return _temp;\n  }(superClass), _temp;\n};\n\nvar entities = {\n  quot: \"\\\"\",\n  amp: \"&\",\n  apos: \"'\",\n  lt: \"<\",\n  gt: \">\",\n  nbsp: \"\\xA0\",\n  iexcl: \"\\xA1\",\n  cent: \"\\xA2\",\n  pound: \"\\xA3\",\n  curren: \"\\xA4\",\n  yen: \"\\xA5\",\n  brvbar: \"\\xA6\",\n  sect: \"\\xA7\",\n  uml: \"\\xA8\",\n  copy: \"\\xA9\",\n  ordf: \"\\xAA\",\n  laquo: \"\\xAB\",\n  not: \"\\xAC\",\n  shy: \"\\xAD\",\n  reg: \"\\xAE\",\n  macr: \"\\xAF\",\n  deg: \"\\xB0\",\n  plusmn: \"\\xB1\",\n  sup2: \"\\xB2\",\n  sup3: \"\\xB3\",\n  acute: \"\\xB4\",\n  micro: \"\\xB5\",\n  para: \"\\xB6\",\n  middot: \"\\xB7\",\n  cedil: \"\\xB8\",\n  sup1: \"\\xB9\",\n  ordm: \"\\xBA\",\n  raquo: \"\\xBB\",\n  frac14: \"\\xBC\",\n  frac12: \"\\xBD\",\n  frac34: \"\\xBE\",\n  iquest: \"\\xBF\",\n  Agrave: \"\\xC0\",\n  Aacute: \"\\xC1\",\n  Acirc: \"\\xC2\",\n  Atilde: \"\\xC3\",\n  Auml: \"\\xC4\",\n  Aring: \"\\xC5\",\n  AElig: \"\\xC6\",\n  Ccedil: \"\\xC7\",\n  Egrave: \"\\xC8\",\n  Eacute: \"\\xC9\",\n  Ecirc: \"\\xCA\",\n  Euml: \"\\xCB\",\n  Igrave: \"\\xCC\",\n  Iacute: \"\\xCD\",\n  Icirc: \"\\xCE\",\n  Iuml: \"\\xCF\",\n  ETH: \"\\xD0\",\n  Ntilde: \"\\xD1\",\n  Ograve: \"\\xD2\",\n  Oacute: \"\\xD3\",\n  Ocirc: \"\\xD4\",\n  Otilde: \"\\xD5\",\n  Ouml: \"\\xD6\",\n  times: \"\\xD7\",\n  Oslash: \"\\xD8\",\n  Ugrave: \"\\xD9\",\n  Uacute: \"\\xDA\",\n  Ucirc: \"\\xDB\",\n  Uuml: \"\\xDC\",\n  Yacute: \"\\xDD\",\n  THORN: \"\\xDE\",\n  szlig: \"\\xDF\",\n  agrave: \"\\xE0\",\n  aacute: \"\\xE1\",\n  acirc: \"\\xE2\",\n  atilde: \"\\xE3\",\n  auml: \"\\xE4\",\n  aring: \"\\xE5\",\n  aelig: \"\\xE6\",\n  ccedil: \"\\xE7\",\n  egrave: \"\\xE8\",\n  eacute: \"\\xE9\",\n  ecirc: \"\\xEA\",\n  euml: \"\\xEB\",\n  igrave: \"\\xEC\",\n  iacute: \"\\xED\",\n  icirc: \"\\xEE\",\n  iuml: \"\\xEF\",\n  eth: \"\\xF0\",\n  ntilde: \"\\xF1\",\n  ograve: \"\\xF2\",\n  oacute: \"\\xF3\",\n  ocirc: \"\\xF4\",\n  otilde: \"\\xF5\",\n  ouml: \"\\xF6\",\n  divide: \"\\xF7\",\n  oslash: \"\\xF8\",\n  ugrave: \"\\xF9\",\n  uacute: \"\\xFA\",\n  ucirc: \"\\xFB\",\n  uuml: \"\\xFC\",\n  yacute: \"\\xFD\",\n  thorn: \"\\xFE\",\n  yuml: \"\\xFF\",\n  OElig: \"\\u0152\",\n  oelig: \"\\u0153\",\n  Scaron: \"\\u0160\",\n  scaron: \"\\u0161\",\n  Yuml: \"\\u0178\",\n  fnof: \"\\u0192\",\n  circ: \"\\u02C6\",\n  tilde: \"\\u02DC\",\n  Alpha: \"\\u0391\",\n  Beta: \"\\u0392\",\n  Gamma: \"\\u0393\",\n  Delta: \"\\u0394\",\n  Epsilon: \"\\u0395\",\n  Zeta: \"\\u0396\",\n  Eta: \"\\u0397\",\n  Theta: \"\\u0398\",\n  Iota: \"\\u0399\",\n  Kappa: \"\\u039A\",\n  Lambda: \"\\u039B\",\n  Mu: \"\\u039C\",\n  Nu: \"\\u039D\",\n  Xi: \"\\u039E\",\n  Omicron: \"\\u039F\",\n  Pi: \"\\u03A0\",\n  Rho: \"\\u03A1\",\n  Sigma: \"\\u03A3\",\n  Tau: \"\\u03A4\",\n  Upsilon: \"\\u03A5\",\n  Phi: \"\\u03A6\",\n  Chi: \"\\u03A7\",\n  Psi: \"\\u03A8\",\n  Omega: \"\\u03A9\",\n  alpha: \"\\u03B1\",\n  beta: \"\\u03B2\",\n  gamma: \"\\u03B3\",\n  delta: \"\\u03B4\",\n  epsilon: \"\\u03B5\",\n  zeta: \"\\u03B6\",\n  eta: \"\\u03B7\",\n  theta: \"\\u03B8\",\n  iota: \"\\u03B9\",\n  kappa: \"\\u03BA\",\n  lambda: \"\\u03BB\",\n  mu: \"\\u03BC\",\n  nu: \"\\u03BD\",\n  xi: \"\\u03BE\",\n  omicron: \"\\u03BF\",\n  pi: \"\\u03C0\",\n  rho: \"\\u03C1\",\n  sigmaf: \"\\u03C2\",\n  sigma: \"\\u03C3\",\n  tau: \"\\u03C4\",\n  upsilon: \"\\u03C5\",\n  phi: \"\\u03C6\",\n  chi: \"\\u03C7\",\n  psi: \"\\u03C8\",\n  omega: \"\\u03C9\",\n  thetasym: \"\\u03D1\",\n  upsih: \"\\u03D2\",\n  piv: \"\\u03D6\",\n  ensp: \"\\u2002\",\n  emsp: \"\\u2003\",\n  thinsp: \"\\u2009\",\n  zwnj: \"\\u200C\",\n  zwj: \"\\u200D\",\n  lrm: \"\\u200E\",\n  rlm: \"\\u200F\",\n  ndash: \"\\u2013\",\n  mdash: \"\\u2014\",\n  lsquo: \"\\u2018\",\n  rsquo: \"\\u2019\",\n  sbquo: \"\\u201A\",\n  ldquo: \"\\u201C\",\n  rdquo: \"\\u201D\",\n  bdquo: \"\\u201E\",\n  dagger: \"\\u2020\",\n  Dagger: \"\\u2021\",\n  bull: \"\\u2022\",\n  hellip: \"\\u2026\",\n  permil: \"\\u2030\",\n  prime: \"\\u2032\",\n  Prime: \"\\u2033\",\n  lsaquo: \"\\u2039\",\n  rsaquo: \"\\u203A\",\n  oline: \"\\u203E\",\n  frasl: \"\\u2044\",\n  euro: \"\\u20AC\",\n  image: \"\\u2111\",\n  weierp: \"\\u2118\",\n  real: \"\\u211C\",\n  trade: \"\\u2122\",\n  alefsym: \"\\u2135\",\n  larr: \"\\u2190\",\n  uarr: \"\\u2191\",\n  rarr: \"\\u2192\",\n  darr: \"\\u2193\",\n  harr: \"\\u2194\",\n  crarr: \"\\u21B5\",\n  lArr: \"\\u21D0\",\n  uArr: \"\\u21D1\",\n  rArr: \"\\u21D2\",\n  dArr: \"\\u21D3\",\n  hArr: \"\\u21D4\",\n  forall: \"\\u2200\",\n  part: \"\\u2202\",\n  exist: \"\\u2203\",\n  empty: \"\\u2205\",\n  nabla: \"\\u2207\",\n  isin: \"\\u2208\",\n  notin: \"\\u2209\",\n  ni: \"\\u220B\",\n  prod: \"\\u220F\",\n  sum: \"\\u2211\",\n  minus: \"\\u2212\",\n  lowast: \"\\u2217\",\n  radic: \"\\u221A\",\n  prop: \"\\u221D\",\n  infin: \"\\u221E\",\n  ang: \"\\u2220\",\n  and: \"\\u2227\",\n  or: \"\\u2228\",\n  cap: \"\\u2229\",\n  cup: \"\\u222A\",\n  int: \"\\u222B\",\n  there4: \"\\u2234\",\n  sim: \"\\u223C\",\n  cong: \"\\u2245\",\n  asymp: \"\\u2248\",\n  ne: \"\\u2260\",\n  equiv: \"\\u2261\",\n  le: \"\\u2264\",\n  ge: \"\\u2265\",\n  sub: \"\\u2282\",\n  sup: \"\\u2283\",\n  nsub: \"\\u2284\",\n  sube: \"\\u2286\",\n  supe: \"\\u2287\",\n  oplus: \"\\u2295\",\n  otimes: \"\\u2297\",\n  perp: \"\\u22A5\",\n  sdot: \"\\u22C5\",\n  lceil: \"\\u2308\",\n  rceil: \"\\u2309\",\n  lfloor: \"\\u230A\",\n  rfloor: \"\\u230B\",\n  lang: \"\\u2329\",\n  rang: \"\\u232A\",\n  loz: \"\\u25CA\",\n  spades: \"\\u2660\",\n  clubs: \"\\u2663\",\n  hearts: \"\\u2665\",\n  diams: \"\\u2666\"\n};\nvar HEX_NUMBER = /^[\\da-fA-F]+$/;\nvar DECIMAL_NUMBER = /^\\d+$/;\nvar JsxErrors = Object.freeze({\n  AttributeIsEmpty: \"JSX attributes must only be assigned a non-empty expression\",\n  MissingClosingTagFragment: \"Expected corresponding JSX closing tag for <>\",\n  MissingClosingTagElement: \"Expected corresponding JSX closing tag for <%0>\",\n  UnsupportedJsxValue: \"JSX value should be either an expression or a quoted JSX text\",\n  UnterminatedJsxContent: \"Unterminated JSX contents\",\n  UnwrappedAdjacentJSXElements: \"Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>?\"\n});\ntypes$1.j_oTag = new TokContext(\"<tag\", false);\ntypes$1.j_cTag = new TokContext(\"</tag\", false);\ntypes$1.j_expr = new TokContext(\"<tag>...</tag>\", true, true);\ntypes.jsxName = new TokenType(\"jsxName\");\ntypes.jsxText = new TokenType(\"jsxText\", {\n  beforeExpr: true\n});\ntypes.jsxTagStart = new TokenType(\"jsxTagStart\", {\n  startsExpr: true\n});\ntypes.jsxTagEnd = new TokenType(\"jsxTagEnd\");\n\ntypes.jsxTagStart.updateContext = function () {\n  this.state.context.push(types$1.j_expr);\n  this.state.context.push(types$1.j_oTag);\n  this.state.exprAllowed = false;\n};\n\ntypes.jsxTagEnd.updateContext = function (prevType) {\n  var out = this.state.context.pop();\n\n  if (out === types$1.j_oTag && prevType === types.slash || out === types$1.j_cTag) {\n    this.state.context.pop();\n    this.state.exprAllowed = this.curContext() === types$1.j_expr;\n  } else {\n    this.state.exprAllowed = true;\n  }\n};\n\nfunction isFragment(object) {\n  return object ? object.type === \"JSXOpeningFragment\" || object.type === \"JSXClosingFragment\" : false;\n}\n\nfunction getQualifiedJSXName(object) {\n  if (object.type === \"JSXIdentifier\") {\n    return object.name;\n  }\n\n  if (object.type === \"JSXNamespacedName\") {\n    return object.namespace.name + \":\" + object.name.name;\n  }\n\n  if (object.type === \"JSXMemberExpression\") {\n    return getQualifiedJSXName(object.object) + \".\" + getQualifiedJSXName(object.property);\n  }\n\n  throw new Error(\"Node had unexpected type: \" + object.type);\n}\n\nvar jsx = function jsx(superClass) {\n  return /*#__PURE__*/function (_superClass3) {\n    _inherits(_class2, _superClass3);\n\n    var _super5 = _createSuper(_class2);\n\n    function _class2() {\n      _classCallCheck(this, _class2);\n\n      return _super5.apply(this, arguments);\n    }\n\n    _createClass(_class2, [{\n      key: \"jsxReadToken\",\n      value: function jsxReadToken() {\n        var out = \"\";\n        var chunkStart = this.state.pos;\n\n        for (;;) {\n          if (this.state.pos >= this.length) {\n            throw this.raise(this.state.start, JsxErrors.UnterminatedJsxContent);\n          }\n\n          var ch = this.input.charCodeAt(this.state.pos);\n\n          switch (ch) {\n            case 60:\n            case 123:\n              if (this.state.pos === this.state.start) {\n                if (ch === 60 && this.state.exprAllowed) {\n                  ++this.state.pos;\n                  return this.finishToken(types.jsxTagStart);\n                }\n\n                return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, ch);\n              }\n\n              out += this.input.slice(chunkStart, this.state.pos);\n              return this.finishToken(types.jsxText, out);\n\n            case 38:\n              out += this.input.slice(chunkStart, this.state.pos);\n              out += this.jsxReadEntity();\n              chunkStart = this.state.pos;\n              break;\n\n            default:\n              if (isNewLine(ch)) {\n                out += this.input.slice(chunkStart, this.state.pos);\n                out += this.jsxReadNewLine(true);\n                chunkStart = this.state.pos;\n              } else {\n                ++this.state.pos;\n              }\n\n          }\n        }\n      }\n    }, {\n      key: \"jsxReadNewLine\",\n      value: function jsxReadNewLine(normalizeCRLF) {\n        var ch = this.input.charCodeAt(this.state.pos);\n        var out;\n        ++this.state.pos;\n\n        if (ch === 13 && this.input.charCodeAt(this.state.pos) === 10) {\n          ++this.state.pos;\n          out = normalizeCRLF ? \"\\n\" : \"\\r\\n\";\n        } else {\n          out = String.fromCharCode(ch);\n        }\n\n        ++this.state.curLine;\n        this.state.lineStart = this.state.pos;\n        return out;\n      }\n    }, {\n      key: \"jsxReadString\",\n      value: function jsxReadString(quote) {\n        var out = \"\";\n        var chunkStart = ++this.state.pos;\n\n        for (;;) {\n          if (this.state.pos >= this.length) {\n            throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n          }\n\n          var ch = this.input.charCodeAt(this.state.pos);\n          if (ch === quote) break;\n\n          if (ch === 38) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadEntity();\n            chunkStart = this.state.pos;\n          } else if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.state.pos);\n            out += this.jsxReadNewLine(false);\n            chunkStart = this.state.pos;\n          } else {\n            ++this.state.pos;\n          }\n        }\n\n        out += this.input.slice(chunkStart, this.state.pos++);\n        return this.finishToken(types.string, out);\n      }\n    }, {\n      key: \"jsxReadEntity\",\n      value: function jsxReadEntity() {\n        var str = \"\";\n        var count = 0;\n        var entity;\n        var ch = this.input[this.state.pos];\n        var startPos = ++this.state.pos;\n\n        while (this.state.pos < this.length && count++ < 10) {\n          ch = this.input[this.state.pos++];\n\n          if (ch === \";\") {\n            if (str[0] === \"#\") {\n              if (str[1] === \"x\") {\n                str = str.substr(2);\n\n                if (HEX_NUMBER.test(str)) {\n                  entity = String.fromCodePoint(parseInt(str, 16));\n                }\n              } else {\n                str = str.substr(1);\n\n                if (DECIMAL_NUMBER.test(str)) {\n                  entity = String.fromCodePoint(parseInt(str, 10));\n                }\n              }\n            } else {\n              entity = entities[str];\n            }\n\n            break;\n          }\n\n          str += ch;\n        }\n\n        if (!entity) {\n          this.state.pos = startPos;\n          return \"&\";\n        }\n\n        return entity;\n      }\n    }, {\n      key: \"jsxReadWord\",\n      value: function jsxReadWord() {\n        var ch;\n        var start = this.state.pos;\n\n        do {\n          ch = this.input.charCodeAt(++this.state.pos);\n        } while (isIdentifierChar(ch) || ch === 45);\n\n        return this.finishToken(types.jsxName, this.input.slice(start, this.state.pos));\n      }\n    }, {\n      key: \"jsxParseIdentifier\",\n      value: function jsxParseIdentifier() {\n        var node = this.startNode();\n\n        if (this.match(types.jsxName)) {\n          node.name = this.state.value;\n        } else if (this.state.type.keyword) {\n          node.name = this.state.type.keyword;\n        } else {\n          this.unexpected();\n        }\n\n        this.next();\n        return this.finishNode(node, \"JSXIdentifier\");\n      }\n    }, {\n      key: \"jsxParseNamespacedName\",\n      value: function jsxParseNamespacedName() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var name = this.jsxParseIdentifier();\n        if (!this.eat(types.colon)) return name;\n        var node = this.startNodeAt(startPos, startLoc);\n        node.namespace = name;\n        node.name = this.jsxParseIdentifier();\n        return this.finishNode(node, \"JSXNamespacedName\");\n      }\n    }, {\n      key: \"jsxParseElementName\",\n      value: function jsxParseElementName() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var node = this.jsxParseNamespacedName();\n\n        if (node.type === \"JSXNamespacedName\") {\n          return node;\n        }\n\n        while (this.eat(types.dot)) {\n          var newNode = this.startNodeAt(startPos, startLoc);\n          newNode.object = node;\n          newNode.property = this.jsxParseIdentifier();\n          node = this.finishNode(newNode, \"JSXMemberExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"jsxParseAttributeValue\",\n      value: function jsxParseAttributeValue() {\n        var node;\n\n        switch (this.state.type) {\n          case types.braceL:\n            node = this.startNode();\n            this.next();\n            node = this.jsxParseExpressionContainer(node);\n\n            if (node.expression.type === \"JSXEmptyExpression\") {\n              this.raise(node.start, JsxErrors.AttributeIsEmpty);\n            }\n\n            return node;\n\n          case types.jsxTagStart:\n          case types.string:\n            return this.parseExprAtom();\n\n          default:\n            throw this.raise(this.state.start, JsxErrors.UnsupportedJsxValue);\n        }\n      }\n    }, {\n      key: \"jsxParseEmptyExpression\",\n      value: function jsxParseEmptyExpression() {\n        var node = this.startNodeAt(this.state.lastTokEnd, this.state.lastTokEndLoc);\n        return this.finishNodeAt(node, \"JSXEmptyExpression\", this.state.start, this.state.startLoc);\n      }\n    }, {\n      key: \"jsxParseSpreadChild\",\n      value: function jsxParseSpreadChild(node) {\n        this.next();\n        node.expression = this.parseExpression();\n        this.expect(types.braceR);\n        return this.finishNode(node, \"JSXSpreadChild\");\n      }\n    }, {\n      key: \"jsxParseExpressionContainer\",\n      value: function jsxParseExpressionContainer(node) {\n        if (this.match(types.braceR)) {\n          node.expression = this.jsxParseEmptyExpression();\n        } else {\n          node.expression = this.parseExpression();\n        }\n\n        this.expect(types.braceR);\n        return this.finishNode(node, \"JSXExpressionContainer\");\n      }\n    }, {\n      key: \"jsxParseAttribute\",\n      value: function jsxParseAttribute() {\n        var node = this.startNode();\n\n        if (this.eat(types.braceL)) {\n          this.expect(types.ellipsis);\n          node.argument = this.parseMaybeAssignAllowIn();\n          this.expect(types.braceR);\n          return this.finishNode(node, \"JSXSpreadAttribute\");\n        }\n\n        node.name = this.jsxParseNamespacedName();\n        node.value = this.eat(types.eq) ? this.jsxParseAttributeValue() : null;\n        return this.finishNode(node, \"JSXAttribute\");\n      }\n    }, {\n      key: \"jsxParseOpeningElementAt\",\n      value: function jsxParseOpeningElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n\n        if (this.match(types.jsxTagEnd)) {\n          this.expect(types.jsxTagEnd);\n          return this.finishNode(node, \"JSXOpeningFragment\");\n        }\n\n        node.name = this.jsxParseElementName();\n        return this.jsxParseOpeningElementAfterName(node);\n      }\n    }, {\n      key: \"jsxParseOpeningElementAfterName\",\n      value: function jsxParseOpeningElementAfterName(node) {\n        var attributes = [];\n\n        while (!this.match(types.slash) && !this.match(types.jsxTagEnd)) {\n          attributes.push(this.jsxParseAttribute());\n        }\n\n        node.attributes = attributes;\n        node.selfClosing = this.eat(types.slash);\n        this.expect(types.jsxTagEnd);\n        return this.finishNode(node, \"JSXOpeningElement\");\n      }\n    }, {\n      key: \"jsxParseClosingElementAt\",\n      value: function jsxParseClosingElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n\n        if (this.match(types.jsxTagEnd)) {\n          this.expect(types.jsxTagEnd);\n          return this.finishNode(node, \"JSXClosingFragment\");\n        }\n\n        node.name = this.jsxParseElementName();\n        this.expect(types.jsxTagEnd);\n        return this.finishNode(node, \"JSXClosingElement\");\n      }\n    }, {\n      key: \"jsxParseElementAt\",\n      value: function jsxParseElementAt(startPos, startLoc) {\n        var node = this.startNodeAt(startPos, startLoc);\n        var children = [];\n        var openingElement = this.jsxParseOpeningElementAt(startPos, startLoc);\n        var closingElement = null;\n\n        if (!openingElement.selfClosing) {\n          contents: for (;;) {\n            switch (this.state.type) {\n              case types.jsxTagStart:\n                startPos = this.state.start;\n                startLoc = this.state.startLoc;\n                this.next();\n\n                if (this.eat(types.slash)) {\n                  closingElement = this.jsxParseClosingElementAt(startPos, startLoc);\n                  break contents;\n                }\n\n                children.push(this.jsxParseElementAt(startPos, startLoc));\n                break;\n\n              case types.jsxText:\n                children.push(this.parseExprAtom());\n                break;\n\n              case types.braceL:\n                {\n                  var _node5 = this.startNode();\n\n                  this.next();\n\n                  if (this.match(types.ellipsis)) {\n                    children.push(this.jsxParseSpreadChild(_node5));\n                  } else {\n                    children.push(this.jsxParseExpressionContainer(_node5));\n                  }\n\n                  break;\n                }\n\n              default:\n                throw this.unexpected();\n            }\n          }\n\n          if (isFragment(openingElement) && !isFragment(closingElement)) {\n            this.raise(closingElement.start, JsxErrors.MissingClosingTagFragment);\n          } else if (!isFragment(openingElement) && isFragment(closingElement)) {\n            this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n          } else if (!isFragment(openingElement) && !isFragment(closingElement)) {\n            if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n              this.raise(closingElement.start, JsxErrors.MissingClosingTagElement, getQualifiedJSXName(openingElement.name));\n            }\n          }\n        }\n\n        if (isFragment(openingElement)) {\n          node.openingFragment = openingElement;\n          node.closingFragment = closingElement;\n        } else {\n          node.openingElement = openingElement;\n          node.closingElement = closingElement;\n        }\n\n        node.children = children;\n\n        if (this.isRelational(\"<\")) {\n          throw this.raise(this.state.start, JsxErrors.UnwrappedAdjacentJSXElements);\n        }\n\n        return isFragment(openingElement) ? this.finishNode(node, \"JSXFragment\") : this.finishNode(node, \"JSXElement\");\n      }\n    }, {\n      key: \"jsxParseElement\",\n      value: function jsxParseElement() {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        this.next();\n        return this.jsxParseElementAt(startPos, startLoc);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom(refExpressionErrors) {\n        if (this.match(types.jsxText)) {\n          return this.parseLiteral(this.state.value, \"JSXText\");\n        } else if (this.match(types.jsxTagStart)) {\n          return this.jsxParseElement();\n        } else if (this.isRelational(\"<\") && this.input.charCodeAt(this.state.pos) !== 33) {\n          this.finishToken(types.jsxTagStart);\n          return this.jsxParseElement();\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"parseExprAtom\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (this.state.inPropertyName) return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, code);\n        var context = this.curContext();\n\n        if (context === types$1.j_expr) {\n          return this.jsxReadToken();\n        }\n\n        if (context === types$1.j_oTag || context === types$1.j_cTag) {\n          if (isIdentifierStart(code)) {\n            return this.jsxReadWord();\n          }\n\n          if (code === 62) {\n            ++this.state.pos;\n            return this.finishToken(types.jsxTagEnd);\n          }\n\n          if ((code === 34 || code === 39) && context === types$1.j_oTag) {\n            return this.jsxReadString(code);\n          }\n        }\n\n        if (code === 60 && this.state.exprAllowed && this.input.charCodeAt(this.state.pos + 1) !== 33) {\n          ++this.state.pos;\n          return this.finishToken(types.jsxTagStart);\n        }\n\n        return _get(_getPrototypeOf(_class2.prototype), \"getTokenFromCode\", this).call(this, code);\n      }\n    }, {\n      key: \"updateContext\",\n      value: function updateContext(prevType) {\n        if (this.match(types.braceL)) {\n          var curContext = this.curContext();\n\n          if (curContext === types$1.j_oTag) {\n            this.state.context.push(types$1.braceExpression);\n          } else if (curContext === types$1.j_expr) {\n            this.state.context.push(types$1.templateQuasi);\n          } else {\n            _get(_getPrototypeOf(_class2.prototype), \"updateContext\", this).call(this, prevType);\n          }\n\n          this.state.exprAllowed = true;\n        } else if (this.match(types.slash) && prevType === types.jsxTagStart) {\n          this.state.context.length -= 2;\n          this.state.context.push(types$1.j_cTag);\n          this.state.exprAllowed = false;\n        } else {\n          return _get(_getPrototypeOf(_class2.prototype), \"updateContext\", this).call(this, prevType);\n        }\n      }\n    }]);\n\n    return _class2;\n  }(superClass);\n};\n\nvar Scope = function Scope(flags) {\n  _classCallCheck(this, Scope);\n\n  this.flags = void 0;\n  this.var = [];\n  this.lexical = [];\n  this.functions = [];\n  this.flags = flags;\n};\n\nvar ScopeHandler = /*#__PURE__*/function () {\n  function ScopeHandler(raise, inModule) {\n    _classCallCheck(this, ScopeHandler);\n\n    this.scopeStack = [];\n    this.undefinedExports = new Map();\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n    this.inModule = inModule;\n  }\n\n  _createClass(ScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new Scope(flags);\n    }\n  }, {\n    key: \"enter\",\n    value: function enter(flags) {\n      this.scopeStack.push(this.createScope(flags));\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.scopeStack.pop();\n    }\n  }, {\n    key: \"treatFunctionsAsVarInScope\",\n    value: function treatFunctionsAsVarInScope(scope) {\n      return !!(scope.flags & SCOPE_FUNCTION || !this.inModule && scope.flags & SCOPE_PROGRAM);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_SCOPE_LEXICAL || bindingType & BIND_SCOPE_FUNCTION) {\n        this.checkRedeclarationInScope(scope, name, bindingType, pos);\n\n        if (bindingType & BIND_SCOPE_FUNCTION) {\n          scope.functions.push(name);\n        } else {\n          scope.lexical.push(name);\n        }\n\n        if (bindingType & BIND_SCOPE_LEXICAL) {\n          this.maybeExportDefined(scope, name);\n        }\n      } else if (bindingType & BIND_SCOPE_VAR) {\n        for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n          scope = this.scopeStack[i];\n          this.checkRedeclarationInScope(scope, name, bindingType, pos);\n          scope.var.push(name);\n          this.maybeExportDefined(scope, name);\n          if (scope.flags & SCOPE_VAR) break;\n        }\n      }\n\n      if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n        this.undefinedExports.delete(name);\n      }\n    }\n  }, {\n    key: \"maybeExportDefined\",\n    value: function maybeExportDefined(scope, name) {\n      if (this.inModule && scope.flags & SCOPE_PROGRAM) {\n        this.undefinedExports.delete(name);\n      }\n    }\n  }, {\n    key: \"checkRedeclarationInScope\",\n    value: function checkRedeclarationInScope(scope, name, bindingType, pos) {\n      if (this.isRedeclaredInScope(scope, name, bindingType)) {\n        this.raise(pos, ErrorMessages.VarRedeclaration, name);\n      }\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (!(bindingType & BIND_KIND_VALUE)) return false;\n\n      if (bindingType & BIND_SCOPE_LEXICAL) {\n        return scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      }\n\n      if (bindingType & BIND_SCOPE_FUNCTION) {\n        return scope.lexical.indexOf(name) > -1 || !this.treatFunctionsAsVarInScope(scope) && scope.var.indexOf(name) > -1;\n      }\n\n      return scope.lexical.indexOf(name) > -1 && !(scope.flags & SCOPE_SIMPLE_CATCH && scope.lexical[0] === name) || !this.treatFunctionsAsVarInScope(scope) && scope.functions.indexOf(name) > -1;\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      if (this.scopeStack[0].lexical.indexOf(id.name) === -1 && this.scopeStack[0].var.indexOf(id.name) === -1 && this.scopeStack[0].functions.indexOf(id.name) === -1) {\n        this.undefinedExports.set(id.name, id.start);\n      }\n    }\n  }, {\n    key: \"currentScope\",\n    value: function currentScope() {\n      return this.scopeStack[this.scopeStack.length - 1];\n    }\n  }, {\n    key: \"currentVarScope\",\n    value: function currentVarScope() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var scope = this.scopeStack[i];\n\n        if (scope.flags & SCOPE_VAR) {\n          return scope;\n        }\n      }\n    }\n  }, {\n    key: \"currentThisScope\",\n    value: function currentThisScope() {\n      for (var i = this.scopeStack.length - 1;; i--) {\n        var scope = this.scopeStack[i];\n\n        if ((scope.flags & SCOPE_VAR || scope.flags & SCOPE_CLASS) && !(scope.flags & SCOPE_ARROW)) {\n          return scope;\n        }\n      }\n    }\n  }, {\n    key: \"inFunction\",\n    get: function get() {\n      return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0;\n    }\n  }, {\n    key: \"allowSuper\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_SUPER) > 0;\n    }\n  }, {\n    key: \"allowDirectSuper\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0;\n    }\n  }, {\n    key: \"inClass\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_CLASS) > 0;\n    }\n  }, {\n    key: \"inNonArrowFunction\",\n    get: function get() {\n      return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0;\n    }\n  }, {\n    key: \"treatFunctionsAsVar\",\n    get: function get() {\n      return this.treatFunctionsAsVarInScope(this.currentScope());\n    }\n  }]);\n\n  return ScopeHandler;\n}();\n\nvar TypeScriptScope = /*#__PURE__*/function (_Scope) {\n  _inherits(TypeScriptScope, _Scope);\n\n  var _super6 = _createSuper(TypeScriptScope);\n\n  function TypeScriptScope() {\n    var _this16;\n\n    _classCallCheck(this, TypeScriptScope);\n\n    for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      args[_key6] = arguments[_key6];\n    }\n\n    _this16 = _super6.call.apply(_super6, [this].concat(args));\n    _this16.types = [];\n    _this16.enums = [];\n    _this16.constEnums = [];\n    _this16.classes = [];\n    _this16.exportOnlyBindings = [];\n    return _this16;\n  }\n\n  return TypeScriptScope;\n}(Scope);\n\nvar TypeScriptScopeHandler = /*#__PURE__*/function (_ScopeHandler) {\n  _inherits(TypeScriptScopeHandler, _ScopeHandler);\n\n  var _super7 = _createSuper(TypeScriptScopeHandler);\n\n  function TypeScriptScopeHandler() {\n    _classCallCheck(this, TypeScriptScopeHandler);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(TypeScriptScopeHandler, [{\n    key: \"createScope\",\n    value: function createScope(flags) {\n      return new TypeScriptScope(flags);\n    }\n  }, {\n    key: \"declareName\",\n    value: function declareName(name, bindingType, pos) {\n      var scope = this.currentScope();\n\n      if (bindingType & BIND_FLAGS_TS_EXPORT_ONLY) {\n        this.maybeExportDefined(scope, name);\n        scope.exportOnlyBindings.push(name);\n        return;\n      }\n\n      _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"declareName\", this).apply(this, arguments);\n\n      if (bindingType & BIND_KIND_TYPE) {\n        if (!(bindingType & BIND_KIND_VALUE)) {\n          this.checkRedeclarationInScope(scope, name, bindingType, pos);\n          this.maybeExportDefined(scope, name);\n        }\n\n        scope.types.push(name);\n      }\n\n      if (bindingType & BIND_FLAGS_TS_ENUM) scope.enums.push(name);\n      if (bindingType & BIND_FLAGS_TS_CONST_ENUM) scope.constEnums.push(name);\n      if (bindingType & BIND_FLAGS_CLASS) scope.classes.push(name);\n    }\n  }, {\n    key: \"isRedeclaredInScope\",\n    value: function isRedeclaredInScope(scope, name, bindingType) {\n      if (scope.enums.indexOf(name) > -1) {\n        if (bindingType & BIND_FLAGS_TS_ENUM) {\n          var isConst = !!(bindingType & BIND_FLAGS_TS_CONST_ENUM);\n          var wasConst = scope.constEnums.indexOf(name) > -1;\n          return isConst !== wasConst;\n        }\n\n        return true;\n      }\n\n      if (bindingType & BIND_FLAGS_CLASS && scope.classes.indexOf(name) > -1) {\n        if (scope.lexical.indexOf(name) > -1) {\n          return !!(bindingType & BIND_KIND_VALUE);\n        } else {\n          return false;\n        }\n      }\n\n      if (bindingType & BIND_KIND_TYPE && scope.types.indexOf(name) > -1) {\n        return true;\n      }\n\n      return _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"isRedeclaredInScope\", this).apply(this, arguments);\n    }\n  }, {\n    key: \"checkLocalExport\",\n    value: function checkLocalExport(id) {\n      if (this.scopeStack[0].types.indexOf(id.name) === -1 && this.scopeStack[0].exportOnlyBindings.indexOf(id.name) === -1) {\n        _get(_getPrototypeOf(TypeScriptScopeHandler.prototype), \"checkLocalExport\", this).call(this, id);\n      }\n    }\n  }]);\n\n  return TypeScriptScopeHandler;\n}(ScopeHandler);\n\nvar PARAM = 0,\n    PARAM_YIELD = 1,\n    PARAM_AWAIT = 2,\n    PARAM_RETURN = 4,\n    PARAM_IN = 8;\n\nvar ProductionParameterHandler = /*#__PURE__*/function () {\n  function ProductionParameterHandler() {\n    _classCallCheck(this, ProductionParameterHandler);\n\n    this.stacks = [];\n  }\n\n  _createClass(ProductionParameterHandler, [{\n    key: \"enter\",\n    value: function enter(flags) {\n      this.stacks.push(flags);\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.stacks.pop();\n    }\n  }, {\n    key: \"currentFlags\",\n    value: function currentFlags() {\n      return this.stacks[this.stacks.length - 1];\n    }\n  }, {\n    key: \"hasAwait\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_AWAIT) > 0;\n    }\n  }, {\n    key: \"hasYield\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_YIELD) > 0;\n    }\n  }, {\n    key: \"hasReturn\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_RETURN) > 0;\n    }\n  }, {\n    key: \"hasIn\",\n    get: function get() {\n      return (this.currentFlags() & PARAM_IN) > 0;\n    }\n  }]);\n\n  return ProductionParameterHandler;\n}();\n\nfunction functionFlags(isAsync, isGenerator) {\n  return (isAsync ? PARAM_AWAIT : 0) | (isGenerator ? PARAM_YIELD : 0);\n}\n\nfunction nonNull(x) {\n  if (x == null) {\n    throw new Error(\"Unexpected \".concat(x, \" value.\"));\n  }\n\n  return x;\n}\n\nfunction assert(x) {\n  if (!x) {\n    throw new Error(\"Assert fail\");\n  }\n}\n\nvar TSErrors = Object.freeze({\n  ClassMethodHasDeclare: \"Class methods cannot have the 'declare' modifier\",\n  ClassMethodHasReadonly: \"Class methods cannot have the 'readonly' modifier\",\n  ConstructorHasTypeParameters: \"Type parameters cannot appear on a constructor declaration.\",\n  DeclareClassFieldHasInitializer: \"Initializers are not allowed in ambient contexts.\",\n  DeclareFunctionHasImplementation: \"An implementation cannot be declared in ambient contexts.\",\n  DuplicateModifier: \"Duplicate modifier: '%0'\",\n  EmptyHeritageClauseType: \"'%0' list cannot be empty.\",\n  EmptyTypeArguments: \"Type argument list cannot be empty.\",\n  EmptyTypeParameters: \"Type parameter list cannot be empty.\",\n  IndexSignatureHasAbstract: \"Index signatures cannot have the 'abstract' modifier\",\n  IndexSignatureHasAccessibility: \"Index signatures cannot have an accessibility modifier ('%0')\",\n  IndexSignatureHasStatic: \"Index signatures cannot have the 'static' modifier\",\n  IndexSignatureHasDeclare: \"Index signatures cannot have the 'declare' modifier\",\n  InvalidTupleMemberLabel: \"Tuple members must be labeled with a simple identifier.\",\n  MixedLabeledAndUnlabeledElements: \"Tuple members must all have names or all not have names.\",\n  OptionalTypeBeforeRequired: \"A required element cannot follow an optional element.\",\n  PatternIsOptional: \"A binding pattern parameter cannot be optional in an implementation signature.\",\n  PrivateElementHasAbstract: \"Private elements cannot have the 'abstract' modifier.\",\n  PrivateElementHasAccessibility: \"Private elements cannot have an accessibility modifier ('%0')\",\n  TypeAnnotationAfterAssign: \"Type annotations must come before default assignments, e.g. instead of `age = 25: number` use `age: number = 25`\",\n  UnexpectedParameterModifier: \"A parameter property is only allowed in a constructor implementation.\",\n  UnexpectedReadonly: \"'readonly' type modifier is only permitted on array and tuple literal types.\",\n  UnexpectedTypeAnnotation: \"Did not expect a type annotation here.\",\n  UnexpectedTypeCastInParameter: \"Unexpected type cast in parameter position.\",\n  UnsupportedImportTypeArgument: \"Argument in a type import must be a string literal\",\n  UnsupportedParameterPropertyKind: \"A parameter property may not be declared using a binding pattern.\",\n  UnsupportedSignatureParameterKind: \"Name in a signature must be an Identifier, ObjectPattern or ArrayPattern, instead got %0\"\n});\n\nfunction keywordTypeFromName(value) {\n  switch (value) {\n    case \"any\":\n      return \"TSAnyKeyword\";\n\n    case \"boolean\":\n      return \"TSBooleanKeyword\";\n\n    case \"bigint\":\n      return \"TSBigIntKeyword\";\n\n    case \"never\":\n      return \"TSNeverKeyword\";\n\n    case \"number\":\n      return \"TSNumberKeyword\";\n\n    case \"object\":\n      return \"TSObjectKeyword\";\n\n    case \"string\":\n      return \"TSStringKeyword\";\n\n    case \"symbol\":\n      return \"TSSymbolKeyword\";\n\n    case \"undefined\":\n      return \"TSUndefinedKeyword\";\n\n    case \"unknown\":\n      return \"TSUnknownKeyword\";\n\n    default:\n      return undefined;\n  }\n}\n\nvar typescript = function typescript(superClass) {\n  return /*#__PURE__*/function (_superClass4) {\n    _inherits(_class3, _superClass4);\n\n    var _super8 = _createSuper(_class3);\n\n    function _class3() {\n      _classCallCheck(this, _class3);\n\n      return _super8.apply(this, arguments);\n    }\n\n    _createClass(_class3, [{\n      key: \"getScopeHandler\",\n      value: function getScopeHandler() {\n        return TypeScriptScopeHandler;\n      }\n    }, {\n      key: \"tsIsIdentifier\",\n      value: function tsIsIdentifier() {\n        return this.match(types.name);\n      }\n    }, {\n      key: \"tsNextTokenCanFollowModifier\",\n      value: function tsNextTokenCanFollowModifier() {\n        this.next();\n        return (this.match(types.bracketL) || this.match(types.braceL) || this.match(types.star) || this.match(types.ellipsis) || this.match(types.hash) || this.isLiteralPropertyName()) && !this.hasPrecedingLineBreak();\n      }\n    }, {\n      key: \"tsParseModifier\",\n      value: function tsParseModifier(allowedModifiers) {\n        if (!this.match(types.name)) {\n          return undefined;\n        }\n\n        var modifier = this.state.value;\n\n        if (allowedModifiers.indexOf(modifier) !== -1 && this.tsTryParse(this.tsNextTokenCanFollowModifier.bind(this))) {\n          return modifier;\n        }\n\n        return undefined;\n      }\n    }, {\n      key: \"tsParseModifiers\",\n      value: function tsParseModifiers(modified, allowedModifiers) {\n        for (;;) {\n          var startPos = this.state.start;\n          var modifier = this.tsParseModifier(allowedModifiers);\n          if (!modifier) break;\n\n          if (Object.hasOwnProperty.call(modified, modifier)) {\n            this.raise(startPos, TSErrors.DuplicateModifier, modifier);\n          }\n\n          modified[modifier] = true;\n        }\n      }\n    }, {\n      key: \"tsIsListTerminator\",\n      value: function tsIsListTerminator(kind) {\n        switch (kind) {\n          case \"EnumMembers\":\n          case \"TypeMembers\":\n            return this.match(types.braceR);\n\n          case \"HeritageClauseElement\":\n            return this.match(types.braceL);\n\n          case \"TupleElementTypes\":\n            return this.match(types.bracketR);\n\n          case \"TypeParametersOrArguments\":\n            return this.isRelational(\">\");\n        }\n\n        throw new Error(\"Unreachable\");\n      }\n    }, {\n      key: \"tsParseList\",\n      value: function tsParseList(kind, parseElement) {\n        var result = [];\n\n        while (!this.tsIsListTerminator(kind)) {\n          result.push(parseElement());\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseDelimitedList\",\n      value: function tsParseDelimitedList(kind, parseElement) {\n        return nonNull(this.tsParseDelimitedListWorker(kind, parseElement, true));\n      }\n    }, {\n      key: \"tsParseDelimitedListWorker\",\n      value: function tsParseDelimitedListWorker(kind, parseElement, expectSuccess) {\n        var result = [];\n\n        for (;;) {\n          if (this.tsIsListTerminator(kind)) {\n            break;\n          }\n\n          var element = parseElement();\n\n          if (element == null) {\n            return undefined;\n          }\n\n          result.push(element);\n\n          if (this.eat(types.comma)) {\n            continue;\n          }\n\n          if (this.tsIsListTerminator(kind)) {\n            break;\n          }\n\n          if (expectSuccess) {\n            this.expect(types.comma);\n          }\n\n          return undefined;\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseBracketedList\",\n      value: function tsParseBracketedList(kind, parseElement, bracket, skipFirstToken) {\n        if (!skipFirstToken) {\n          if (bracket) {\n            this.expect(types.bracketL);\n          } else {\n            this.expectRelational(\"<\");\n          }\n        }\n\n        var result = this.tsParseDelimitedList(kind, parseElement);\n\n        if (bracket) {\n          this.expect(types.bracketR);\n        } else {\n          this.expectRelational(\">\");\n        }\n\n        return result;\n      }\n    }, {\n      key: \"tsParseImportType\",\n      value: function tsParseImportType() {\n        var node = this.startNode();\n        this.expect(types._import);\n        this.expect(types.parenL);\n\n        if (!this.match(types.string)) {\n          this.raise(this.state.start, TSErrors.UnsupportedImportTypeArgument);\n        }\n\n        node.argument = this.parseExprAtom();\n        this.expect(types.parenR);\n\n        if (this.eat(types.dot)) {\n          node.qualifier = this.tsParseEntityName(true);\n        }\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSImportType\");\n      }\n    }, {\n      key: \"tsParseEntityName\",\n      value: function tsParseEntityName(allowReservedWords) {\n        var entity = this.parseIdentifier();\n\n        while (this.eat(types.dot)) {\n          var node = this.startNodeAtNode(entity);\n          node.left = entity;\n          node.right = this.parseIdentifier(allowReservedWords);\n          entity = this.finishNode(node, \"TSQualifiedName\");\n        }\n\n        return entity;\n      }\n    }, {\n      key: \"tsParseTypeReference\",\n      value: function tsParseTypeReference() {\n        var node = this.startNode();\n        node.typeName = this.tsParseEntityName(false);\n\n        if (!this.hasPrecedingLineBreak() && this.isRelational(\"<\")) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSTypeReference\");\n      }\n    }, {\n      key: \"tsParseThisTypePredicate\",\n      value: function tsParseThisTypePredicate(lhs) {\n        this.next();\n        var node = this.startNodeAtNode(lhs);\n        node.parameterName = lhs;\n        node.typeAnnotation = this.tsParseTypeAnnotation(false);\n        node.asserts = false;\n        return this.finishNode(node, \"TSTypePredicate\");\n      }\n    }, {\n      key: \"tsParseThisTypeNode\",\n      value: function tsParseThisTypeNode() {\n        var node = this.startNode();\n        this.next();\n        return this.finishNode(node, \"TSThisType\");\n      }\n    }, {\n      key: \"tsParseTypeQuery\",\n      value: function tsParseTypeQuery() {\n        var node = this.startNode();\n        this.expect(types._typeof);\n\n        if (this.match(types._import)) {\n          node.exprName = this.tsParseImportType();\n        } else {\n          node.exprName = this.tsParseEntityName(true);\n        }\n\n        return this.finishNode(node, \"TSTypeQuery\");\n      }\n    }, {\n      key: \"tsParseTypeParameter\",\n      value: function tsParseTypeParameter() {\n        var node = this.startNode();\n        node.name = this.parseIdentifierName(node.start);\n        node.constraint = this.tsEatThenParseType(types._extends);\n        node.default = this.tsEatThenParseType(types.eq);\n        return this.finishNode(node, \"TSTypeParameter\");\n      }\n    }, {\n      key: \"tsTryParseTypeParameters\",\n      value: function tsTryParseTypeParameters() {\n        if (this.isRelational(\"<\")) {\n          return this.tsParseTypeParameters();\n        }\n      }\n    }, {\n      key: \"tsParseTypeParameters\",\n      value: function tsParseTypeParameters() {\n        var node = this.startNode();\n\n        if (this.isRelational(\"<\") || this.match(types.jsxTagStart)) {\n          this.next();\n        } else {\n          this.unexpected();\n        }\n\n        node.params = this.tsParseBracketedList(\"TypeParametersOrArguments\", this.tsParseTypeParameter.bind(this), false, true);\n\n        if (node.params.length === 0) {\n          this.raise(node.start, TSErrors.EmptyTypeParameters);\n        }\n\n        return this.finishNode(node, \"TSTypeParameterDeclaration\");\n      }\n    }, {\n      key: \"tsTryNextParseConstantContext\",\n      value: function tsTryNextParseConstantContext() {\n        if (this.lookahead().type === types._const) {\n          this.next();\n          return this.tsParseTypeReference();\n        }\n\n        return null;\n      }\n    }, {\n      key: \"tsFillSignature\",\n      value: function tsFillSignature(returnToken, signature) {\n        var returnTokenRequired = returnToken === types.arrow;\n        signature.typeParameters = this.tsTryParseTypeParameters();\n        this.expect(types.parenL);\n        signature.parameters = this.tsParseBindingListForSignature();\n\n        if (returnTokenRequired) {\n          signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n        } else if (this.match(returnToken)) {\n          signature.typeAnnotation = this.tsParseTypeOrTypePredicateAnnotation(returnToken);\n        }\n      }\n    }, {\n      key: \"tsParseBindingListForSignature\",\n      value: function tsParseBindingListForSignature() {\n        var _this17 = this;\n\n        return this.parseBindingList(types.parenR, 41).map(function (pattern) {\n          if (pattern.type !== \"Identifier\" && pattern.type !== \"RestElement\" && pattern.type !== \"ObjectPattern\" && pattern.type !== \"ArrayPattern\") {\n            _this17.raise(pattern.start, TSErrors.UnsupportedSignatureParameterKind, pattern.type);\n          }\n\n          return pattern;\n        });\n      }\n    }, {\n      key: \"tsParseTypeMemberSemicolon\",\n      value: function tsParseTypeMemberSemicolon() {\n        if (!this.eat(types.comma)) {\n          this.semicolon();\n        }\n      }\n    }, {\n      key: \"tsParseSignatureMember\",\n      value: function tsParseSignatureMember(kind, node) {\n        this.tsFillSignature(types.colon, node);\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(node, kind);\n      }\n    }, {\n      key: \"tsIsUnambiguouslyIndexSignature\",\n      value: function tsIsUnambiguouslyIndexSignature() {\n        this.next();\n        return this.eat(types.name) && this.match(types.colon);\n      }\n    }, {\n      key: \"tsTryParseIndexSignature\",\n      value: function tsTryParseIndexSignature(node) {\n        if (!(this.match(types.bracketL) && this.tsLookAhead(this.tsIsUnambiguouslyIndexSignature.bind(this)))) {\n          return undefined;\n        }\n\n        this.expect(types.bracketL);\n        var id = this.parseIdentifier();\n        id.typeAnnotation = this.tsParseTypeAnnotation();\n        this.resetEndLocation(id);\n        this.expect(types.bracketR);\n        node.parameters = [id];\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) node.typeAnnotation = type;\n        this.tsParseTypeMemberSemicolon();\n        return this.finishNode(node, \"TSIndexSignature\");\n      }\n    }, {\n      key: \"tsParsePropertyOrMethodSignature\",\n      value: function tsParsePropertyOrMethodSignature(node, readonly) {\n        if (this.eat(types.question)) node.optional = true;\n        var nodeAny = node;\n\n        if (!readonly && (this.match(types.parenL) || this.isRelational(\"<\"))) {\n          var method = nodeAny;\n          this.tsFillSignature(types.colon, method);\n          this.tsParseTypeMemberSemicolon();\n          return this.finishNode(method, \"TSMethodSignature\");\n        } else {\n          var property = nodeAny;\n          if (readonly) property.readonly = true;\n          var type = this.tsTryParseTypeAnnotation();\n          if (type) property.typeAnnotation = type;\n          this.tsParseTypeMemberSemicolon();\n          return this.finishNode(property, \"TSPropertySignature\");\n        }\n      }\n    }, {\n      key: \"tsParseTypeMember\",\n      value: function tsParseTypeMember() {\n        var node = this.startNode();\n\n        if (this.match(types.parenL) || this.isRelational(\"<\")) {\n          return this.tsParseSignatureMember(\"TSCallSignatureDeclaration\", node);\n        }\n\n        if (this.match(types._new)) {\n          var id = this.startNode();\n          this.next();\n\n          if (this.match(types.parenL) || this.isRelational(\"<\")) {\n            return this.tsParseSignatureMember(\"TSConstructSignatureDeclaration\", node);\n          } else {\n            node.key = this.createIdentifier(id, \"new\");\n            return this.tsParsePropertyOrMethodSignature(node, false);\n          }\n        }\n\n        var readonly = !!this.tsParseModifier([\"readonly\"]);\n        var idx = this.tsTryParseIndexSignature(node);\n\n        if (idx) {\n          if (readonly) node.readonly = true;\n          return idx;\n        }\n\n        this.parsePropertyName(node, false);\n        return this.tsParsePropertyOrMethodSignature(node, readonly);\n      }\n    }, {\n      key: \"tsParseTypeLiteral\",\n      value: function tsParseTypeLiteral() {\n        var node = this.startNode();\n        node.members = this.tsParseObjectTypeMembers();\n        return this.finishNode(node, \"TSTypeLiteral\");\n      }\n    }, {\n      key: \"tsParseObjectTypeMembers\",\n      value: function tsParseObjectTypeMembers() {\n        this.expect(types.braceL);\n        var members = this.tsParseList(\"TypeMembers\", this.tsParseTypeMember.bind(this));\n        this.expect(types.braceR);\n        return members;\n      }\n    }, {\n      key: \"tsIsStartOfMappedType\",\n      value: function tsIsStartOfMappedType() {\n        this.next();\n\n        if (this.eat(types.plusMin)) {\n          return this.isContextual(\"readonly\");\n        }\n\n        if (this.isContextual(\"readonly\")) {\n          this.next();\n        }\n\n        if (!this.match(types.bracketL)) {\n          return false;\n        }\n\n        this.next();\n\n        if (!this.tsIsIdentifier()) {\n          return false;\n        }\n\n        this.next();\n        return this.match(types._in);\n      }\n    }, {\n      key: \"tsParseMappedTypeParameter\",\n      value: function tsParseMappedTypeParameter() {\n        var node = this.startNode();\n        node.name = this.parseIdentifierName(node.start);\n        node.constraint = this.tsExpectThenParseType(types._in);\n        return this.finishNode(node, \"TSTypeParameter\");\n      }\n    }, {\n      key: \"tsParseMappedType\",\n      value: function tsParseMappedType() {\n        var node = this.startNode();\n        this.expect(types.braceL);\n\n        if (this.match(types.plusMin)) {\n          node.readonly = this.state.value;\n          this.next();\n          this.expectContextual(\"readonly\");\n        } else if (this.eatContextual(\"readonly\")) {\n          node.readonly = true;\n        }\n\n        this.expect(types.bracketL);\n        node.typeParameter = this.tsParseMappedTypeParameter();\n        node.nameType = this.eatContextual(\"as\") ? this.tsParseType() : null;\n        this.expect(types.bracketR);\n\n        if (this.match(types.plusMin)) {\n          node.optional = this.state.value;\n          this.next();\n          this.expect(types.question);\n        } else if (this.eat(types.question)) {\n          node.optional = true;\n        }\n\n        node.typeAnnotation = this.tsTryParseType();\n        this.semicolon();\n        this.expect(types.braceR);\n        return this.finishNode(node, \"TSMappedType\");\n      }\n    }, {\n      key: \"tsParseTupleType\",\n      value: function tsParseTupleType() {\n        var _this18 = this;\n\n        var node = this.startNode();\n        node.elementTypes = this.tsParseBracketedList(\"TupleElementTypes\", this.tsParseTupleElementType.bind(this), true, false);\n        var seenOptionalElement = false;\n        var labeledElements = null;\n        node.elementTypes.forEach(function (elementNode) {\n          var _labeledElements;\n\n          var _elementNode = elementNode,\n              type = _elementNode.type;\n\n          if (seenOptionalElement && type !== \"TSRestType\" && type !== \"TSOptionalType\" && !(type === \"TSNamedTupleMember\" && elementNode.optional)) {\n            _this18.raise(elementNode.start, TSErrors.OptionalTypeBeforeRequired);\n          }\n\n          seenOptionalElement = seenOptionalElement || type === \"TSNamedTupleMember\" && elementNode.optional || type === \"TSOptionalType\";\n\n          if (type === \"TSRestType\") {\n            elementNode = elementNode.typeAnnotation;\n            type = elementNode.type;\n          }\n\n          var isLabeled = type === \"TSNamedTupleMember\";\n          labeledElements = (_labeledElements = labeledElements) != null ? _labeledElements : isLabeled;\n\n          if (labeledElements !== isLabeled) {\n            _this18.raise(elementNode.start, TSErrors.MixedLabeledAndUnlabeledElements);\n          }\n        });\n        return this.finishNode(node, \"TSTupleType\");\n      }\n    }, {\n      key: \"tsParseTupleElementType\",\n      value: function tsParseTupleElementType() {\n        var _this$state = this.state,\n            startPos = _this$state.start,\n            startLoc = _this$state.startLoc;\n        var rest = this.eat(types.ellipsis);\n        var type = this.tsParseType();\n        var optional = this.eat(types.question);\n        var labeled = this.eat(types.colon);\n\n        if (labeled) {\n          var labeledNode = this.startNodeAtNode(type);\n          labeledNode.optional = optional;\n\n          if (type.type === \"TSTypeReference\" && !type.typeParameters && type.typeName.type === \"Identifier\") {\n            labeledNode.label = type.typeName;\n          } else {\n            this.raise(type.start, TSErrors.InvalidTupleMemberLabel);\n            labeledNode.label = type;\n          }\n\n          labeledNode.elementType = this.tsParseType();\n          type = this.finishNode(labeledNode, \"TSNamedTupleMember\");\n        } else if (optional) {\n          var optionalTypeNode = this.startNodeAtNode(type);\n          optionalTypeNode.typeAnnotation = type;\n          type = this.finishNode(optionalTypeNode, \"TSOptionalType\");\n        }\n\n        if (rest) {\n          var restNode = this.startNodeAt(startPos, startLoc);\n          restNode.typeAnnotation = type;\n          type = this.finishNode(restNode, \"TSRestType\");\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseParenthesizedType\",\n      value: function tsParseParenthesizedType() {\n        var node = this.startNode();\n        this.expect(types.parenL);\n        node.typeAnnotation = this.tsParseType();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"TSParenthesizedType\");\n      }\n    }, {\n      key: \"tsParseFunctionOrConstructorType\",\n      value: function tsParseFunctionOrConstructorType(type) {\n        var node = this.startNode();\n\n        if (type === \"TSConstructorType\") {\n          this.expect(types._new);\n        }\n\n        this.tsFillSignature(types.arrow, node);\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"tsParseLiteralTypeNode\",\n      value: function tsParseLiteralTypeNode() {\n        var _this19 = this;\n\n        var node = this.startNode();\n\n        node.literal = function () {\n          switch (_this19.state.type) {\n            case types.num:\n            case types.bigint:\n            case types.string:\n            case types._true:\n            case types._false:\n              return _this19.parseExprAtom();\n\n            default:\n              throw _this19.unexpected();\n          }\n        }();\n\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }, {\n      key: \"tsParseTemplateLiteralType\",\n      value: function tsParseTemplateLiteralType() {\n        var node = this.startNode();\n        node.literal = this.parseTemplate(false);\n        return this.finishNode(node, \"TSLiteralType\");\n      }\n    }, {\n      key: \"parseTemplateSubstitution\",\n      value: function parseTemplateSubstitution() {\n        if (this.state.inType) return this.tsParseType();\n        return _get(_getPrototypeOf(_class3.prototype), \"parseTemplateSubstitution\", this).call(this);\n      }\n    }, {\n      key: \"tsParseThisTypeOrThisTypePredicate\",\n      value: function tsParseThisTypeOrThisTypePredicate() {\n        var thisKeyword = this.tsParseThisTypeNode();\n\n        if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n          return this.tsParseThisTypePredicate(thisKeyword);\n        } else {\n          return thisKeyword;\n        }\n      }\n    }, {\n      key: \"tsParseNonArrayType\",\n      value: function tsParseNonArrayType() {\n        switch (this.state.type) {\n          case types.name:\n          case types._void:\n          case types._null:\n            {\n              var type = this.match(types._void) ? \"TSVoidKeyword\" : this.match(types._null) ? \"TSNullKeyword\" : keywordTypeFromName(this.state.value);\n\n              if (type !== undefined && this.lookaheadCharCode() !== 46) {\n                var node = this.startNode();\n                this.next();\n                return this.finishNode(node, type);\n              }\n\n              return this.tsParseTypeReference();\n            }\n\n          case types.string:\n          case types.num:\n          case types.bigint:\n          case types._true:\n          case types._false:\n            return this.tsParseLiteralTypeNode();\n\n          case types.plusMin:\n            if (this.state.value === \"-\") {\n              var _node6 = this.startNode();\n\n              var nextToken = this.lookahead();\n\n              if (nextToken.type !== types.num && nextToken.type !== types.bigint) {\n                throw this.unexpected();\n              }\n\n              _node6.literal = this.parseMaybeUnary();\n              return this.finishNode(_node6, \"TSLiteralType\");\n            }\n\n            break;\n\n          case types._this:\n            return this.tsParseThisTypeOrThisTypePredicate();\n\n          case types._typeof:\n            return this.tsParseTypeQuery();\n\n          case types._import:\n            return this.tsParseImportType();\n\n          case types.braceL:\n            return this.tsLookAhead(this.tsIsStartOfMappedType.bind(this)) ? this.tsParseMappedType() : this.tsParseTypeLiteral();\n\n          case types.bracketL:\n            return this.tsParseTupleType();\n\n          case types.parenL:\n            return this.tsParseParenthesizedType();\n\n          case types.backQuote:\n            return this.tsParseTemplateLiteralType();\n        }\n\n        throw this.unexpected();\n      }\n    }, {\n      key: \"tsParseArrayTypeOrHigher\",\n      value: function tsParseArrayTypeOrHigher() {\n        var type = this.tsParseNonArrayType();\n\n        while (!this.hasPrecedingLineBreak() && this.eat(types.bracketL)) {\n          if (this.match(types.bracketR)) {\n            var node = this.startNodeAtNode(type);\n            node.elementType = type;\n            this.expect(types.bracketR);\n            type = this.finishNode(node, \"TSArrayType\");\n          } else {\n            var _node7 = this.startNodeAtNode(type);\n\n            _node7.objectType = type;\n            _node7.indexType = this.tsParseType();\n            this.expect(types.bracketR);\n            type = this.finishNode(_node7, \"TSIndexedAccessType\");\n          }\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseTypeOperator\",\n      value: function tsParseTypeOperator(operator) {\n        var node = this.startNode();\n        this.expectContextual(operator);\n        node.operator = operator;\n        node.typeAnnotation = this.tsParseTypeOperatorOrHigher();\n\n        if (operator === \"readonly\") {\n          this.tsCheckTypeAnnotationForReadOnly(node);\n        }\n\n        return this.finishNode(node, \"TSTypeOperator\");\n      }\n    }, {\n      key: \"tsCheckTypeAnnotationForReadOnly\",\n      value: function tsCheckTypeAnnotationForReadOnly(node) {\n        switch (node.typeAnnotation.type) {\n          case \"TSTupleType\":\n          case \"TSArrayType\":\n            return;\n\n          default:\n            this.raise(node.start, TSErrors.UnexpectedReadonly);\n        }\n      }\n    }, {\n      key: \"tsParseInferType\",\n      value: function tsParseInferType() {\n        var node = this.startNode();\n        this.expectContextual(\"infer\");\n        var typeParameter = this.startNode();\n        typeParameter.name = this.parseIdentifierName(typeParameter.start);\n        node.typeParameter = this.finishNode(typeParameter, \"TSTypeParameter\");\n        return this.finishNode(node, \"TSInferType\");\n      }\n    }, {\n      key: \"tsParseTypeOperatorOrHigher\",\n      value: function tsParseTypeOperatorOrHigher() {\n        var _this20 = this;\n\n        var operator = [\"keyof\", \"unique\", \"readonly\"].find(function (kw) {\n          return _this20.isContextual(kw);\n        });\n        return operator ? this.tsParseTypeOperator(operator) : this.isContextual(\"infer\") ? this.tsParseInferType() : this.tsParseArrayTypeOrHigher();\n      }\n    }, {\n      key: \"tsParseUnionOrIntersectionType\",\n      value: function tsParseUnionOrIntersectionType(kind, parseConstituentType, operator) {\n        this.eat(operator);\n        var type = parseConstituentType();\n\n        if (this.match(operator)) {\n          var _types = [type];\n\n          while (this.eat(operator)) {\n            _types.push(parseConstituentType());\n          }\n\n          var node = this.startNodeAtNode(type);\n          node.types = _types;\n          type = this.finishNode(node, kind);\n        }\n\n        return type;\n      }\n    }, {\n      key: \"tsParseIntersectionTypeOrHigher\",\n      value: function tsParseIntersectionTypeOrHigher() {\n        return this.tsParseUnionOrIntersectionType(\"TSIntersectionType\", this.tsParseTypeOperatorOrHigher.bind(this), types.bitwiseAND);\n      }\n    }, {\n      key: \"tsParseUnionTypeOrHigher\",\n      value: function tsParseUnionTypeOrHigher() {\n        return this.tsParseUnionOrIntersectionType(\"TSUnionType\", this.tsParseIntersectionTypeOrHigher.bind(this), types.bitwiseOR);\n      }\n    }, {\n      key: \"tsIsStartOfFunctionType\",\n      value: function tsIsStartOfFunctionType() {\n        if (this.isRelational(\"<\")) {\n          return true;\n        }\n\n        return this.match(types.parenL) && this.tsLookAhead(this.tsIsUnambiguouslyStartOfFunctionType.bind(this));\n      }\n    }, {\n      key: \"tsSkipParameterStart\",\n      value: function tsSkipParameterStart() {\n        if (this.match(types.name) || this.match(types._this)) {\n          this.next();\n          return true;\n        }\n\n        if (this.match(types.braceL)) {\n          var braceStackCounter = 1;\n          this.next();\n\n          while (braceStackCounter > 0) {\n            if (this.match(types.braceL)) {\n              ++braceStackCounter;\n            } else if (this.match(types.braceR)) {\n              --braceStackCounter;\n            }\n\n            this.next();\n          }\n\n          return true;\n        }\n\n        if (this.match(types.bracketL)) {\n          var _braceStackCounter = 1;\n          this.next();\n\n          while (_braceStackCounter > 0) {\n            if (this.match(types.bracketL)) {\n              ++_braceStackCounter;\n            } else if (this.match(types.bracketR)) {\n              --_braceStackCounter;\n            }\n\n            this.next();\n          }\n\n          return true;\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsIsUnambiguouslyStartOfFunctionType\",\n      value: function tsIsUnambiguouslyStartOfFunctionType() {\n        this.next();\n\n        if (this.match(types.parenR) || this.match(types.ellipsis)) {\n          return true;\n        }\n\n        if (this.tsSkipParameterStart()) {\n          if (this.match(types.colon) || this.match(types.comma) || this.match(types.question) || this.match(types.eq)) {\n            return true;\n          }\n\n          if (this.match(types.parenR)) {\n            this.next();\n\n            if (this.match(types.arrow)) {\n              return true;\n            }\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"tsParseTypeOrTypePredicateAnnotation\",\n      value: function tsParseTypeOrTypePredicateAnnotation(returnToken) {\n        var _this21 = this;\n\n        return this.tsInType(function () {\n          var t = _this21.startNode();\n\n          _this21.expect(returnToken);\n\n          var asserts = !!_this21.tsTryParse(_this21.tsParseTypePredicateAsserts.bind(_this21));\n\n          if (asserts && _this21.match(types._this)) {\n            var thisTypePredicate = _this21.tsParseThisTypeOrThisTypePredicate();\n\n            if (thisTypePredicate.type === \"TSThisType\") {\n              var _node8 = _this21.startNodeAtNode(t);\n\n              _node8.parameterName = thisTypePredicate;\n              _node8.asserts = true;\n              thisTypePredicate = _this21.finishNode(_node8, \"TSTypePredicate\");\n            } else {\n              thisTypePredicate.asserts = true;\n            }\n\n            t.typeAnnotation = thisTypePredicate;\n            return _this21.finishNode(t, \"TSTypeAnnotation\");\n          }\n\n          var typePredicateVariable = _this21.tsIsIdentifier() && _this21.tsTryParse(_this21.tsParseTypePredicatePrefix.bind(_this21));\n\n          if (!typePredicateVariable) {\n            if (!asserts) {\n              return _this21.tsParseTypeAnnotation(false, t);\n            }\n\n            var _node9 = _this21.startNodeAtNode(t);\n\n            _node9.parameterName = _this21.parseIdentifier();\n            _node9.asserts = asserts;\n            t.typeAnnotation = _this21.finishNode(_node9, \"TSTypePredicate\");\n            return _this21.finishNode(t, \"TSTypeAnnotation\");\n          }\n\n          var type = _this21.tsParseTypeAnnotation(false);\n\n          var node = _this21.startNodeAtNode(t);\n\n          node.parameterName = typePredicateVariable;\n          node.typeAnnotation = type;\n          node.asserts = asserts;\n          t.typeAnnotation = _this21.finishNode(node, \"TSTypePredicate\");\n          return _this21.finishNode(t, \"TSTypeAnnotation\");\n        });\n      }\n    }, {\n      key: \"tsTryParseTypeOrTypePredicateAnnotation\",\n      value: function tsTryParseTypeOrTypePredicateAnnotation() {\n        return this.match(types.colon) ? this.tsParseTypeOrTypePredicateAnnotation(types.colon) : undefined;\n      }\n    }, {\n      key: \"tsTryParseTypeAnnotation\",\n      value: function tsTryParseTypeAnnotation() {\n        return this.match(types.colon) ? this.tsParseTypeAnnotation() : undefined;\n      }\n    }, {\n      key: \"tsTryParseType\",\n      value: function tsTryParseType() {\n        return this.tsEatThenParseType(types.colon);\n      }\n    }, {\n      key: \"tsParseTypePredicatePrefix\",\n      value: function tsParseTypePredicatePrefix() {\n        var id = this.parseIdentifier();\n\n        if (this.isContextual(\"is\") && !this.hasPrecedingLineBreak()) {\n          this.next();\n          return id;\n        }\n      }\n    }, {\n      key: \"tsParseTypePredicateAsserts\",\n      value: function tsParseTypePredicateAsserts() {\n        if (!this.match(types.name) || this.state.value !== \"asserts\" || this.hasPrecedingLineBreak()) {\n          return false;\n        }\n\n        var containsEsc = this.state.containsEsc;\n        this.next();\n\n        if (!this.match(types.name) && !this.match(types._this)) {\n          return false;\n        }\n\n        if (containsEsc) {\n          this.raise(this.state.lastTokStart, ErrorMessages.InvalidEscapedReservedWord, \"asserts\");\n        }\n\n        return true;\n      }\n    }, {\n      key: \"tsParseTypeAnnotation\",\n      value: function tsParseTypeAnnotation() {\n        var _this22 = this;\n\n        var eatColon = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.startNode();\n        this.tsInType(function () {\n          if (eatColon) _this22.expect(types.colon);\n          t.typeAnnotation = _this22.tsParseType();\n        });\n        return this.finishNode(t, \"TSTypeAnnotation\");\n      }\n    }, {\n      key: \"tsParseType\",\n      value: function tsParseType() {\n        assert(this.state.inType);\n        var type = this.tsParseNonConditionalType();\n\n        if (this.hasPrecedingLineBreak() || !this.eat(types._extends)) {\n          return type;\n        }\n\n        var node = this.startNodeAtNode(type);\n        node.checkType = type;\n        node.extendsType = this.tsParseNonConditionalType();\n        this.expect(types.question);\n        node.trueType = this.tsParseType();\n        this.expect(types.colon);\n        node.falseType = this.tsParseType();\n        return this.finishNode(node, \"TSConditionalType\");\n      }\n    }, {\n      key: \"tsParseNonConditionalType\",\n      value: function tsParseNonConditionalType() {\n        if (this.tsIsStartOfFunctionType()) {\n          return this.tsParseFunctionOrConstructorType(\"TSFunctionType\");\n        }\n\n        if (this.match(types._new)) {\n          return this.tsParseFunctionOrConstructorType(\"TSConstructorType\");\n        }\n\n        return this.tsParseUnionTypeOrHigher();\n      }\n    }, {\n      key: \"tsParseTypeAssertion\",\n      value: function tsParseTypeAssertion() {\n        var node = this.startNode();\n\n        var _const = this.tsTryNextParseConstantContext();\n\n        node.typeAnnotation = _const || this.tsNextThenParseType();\n        this.expectRelational(\">\");\n        node.expression = this.parseMaybeUnary();\n        return this.finishNode(node, \"TSTypeAssertion\");\n      }\n    }, {\n      key: \"tsParseHeritageClause\",\n      value: function tsParseHeritageClause(descriptor) {\n        var originalStart = this.state.start;\n        var delimitedList = this.tsParseDelimitedList(\"HeritageClauseElement\", this.tsParseExpressionWithTypeArguments.bind(this));\n\n        if (!delimitedList.length) {\n          this.raise(originalStart, TSErrors.EmptyHeritageClauseType, descriptor);\n        }\n\n        return delimitedList;\n      }\n    }, {\n      key: \"tsParseExpressionWithTypeArguments\",\n      value: function tsParseExpressionWithTypeArguments() {\n        var node = this.startNode();\n        node.expression = this.tsParseEntityName(false);\n\n        if (this.isRelational(\"<\")) {\n          node.typeParameters = this.tsParseTypeArguments();\n        }\n\n        return this.finishNode(node, \"TSExpressionWithTypeArguments\");\n      }\n    }, {\n      key: \"tsParseInterfaceDeclaration\",\n      value: function tsParseInterfaceDeclaration(node) {\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript interface declaration\", BIND_TS_INTERFACE);\n        node.typeParameters = this.tsTryParseTypeParameters();\n\n        if (this.eat(types._extends)) {\n          node.extends = this.tsParseHeritageClause(\"extends\");\n        }\n\n        var body = this.startNode();\n        body.body = this.tsInType(this.tsParseObjectTypeMembers.bind(this));\n        node.body = this.finishNode(body, \"TSInterfaceBody\");\n        return this.finishNode(node, \"TSInterfaceDeclaration\");\n      }\n    }, {\n      key: \"tsParseTypeAliasDeclaration\",\n      value: function tsParseTypeAliasDeclaration(node) {\n        var _this23 = this;\n\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript type alias\", BIND_TS_TYPE);\n        node.typeParameters = this.tsTryParseTypeParameters();\n        node.typeAnnotation = this.tsInType(function () {\n          _this23.expect(types.eq);\n\n          if (_this23.isContextual(\"intrinsic\") && _this23.lookahead().type !== types.dot) {\n            var _node10 = _this23.startNode();\n\n            _this23.next();\n\n            return _this23.finishNode(_node10, \"TSIntrinsicKeyword\");\n          }\n\n          return _this23.tsParseType();\n        });\n        this.semicolon();\n        return this.finishNode(node, \"TSTypeAliasDeclaration\");\n      }\n    }, {\n      key: \"tsInNoContext\",\n      value: function tsInNoContext(cb) {\n        var oldContext = this.state.context;\n        this.state.context = [oldContext[0]];\n\n        try {\n          return cb();\n        } finally {\n          this.state.context = oldContext;\n        }\n      }\n    }, {\n      key: \"tsInType\",\n      value: function tsInType(cb) {\n        var oldInType = this.state.inType;\n        this.state.inType = true;\n\n        try {\n          return cb();\n        } finally {\n          this.state.inType = oldInType;\n        }\n      }\n    }, {\n      key: \"tsEatThenParseType\",\n      value: function tsEatThenParseType(token) {\n        return !this.match(token) ? undefined : this.tsNextThenParseType();\n      }\n    }, {\n      key: \"tsExpectThenParseType\",\n      value: function tsExpectThenParseType(token) {\n        var _this24 = this;\n\n        return this.tsDoThenParseType(function () {\n          return _this24.expect(token);\n        });\n      }\n    }, {\n      key: \"tsNextThenParseType\",\n      value: function tsNextThenParseType() {\n        var _this25 = this;\n\n        return this.tsDoThenParseType(function () {\n          return _this25.next();\n        });\n      }\n    }, {\n      key: \"tsDoThenParseType\",\n      value: function tsDoThenParseType(cb) {\n        var _this26 = this;\n\n        return this.tsInType(function () {\n          cb();\n          return _this26.tsParseType();\n        });\n      }\n    }, {\n      key: \"tsParseEnumMember\",\n      value: function tsParseEnumMember() {\n        var node = this.startNode();\n        node.id = this.match(types.string) ? this.parseExprAtom() : this.parseIdentifier(true);\n\n        if (this.eat(types.eq)) {\n          node.initializer = this.parseMaybeAssignAllowIn();\n        }\n\n        return this.finishNode(node, \"TSEnumMember\");\n      }\n    }, {\n      key: \"tsParseEnumDeclaration\",\n      value: function tsParseEnumDeclaration(node, isConst) {\n        if (isConst) node.const = true;\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"typescript enum declaration\", isConst ? BIND_TS_CONST_ENUM : BIND_TS_ENUM);\n        this.expect(types.braceL);\n        node.members = this.tsParseDelimitedList(\"EnumMembers\", this.tsParseEnumMember.bind(this));\n        this.expect(types.braceR);\n        return this.finishNode(node, \"TSEnumDeclaration\");\n      }\n    }, {\n      key: \"tsParseModuleBlock\",\n      value: function tsParseModuleBlock() {\n        var node = this.startNode();\n        this.scope.enter(SCOPE_OTHER);\n        this.expect(types.braceL);\n        this.parseBlockOrModuleBlockBody(node.body = [], undefined, true, types.braceR);\n        this.scope.exit();\n        return this.finishNode(node, \"TSModuleBlock\");\n      }\n    }, {\n      key: \"tsParseModuleOrNamespaceDeclaration\",\n      value: function tsParseModuleOrNamespaceDeclaration(node) {\n        var nested = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n        node.id = this.parseIdentifier();\n\n        if (!nested) {\n          this.checkLVal(node.id, \"module or namespace declaration\", BIND_TS_NAMESPACE);\n        }\n\n        if (this.eat(types.dot)) {\n          var inner = this.startNode();\n          this.tsParseModuleOrNamespaceDeclaration(inner, true);\n          node.body = inner;\n        } else {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          node.body = this.tsParseModuleBlock();\n          this.prodParam.exit();\n          this.scope.exit();\n        }\n\n        return this.finishNode(node, \"TSModuleDeclaration\");\n      }\n    }, {\n      key: \"tsParseAmbientExternalModuleDeclaration\",\n      value: function tsParseAmbientExternalModuleDeclaration(node) {\n        if (this.isContextual(\"global\")) {\n          node.global = true;\n          node.id = this.parseIdentifier();\n        } else if (this.match(types.string)) {\n          node.id = this.parseExprAtom();\n        } else {\n          this.unexpected();\n        }\n\n        if (this.match(types.braceL)) {\n          this.scope.enter(SCOPE_TS_MODULE);\n          this.prodParam.enter(PARAM);\n          node.body = this.tsParseModuleBlock();\n          this.prodParam.exit();\n          this.scope.exit();\n        } else {\n          this.semicolon();\n        }\n\n        return this.finishNode(node, \"TSModuleDeclaration\");\n      }\n    }, {\n      key: \"tsParseImportEqualsDeclaration\",\n      value: function tsParseImportEqualsDeclaration(node, isExport) {\n        node.isExport = isExport || false;\n        node.id = this.parseIdentifier();\n        this.checkLVal(node.id, \"import equals declaration\", BIND_LEXICAL);\n        this.expect(types.eq);\n        node.moduleReference = this.tsParseModuleReference();\n        this.semicolon();\n        return this.finishNode(node, \"TSImportEqualsDeclaration\");\n      }\n    }, {\n      key: \"tsIsExternalModuleReference\",\n      value: function tsIsExternalModuleReference() {\n        return this.isContextual(\"require\") && this.lookaheadCharCode() === 40;\n      }\n    }, {\n      key: \"tsParseModuleReference\",\n      value: function tsParseModuleReference() {\n        return this.tsIsExternalModuleReference() ? this.tsParseExternalModuleReference() : this.tsParseEntityName(false);\n      }\n    }, {\n      key: \"tsParseExternalModuleReference\",\n      value: function tsParseExternalModuleReference() {\n        var node = this.startNode();\n        this.expectContextual(\"require\");\n        this.expect(types.parenL);\n\n        if (!this.match(types.string)) {\n          throw this.unexpected();\n        }\n\n        node.expression = this.parseExprAtom();\n        this.expect(types.parenR);\n        return this.finishNode(node, \"TSExternalModuleReference\");\n      }\n    }, {\n      key: \"tsLookAhead\",\n      value: function tsLookAhead(f) {\n        var state = this.state.clone();\n        var res = f();\n        this.state = state;\n        return res;\n      }\n    }, {\n      key: \"tsTryParseAndCatch\",\n      value: function tsTryParseAndCatch(f) {\n        var result = this.tryParse(function (abort) {\n          return f() || abort();\n        });\n        if (result.aborted || !result.node) return undefined;\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }, {\n      key: \"tsTryParse\",\n      value: function tsTryParse(f) {\n        var state = this.state.clone();\n        var result = f();\n\n        if (result !== undefined && result !== false) {\n          return result;\n        } else {\n          this.state = state;\n          return undefined;\n        }\n      }\n    }, {\n      key: \"tsTryParseDeclare\",\n      value: function tsTryParseDeclare(nany) {\n        var _this27 = this;\n\n        if (this.isLineTerminator()) {\n          return;\n        }\n\n        var starttype = this.state.type;\n        var kind;\n\n        if (this.isContextual(\"let\")) {\n          starttype = types._var;\n          kind = \"let\";\n        }\n\n        return this.tsInDeclareContext(function () {\n          switch (starttype) {\n            case types._function:\n              nany.declare = true;\n              return _this27.parseFunctionStatement(nany, false, true);\n\n            case types._class:\n              nany.declare = true;\n              return _this27.parseClass(nany, true, false);\n\n            case types._const:\n              if (_this27.match(types._const) && _this27.isLookaheadContextual(\"enum\")) {\n                _this27.expect(types._const);\n\n                _this27.expectContextual(\"enum\");\n\n                return _this27.tsParseEnumDeclaration(nany, true);\n              }\n\n            case types._var:\n              kind = kind || _this27.state.value;\n              return _this27.parseVarStatement(nany, kind);\n\n            case types.name:\n              {\n                var value = _this27.state.value;\n\n                if (value === \"global\") {\n                  return _this27.tsParseAmbientExternalModuleDeclaration(nany);\n                } else {\n                  return _this27.tsParseDeclaration(nany, value, true);\n                }\n              }\n          }\n        });\n      }\n    }, {\n      key: \"tsTryParseExportDeclaration\",\n      value: function tsTryParseExportDeclaration() {\n        return this.tsParseDeclaration(this.startNode(), this.state.value, true);\n      }\n    }, {\n      key: \"tsParseExpressionStatement\",\n      value: function tsParseExpressionStatement(node, expr) {\n        switch (expr.name) {\n          case \"declare\":\n            {\n              var declaration = this.tsTryParseDeclare(node);\n\n              if (declaration) {\n                declaration.declare = true;\n                return declaration;\n              }\n\n              break;\n            }\n\n          case \"global\":\n            if (this.match(types.braceL)) {\n              this.scope.enter(SCOPE_TS_MODULE);\n              this.prodParam.enter(PARAM);\n              var mod = node;\n              mod.global = true;\n              mod.id = expr;\n              mod.body = this.tsParseModuleBlock();\n              this.scope.exit();\n              this.prodParam.exit();\n              return this.finishNode(mod, \"TSModuleDeclaration\");\n            }\n\n            break;\n\n          default:\n            return this.tsParseDeclaration(node, expr.name, false);\n        }\n      }\n    }, {\n      key: \"tsParseDeclaration\",\n      value: function tsParseDeclaration(node, value, next) {\n        switch (value) {\n          case \"abstract\":\n            if (this.tsCheckLineTerminatorAndMatch(types._class, next)) {\n              var cls = node;\n              cls.abstract = true;\n\n              if (next) {\n                this.next();\n\n                if (!this.match(types._class)) {\n                  this.unexpected(null, types._class);\n                }\n              }\n\n              return this.parseClass(cls, true, false);\n            }\n\n            break;\n\n          case \"enum\":\n            if (next || this.match(types.name)) {\n              if (next) this.next();\n              return this.tsParseEnumDeclaration(node, false);\n            }\n\n            break;\n\n          case \"interface\":\n            if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n              if (next) this.next();\n              return this.tsParseInterfaceDeclaration(node);\n            }\n\n            break;\n\n          case \"module\":\n            if (next) this.next();\n\n            if (this.match(types.string)) {\n              return this.tsParseAmbientExternalModuleDeclaration(node);\n            } else if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n\n            break;\n\n          case \"namespace\":\n            if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n              if (next) this.next();\n              return this.tsParseModuleOrNamespaceDeclaration(node);\n            }\n\n            break;\n\n          case \"type\":\n            if (this.tsCheckLineTerminatorAndMatch(types.name, next)) {\n              if (next) this.next();\n              return this.tsParseTypeAliasDeclaration(node);\n            }\n\n            break;\n        }\n      }\n    }, {\n      key: \"tsCheckLineTerminatorAndMatch\",\n      value: function tsCheckLineTerminatorAndMatch(tokenType, next) {\n        return (next || this.match(tokenType)) && !this.isLineTerminator();\n      }\n    }, {\n      key: \"tsTryParseGenericAsyncArrowFunction\",\n      value: function tsTryParseGenericAsyncArrowFunction(startPos, startLoc) {\n        var _this28 = this;\n\n        if (!this.isRelational(\"<\")) {\n          return undefined;\n        }\n\n        var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n        this.state.maybeInArrowParameters = true;\n        var res = this.tsTryParseAndCatch(function () {\n          var node = _this28.startNodeAt(startPos, startLoc);\n\n          node.typeParameters = _this28.tsParseTypeParameters();\n\n          _get(_getPrototypeOf(_class3.prototype), \"parseFunctionParams\", _this28).call(_this28, node);\n\n          node.returnType = _this28.tsTryParseTypeOrTypePredicateAnnotation();\n\n          _this28.expect(types.arrow);\n\n          return node;\n        });\n        this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n\n        if (!res) {\n          return undefined;\n        }\n\n        return this.parseArrowExpression(res, null, true);\n      }\n    }, {\n      key: \"tsParseTypeArguments\",\n      value: function tsParseTypeArguments() {\n        var _this29 = this;\n\n        var node = this.startNode();\n        node.params = this.tsInType(function () {\n          return _this29.tsInNoContext(function () {\n            _this29.expectRelational(\"<\");\n\n            return _this29.tsParseDelimitedList(\"TypeParametersOrArguments\", _this29.tsParseType.bind(_this29));\n          });\n        });\n\n        if (node.params.length === 0) {\n          this.raise(node.start, TSErrors.EmptyTypeArguments);\n        }\n\n        this.state.exprAllowed = false;\n        this.expectRelational(\">\");\n        return this.finishNode(node, \"TSTypeParameterInstantiation\");\n      }\n    }, {\n      key: \"tsIsDeclarationStart\",\n      value: function tsIsDeclarationStart() {\n        if (this.match(types.name)) {\n          switch (this.state.value) {\n            case \"abstract\":\n            case \"declare\":\n            case \"enum\":\n            case \"interface\":\n            case \"module\":\n            case \"namespace\":\n            case \"type\":\n              return true;\n          }\n        }\n\n        return false;\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.tsIsDeclarationStart()) return false;\n        return _get(_getPrototypeOf(_class3.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"parseAssignableListItem\",\n      value: function parseAssignableListItem(allowModifiers, decorators) {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var accessibility;\n        var readonly = false;\n\n        if (allowModifiers !== undefined) {\n          accessibility = this.parseAccessModifier();\n          readonly = !!this.tsParseModifier([\"readonly\"]);\n\n          if (allowModifiers === false && (accessibility || readonly)) {\n            this.raise(startPos, TSErrors.UnexpectedParameterModifier);\n          }\n        }\n\n        var left = this.parseMaybeDefault();\n        this.parseAssignableListItemTypes(left);\n        var elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n        if (accessibility || readonly) {\n          var pp = this.startNodeAt(startPos, startLoc);\n\n          if (decorators.length) {\n            pp.decorators = decorators;\n          }\n\n          if (accessibility) pp.accessibility = accessibility;\n          if (readonly) pp.readonly = readonly;\n\n          if (elt.type !== \"Identifier\" && elt.type !== \"AssignmentPattern\") {\n            this.raise(pp.start, TSErrors.UnsupportedParameterPropertyKind);\n          }\n\n          pp.parameter = elt;\n          return this.finishNode(pp, \"TSParameterProperty\");\n        }\n\n        if (decorators.length) {\n          left.decorators = decorators;\n        }\n\n        return elt;\n      }\n    }, {\n      key: \"parseFunctionBodyAndFinish\",\n      value: function parseFunctionBodyAndFinish(node, type) {\n        var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n        if (this.match(types.colon)) {\n          node.returnType = this.tsParseTypeOrTypePredicateAnnotation(types.colon);\n        }\n\n        var bodilessType = type === \"FunctionDeclaration\" ? \"TSDeclareFunction\" : type === \"ClassMethod\" ? \"TSDeclareMethod\" : undefined;\n\n        if (bodilessType && !this.match(types.braceL) && this.isLineTerminator()) {\n          this.finishNode(node, bodilessType);\n          return;\n        }\n\n        if (bodilessType === \"TSDeclareFunction\" && this.state.isDeclareContext) {\n          this.raise(node.start, TSErrors.DeclareFunctionHasImplementation);\n\n          if (node.declare) {\n            _get(_getPrototypeOf(_class3.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, bodilessType, isMethod);\n\n            return;\n          }\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseFunctionBodyAndFinish\", this).call(this, node, type, isMethod);\n      }\n    }, {\n      key: \"registerFunctionStatementId\",\n      value: function registerFunctionStatementId(node) {\n        if (!node.body && node.id) {\n          this.checkLVal(node.id, \"function name\", BIND_TS_AMBIENT);\n        } else {\n          _get(_getPrototypeOf(_class3.prototype), \"registerFunctionStatementId\", this).apply(this, arguments);\n        }\n      }\n    }, {\n      key: \"tsCheckForInvalidTypeCasts\",\n      value: function tsCheckForInvalidTypeCasts(items) {\n        var _this30 = this;\n\n        items.forEach(function (node) {\n          if ((node == null ? void 0 : node.type) === \"TSTypeCastExpression\") {\n            _this30.raise(node.typeAnnotation.start, TSErrors.UnexpectedTypeAnnotation);\n          }\n        });\n      }\n    }, {\n      key: \"toReferencedList\",\n      value: function toReferencedList(exprList, isInParens) {\n        this.tsCheckForInvalidTypeCasts(exprList);\n        return exprList;\n      }\n    }, {\n      key: \"parseArrayLike\",\n      value: function parseArrayLike() {\n        var _get5;\n\n        for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n          args[_key7] = arguments[_key7];\n        }\n\n        var node = (_get5 = _get(_getPrototypeOf(_class3.prototype), \"parseArrayLike\", this)).call.apply(_get5, [this].concat(args));\n\n        if (node.type === \"ArrayExpression\") {\n          this.tsCheckForInvalidTypeCasts(node.elements);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseSubscript\",\n      value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n        var _this31 = this;\n\n        if (!this.hasPrecedingLineBreak() && this.match(types.bang)) {\n          this.state.exprAllowed = false;\n          this.next();\n          var nonNullExpression = this.startNodeAt(startPos, startLoc);\n          nonNullExpression.expression = base;\n          return this.finishNode(nonNullExpression, \"TSNonNullExpression\");\n        }\n\n        if (this.isRelational(\"<\")) {\n          var result = this.tsTryParseAndCatch(function () {\n            if (!noCalls && _this31.atPossibleAsyncArrow(base)) {\n              var asyncArrowFn = _this31.tsTryParseGenericAsyncArrowFunction(startPos, startLoc);\n\n              if (asyncArrowFn) {\n                return asyncArrowFn;\n              }\n            }\n\n            var node = _this31.startNodeAt(startPos, startLoc);\n\n            node.callee = base;\n\n            var typeArguments = _this31.tsParseTypeArguments();\n\n            if (typeArguments) {\n              if (!noCalls && _this31.eat(types.parenL)) {\n                node.arguments = _this31.parseCallExpressionArguments(types.parenR, false);\n\n                _this31.tsCheckForInvalidTypeCasts(node.arguments);\n\n                node.typeParameters = typeArguments;\n                return _this31.finishCallExpression(node, state.optionalChainMember);\n              } else if (_this31.match(types.backQuote)) {\n                var _result = _this31.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n\n                _result.typeParameters = typeArguments;\n                return _result;\n              }\n            }\n\n            _this31.unexpected();\n          });\n          if (result) return result;\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseSubscript\", this).call(this, base, startPos, startLoc, noCalls, state);\n      }\n    }, {\n      key: \"parseNewArguments\",\n      value: function parseNewArguments(node) {\n        var _this32 = this;\n\n        if (this.isRelational(\"<\")) {\n          var typeParameters = this.tsTryParseAndCatch(function () {\n            var args = _this32.tsParseTypeArguments();\n\n            if (!_this32.match(types.parenL)) _this32.unexpected();\n            return args;\n          });\n\n          if (typeParameters) {\n            node.typeParameters = typeParameters;\n          }\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseNewArguments\", this).call(this, node);\n      }\n    }, {\n      key: \"parseExprOp\",\n      value: function parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n        if (nonNull(types._in.binop) > minPrec && !this.hasPrecedingLineBreak() && this.isContextual(\"as\")) {\n          var node = this.startNodeAt(leftStartPos, leftStartLoc);\n          node.expression = left;\n\n          var _const = this.tsTryNextParseConstantContext();\n\n          if (_const) {\n            node.typeAnnotation = _const;\n          } else {\n            node.typeAnnotation = this.tsNextThenParseType();\n          }\n\n          this.finishNode(node, \"TSAsExpression\");\n          this.reScan_lt_gt();\n          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseExprOp\", this).call(this, left, leftStartPos, leftStartLoc, minPrec);\n      }\n    }, {\n      key: \"checkReservedWord\",\n      value: function checkReservedWord(word, startLoc, checkKeywords, isBinding) {}\n    }, {\n      key: \"checkDuplicateExports\",\n      value: function checkDuplicateExports() {}\n    }, {\n      key: \"parseImport\",\n      value: function parseImport(node) {\n        if (this.match(types.name) || this.match(types.star) || this.match(types.braceL)) {\n          var ahead = this.lookahead();\n\n          if (this.match(types.name) && ahead.type === types.eq) {\n            return this.tsParseImportEqualsDeclaration(node);\n          }\n\n          if (this.isContextual(\"type\") && ahead.type !== types.comma && !(ahead.type === types.name && ahead.value === \"from\")) {\n            node.importKind = \"type\";\n            this.next();\n          }\n        }\n\n        if (!node.importKind) {\n          node.importKind = \"value\";\n        }\n\n        var importNode = _get(_getPrototypeOf(_class3.prototype), \"parseImport\", this).call(this, node);\n\n        if (importNode.importKind === \"type\" && importNode.specifiers.length > 1 && importNode.specifiers[0].type === \"ImportDefaultSpecifier\") {\n          this.raise(importNode.start, \"A type-only import can specify a default import or named bindings, but not both.\");\n        }\n\n        return importNode;\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        if (this.match(types._import)) {\n          this.expect(types._import);\n          return this.tsParseImportEqualsDeclaration(node, true);\n        } else if (this.eat(types.eq)) {\n          var assign = node;\n          assign.expression = this.parseExpression();\n          this.semicolon();\n          return this.finishNode(assign, \"TSExportAssignment\");\n        } else if (this.eatContextual(\"as\")) {\n          var decl = node;\n          this.expectContextual(\"namespace\");\n          decl.id = this.parseIdentifier();\n          this.semicolon();\n          return this.finishNode(decl, \"TSNamespaceExportDeclaration\");\n        } else {\n          if (this.isContextual(\"type\") && this.lookahead().type === types.braceL) {\n            this.next();\n            node.exportKind = \"type\";\n          } else {\n            node.exportKind = \"value\";\n          }\n\n          return _get(_getPrototypeOf(_class3.prototype), \"parseExport\", this).call(this, node);\n        }\n      }\n    }, {\n      key: \"isAbstractClass\",\n      value: function isAbstractClass() {\n        return this.isContextual(\"abstract\") && this.lookahead().type === types._class;\n      }\n    }, {\n      key: \"parseExportDefaultExpression\",\n      value: function parseExportDefaultExpression() {\n        if (this.isAbstractClass()) {\n          var cls = this.startNode();\n          this.next();\n          this.parseClass(cls, true, true);\n          cls.abstract = true;\n          return cls;\n        }\n\n        if (this.state.value === \"interface\") {\n          var result = this.tsParseDeclaration(this.startNode(), this.state.value, true);\n          if (result) return result;\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseExportDefaultExpression\", this).call(this);\n      }\n    }, {\n      key: \"parseStatementContent\",\n      value: function parseStatementContent(context, topLevel) {\n        if (this.state.type === types._const) {\n          var ahead = this.lookahead();\n\n          if (ahead.type === types.name && ahead.value === \"enum\") {\n            var node = this.startNode();\n            this.expect(types._const);\n            this.expectContextual(\"enum\");\n            return this.tsParseEnumDeclaration(node, true);\n          }\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseStatementContent\", this).call(this, context, topLevel);\n      }\n    }, {\n      key: \"parseAccessModifier\",\n      value: function parseAccessModifier() {\n        return this.tsParseModifier([\"public\", \"protected\", \"private\"]);\n      }\n    }, {\n      key: \"parseClassMember\",\n      value: function parseClassMember(classBody, member, state) {\n        var _this33 = this;\n\n        this.tsParseModifiers(member, [\"declare\"]);\n        var accessibility = this.parseAccessModifier();\n        if (accessibility) member.accessibility = accessibility;\n        this.tsParseModifiers(member, [\"declare\"]);\n\n        var callParseClassMember = function callParseClassMember() {\n          _get(_getPrototypeOf(_class3.prototype), \"parseClassMember\", _this33).call(_this33, classBody, member, state);\n        };\n\n        if (member.declare) {\n          this.tsInDeclareContext(callParseClassMember);\n        } else {\n          callParseClassMember();\n        }\n      }\n    }, {\n      key: \"parseClassMemberWithIsStatic\",\n      value: function parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n        this.tsParseModifiers(member, [\"abstract\", \"readonly\", \"declare\"]);\n        var idx = this.tsTryParseIndexSignature(member);\n\n        if (idx) {\n          classBody.body.push(idx);\n\n          if (member.abstract) {\n            this.raise(member.start, TSErrors.IndexSignatureHasAbstract);\n          }\n\n          if (isStatic) {\n            this.raise(member.start, TSErrors.IndexSignatureHasStatic);\n          }\n\n          if (member.accessibility) {\n            this.raise(member.start, TSErrors.IndexSignatureHasAccessibility, member.accessibility);\n          }\n\n          if (member.declare) {\n            this.raise(member.start, TSErrors.IndexSignatureHasDeclare);\n          }\n\n          return;\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseClassMemberWithIsStatic\", this).call(this, classBody, member, state, isStatic);\n      }\n    }, {\n      key: \"parsePostMemberNameModifiers\",\n      value: function parsePostMemberNameModifiers(methodOrProp) {\n        var optional = this.eat(types.question);\n        if (optional) methodOrProp.optional = true;\n\n        if (methodOrProp.readonly && this.match(types.parenL)) {\n          this.raise(methodOrProp.start, TSErrors.ClassMethodHasReadonly);\n        }\n\n        if (methodOrProp.declare && this.match(types.parenL)) {\n          this.raise(methodOrProp.start, TSErrors.ClassMethodHasDeclare);\n        }\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        var decl = expr.type === \"Identifier\" ? this.tsParseExpressionStatement(node, expr) : undefined;\n        return decl || _get(_getPrototypeOf(_class3.prototype), \"parseExpressionStatement\", this).call(this, node, expr);\n      }\n    }, {\n      key: \"shouldParseExportDeclaration\",\n      value: function shouldParseExportDeclaration() {\n        if (this.tsIsDeclarationStart()) return true;\n        return _get(_getPrototypeOf(_class3.prototype), \"shouldParseExportDeclaration\", this).call(this);\n      }\n    }, {\n      key: \"parseConditional\",\n      value: function parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n        var _this34 = this;\n\n        if (!refNeedsArrowPos || !this.match(types.question)) {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseConditional\", this).call(this, expr, startPos, startLoc, refNeedsArrowPos);\n        }\n\n        var result = this.tryParse(function () {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseConditional\", _this34).call(_this34, expr, startPos, startLoc);\n        });\n\n        if (!result.node) {\n          refNeedsArrowPos.start = result.error.pos || this.state.start;\n          return expr;\n        }\n\n        if (result.error) this.state = result.failState;\n        return result.node;\n      }\n    }, {\n      key: \"parseParenItem\",\n      value: function parseParenItem(node, startPos, startLoc) {\n        node = _get(_getPrototypeOf(_class3.prototype), \"parseParenItem\", this).call(this, node, startPos, startLoc);\n\n        if (this.eat(types.question)) {\n          node.optional = true;\n          this.resetEndLocation(node);\n        }\n\n        if (this.match(types.colon)) {\n          var typeCastNode = this.startNodeAt(startPos, startLoc);\n          typeCastNode.expression = node;\n          typeCastNode.typeAnnotation = this.tsParseTypeAnnotation();\n          return this.finishNode(typeCastNode, \"TSTypeCastExpression\");\n        }\n\n        return node;\n      }\n    }, {\n      key: \"parseExportDeclaration\",\n      value: function parseExportDeclaration(node) {\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var isDeclare = this.eatContextual(\"declare\");\n        var declaration;\n\n        if (this.match(types.name)) {\n          declaration = this.tsTryParseExportDeclaration();\n        }\n\n        if (!declaration) {\n          declaration = _get(_getPrototypeOf(_class3.prototype), \"parseExportDeclaration\", this).call(this, node);\n        }\n\n        if (declaration && (declaration.type === \"TSInterfaceDeclaration\" || declaration.type === \"TSTypeAliasDeclaration\" || isDeclare)) {\n          node.exportKind = \"type\";\n        }\n\n        if (declaration && isDeclare) {\n          this.resetStartLocation(declaration, startPos, startLoc);\n          declaration.declare = true;\n        }\n\n        return declaration;\n      }\n    }, {\n      key: \"parseClassId\",\n      value: function parseClassId(node, isStatement, optionalId) {\n        if ((!isStatement || optionalId) && this.isContextual(\"implements\")) {\n          return;\n        }\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseClassId\", this).call(this, node, isStatement, optionalId, node.declare ? BIND_TS_AMBIENT : BIND_CLASS);\n\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) node.typeParameters = typeParameters;\n      }\n    }, {\n      key: \"parseClassPropertyAnnotation\",\n      value: function parseClassPropertyAnnotation(node) {\n        if (!node.optional && this.eat(types.bang)) {\n          node.definite = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) node.typeAnnotation = type;\n      }\n    }, {\n      key: \"parseClassProperty\",\n      value: function parseClassProperty(node) {\n        this.parseClassPropertyAnnotation(node);\n\n        if (this.state.isDeclareContext && this.match(types.eq)) {\n          this.raise(this.state.start, TSErrors.DeclareClassFieldHasInitializer);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseClassProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"parseClassPrivateProperty\",\n      value: function parseClassPrivateProperty(node) {\n        if (node.abstract) {\n          this.raise(node.start, TSErrors.PrivateElementHasAbstract);\n        }\n\n        if (node.accessibility) {\n          this.raise(node.start, TSErrors.PrivateElementHasAccessibility, node.accessibility);\n        }\n\n        this.parseClassPropertyAnnotation(node);\n        return _get(_getPrototypeOf(_class3.prototype), \"parseClassPrivateProperty\", this).call(this, node);\n      }\n    }, {\n      key: \"pushClassMethod\",\n      value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n        var typeParameters = this.tsTryParseTypeParameters();\n\n        if (typeParameters && isConstructor) {\n          this.raise(typeParameters.start, TSErrors.ConstructorHasTypeParameters);\n        }\n\n        if (typeParameters) method.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class3.prototype), \"pushClassMethod\", this).call(this, classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper);\n      }\n    }, {\n      key: \"pushClassPrivateMethod\",\n      value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) method.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class3.prototype), \"pushClassPrivateMethod\", this).call(this, classBody, method, isGenerator, isAsync);\n      }\n    }, {\n      key: \"parseClassSuper\",\n      value: function parseClassSuper(node) {\n        _get(_getPrototypeOf(_class3.prototype), \"parseClassSuper\", this).call(this, node);\n\n        if (node.superClass && this.isRelational(\"<\")) {\n          node.superTypeParameters = this.tsParseTypeArguments();\n        }\n\n        if (this.eatContextual(\"implements\")) {\n          node.implements = this.tsParseHeritageClause(\"implements\");\n        }\n      }\n    }, {\n      key: \"parseObjPropValue\",\n      value: function parseObjPropValue(prop) {\n        var _get6;\n\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) prop.typeParameters = typeParameters;\n\n        for (var _len8 = arguments.length, args = new Array(_len8 > 1 ? _len8 - 1 : 0), _key8 = 1; _key8 < _len8; _key8++) {\n          args[_key8 - 1] = arguments[_key8];\n        }\n\n        (_get6 = _get(_getPrototypeOf(_class3.prototype), \"parseObjPropValue\", this)).call.apply(_get6, [this, prop].concat(args));\n      }\n    }, {\n      key: \"parseFunctionParams\",\n      value: function parseFunctionParams(node, allowModifiers) {\n        var typeParameters = this.tsTryParseTypeParameters();\n        if (typeParameters) node.typeParameters = typeParameters;\n\n        _get(_getPrototypeOf(_class3.prototype), \"parseFunctionParams\", this).call(this, node, allowModifiers);\n      }\n    }, {\n      key: \"parseVarId\",\n      value: function parseVarId(decl, kind) {\n        _get(_getPrototypeOf(_class3.prototype), \"parseVarId\", this).call(this, decl, kind);\n\n        if (decl.id.type === \"Identifier\" && this.eat(types.bang)) {\n          decl.definite = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n\n        if (type) {\n          decl.id.typeAnnotation = type;\n          this.resetEndLocation(decl.id);\n        }\n      }\n    }, {\n      key: \"parseAsyncArrowFromCallExpression\",\n      value: function parseAsyncArrowFromCallExpression(node, call) {\n        if (this.match(types.colon)) {\n          node.returnType = this.tsParseTypeAnnotation();\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseAsyncArrowFromCallExpression\", this).call(this, node, call);\n      }\n    }, {\n      key: \"parseMaybeAssign\",\n      value: function parseMaybeAssign() {\n        var _this35 = this;\n\n        for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n          args[_key9] = arguments[_key9];\n        }\n\n        var _jsx, _jsx2, _typeCast, _jsx3, _typeCast2, _jsx4, _typeCast3;\n\n        var state;\n        var jsx;\n        var typeCast;\n\n        if (this.match(types.jsxTagStart)) {\n          state = this.state.clone();\n          jsx = this.tryParse(function () {\n            var _get7;\n\n            return (_get7 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", _this35)).call.apply(_get7, [_this35].concat(args));\n          }, state);\n          if (!jsx.error) return jsx.node;\n          var context = this.state.context;\n\n          if (context[context.length - 1] === types$1.j_oTag) {\n            context.length -= 2;\n          } else if (context[context.length - 1] === types$1.j_expr) {\n            context.length -= 1;\n          }\n        }\n\n        if (!((_jsx = jsx) == null ? void 0 : _jsx.error) && !this.isRelational(\"<\")) {\n          var _get8;\n\n          return (_get8 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", this)).call.apply(_get8, [this].concat(args));\n        }\n\n        var typeParameters;\n        state = state || this.state.clone();\n        var arrow = this.tryParse(function (abort) {\n          var _get9;\n\n          var _typeParameters;\n\n          typeParameters = _this35.tsParseTypeParameters();\n\n          var expr = (_get9 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", _this35)).call.apply(_get9, [_this35].concat(args));\n\n          if (expr.type !== \"ArrowFunctionExpression\" || expr.extra && expr.extra.parenthesized) {\n            abort();\n          }\n\n          if (((_typeParameters = typeParameters) == null ? void 0 : _typeParameters.params.length) !== 0) {\n            _this35.resetStartLocationFromNode(expr, typeParameters);\n          }\n\n          expr.typeParameters = typeParameters;\n          return expr;\n        }, state);\n        if (!arrow.error && !arrow.aborted) return arrow.node;\n\n        if (!jsx) {\n          assert(!this.hasPlugin(\"jsx\"));\n          typeCast = this.tryParse(function () {\n            var _get10;\n\n            return (_get10 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeAssign\", _this35)).call.apply(_get10, [_this35].concat(args));\n          }, state);\n          if (!typeCast.error) return typeCast.node;\n        }\n\n        if ((_jsx2 = jsx) == null ? void 0 : _jsx2.node) {\n          this.state = jsx.failState;\n          return jsx.node;\n        }\n\n        if (arrow.node) {\n          this.state = arrow.failState;\n          return arrow.node;\n        }\n\n        if ((_typeCast = typeCast) == null ? void 0 : _typeCast.node) {\n          this.state = typeCast.failState;\n          return typeCast.node;\n        }\n\n        if ((_jsx3 = jsx) == null ? void 0 : _jsx3.thrown) throw jsx.error;\n        if (arrow.thrown) throw arrow.error;\n        if ((_typeCast2 = typeCast) == null ? void 0 : _typeCast2.thrown) throw typeCast.error;\n        throw ((_jsx4 = jsx) == null ? void 0 : _jsx4.error) || arrow.error || ((_typeCast3 = typeCast) == null ? void 0 : _typeCast3.error);\n      }\n    }, {\n      key: \"parseMaybeUnary\",\n      value: function parseMaybeUnary(refExpressionErrors) {\n        if (!this.hasPlugin(\"jsx\") && this.isRelational(\"<\")) {\n          return this.tsParseTypeAssertion();\n        } else {\n          return _get(_getPrototypeOf(_class3.prototype), \"parseMaybeUnary\", this).call(this, refExpressionErrors);\n        }\n      }\n    }, {\n      key: \"parseArrow\",\n      value: function parseArrow(node) {\n        var _this36 = this;\n\n        if (this.match(types.colon)) {\n          var result = this.tryParse(function (abort) {\n            var returnType = _this36.tsParseTypeOrTypePredicateAnnotation(types.colon);\n\n            if (_this36.canInsertSemicolon() || !_this36.match(types.arrow)) abort();\n            return returnType;\n          });\n          if (result.aborted) return;\n\n          if (!result.thrown) {\n            if (result.error) this.state = result.failState;\n            node.returnType = result.node;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseArrow\", this).call(this, node);\n      }\n    }, {\n      key: \"parseAssignableListItemTypes\",\n      value: function parseAssignableListItemTypes(param) {\n        if (this.eat(types.question)) {\n          if (param.type !== \"Identifier\" && !this.state.isDeclareContext && !this.state.inType) {\n            this.raise(param.start, TSErrors.PatternIsOptional);\n          }\n\n          param.optional = true;\n        }\n\n        var type = this.tsTryParseTypeAnnotation();\n        if (type) param.typeAnnotation = type;\n        this.resetEndLocation(param);\n        return param;\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n        switch (node.type) {\n          case \"TSTypeCastExpression\":\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, this.typeCastToParameter(node), isLHS);\n\n          case \"TSParameterProperty\":\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, node, isLHS);\n\n          case \"TSAsExpression\":\n          case \"TSNonNullExpression\":\n          case \"TSTypeAssertion\":\n            node.expression = this.toAssignable(node.expression, isLHS);\n            return node;\n\n          default:\n            return _get(_getPrototypeOf(_class3.prototype), \"toAssignable\", this).call(this, node, isLHS);\n        }\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr, contextDescription) {\n        var _get11;\n\n        for (var _len10 = arguments.length, args = new Array(_len10 > 2 ? _len10 - 2 : 0), _key10 = 2; _key10 < _len10; _key10++) {\n          args[_key10 - 2] = arguments[_key10];\n        }\n\n        switch (expr.type) {\n          case \"TSTypeCastExpression\":\n            return;\n\n          case \"TSParameterProperty\":\n            this.checkLVal.apply(this, [expr.parameter, \"parameter property\"].concat(args));\n            return;\n\n          case \"TSAsExpression\":\n          case \"TSNonNullExpression\":\n          case \"TSTypeAssertion\":\n            this.checkLVal.apply(this, [expr.expression, contextDescription].concat(args));\n            return;\n\n          default:\n            (_get11 = _get(_getPrototypeOf(_class3.prototype), \"checkLVal\", this)).call.apply(_get11, [this, expr, contextDescription].concat(args));\n\n            return;\n        }\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        switch (this.state.type) {\n          case types._this:\n            return this.parseIdentifier(true);\n\n          default:\n            return _get(_getPrototypeOf(_class3.prototype), \"parseBindingAtom\", this).call(this);\n        }\n      }\n    }, {\n      key: \"parseMaybeDecoratorArguments\",\n      value: function parseMaybeDecoratorArguments(expr) {\n        if (this.isRelational(\"<\")) {\n          var typeArguments = this.tsParseTypeArguments();\n\n          if (this.match(types.parenL)) {\n            var call = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeDecoratorArguments\", this).call(this, expr);\n\n            call.typeParameters = typeArguments;\n            return call;\n          }\n\n          this.unexpected(this.state.start, types.parenL);\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"parseMaybeDecoratorArguments\", this).call(this, expr);\n      }\n    }, {\n      key: \"isClassMethod\",\n      value: function isClassMethod() {\n        return this.isRelational(\"<\") || _get(_getPrototypeOf(_class3.prototype), \"isClassMethod\", this).call(this);\n      }\n    }, {\n      key: \"isClassProperty\",\n      value: function isClassProperty() {\n        return this.match(types.bang) || this.match(types.colon) || _get(_getPrototypeOf(_class3.prototype), \"isClassProperty\", this).call(this);\n      }\n    }, {\n      key: \"parseMaybeDefault\",\n      value: function parseMaybeDefault() {\n        var _get12;\n\n        for (var _len11 = arguments.length, args = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n          args[_key11] = arguments[_key11];\n        }\n\n        var node = (_get12 = _get(_getPrototypeOf(_class3.prototype), \"parseMaybeDefault\", this)).call.apply(_get12, [this].concat(args));\n\n        if (node.type === \"AssignmentPattern\" && node.typeAnnotation && node.right.start < node.typeAnnotation.start) {\n          this.raise(node.typeAnnotation.start, TSErrors.TypeAnnotationAfterAssign);\n        }\n\n        return node;\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (this.state.inType && (code === 62 || code === 60)) {\n          return this.finishOp(types.relational, 1);\n        } else {\n          return _get(_getPrototypeOf(_class3.prototype), \"getTokenFromCode\", this).call(this, code);\n        }\n      }\n    }, {\n      key: \"reScan_lt_gt\",\n      value: function reScan_lt_gt() {\n        if (this.match(types.relational)) {\n          var code = this.input.charCodeAt(this.state.start);\n\n          if (code === 60 || code === 62) {\n            this.state.pos -= 1;\n            this.readToken_lt_gt(code);\n          }\n        }\n      }\n    }, {\n      key: \"toAssignableList\",\n      value: function toAssignableList(exprList) {\n        for (var i = 0; i < exprList.length; i++) {\n          var expr = exprList[i];\n          if (!expr) continue;\n\n          switch (expr.type) {\n            case \"TSTypeCastExpression\":\n              exprList[i] = this.typeCastToParameter(expr);\n              break;\n\n            case \"TSAsExpression\":\n            case \"TSTypeAssertion\":\n              if (!this.state.maybeInArrowParameters) {\n                exprList[i] = this.typeCastToParameter(expr);\n              } else {\n                this.raise(expr.start, TSErrors.UnexpectedTypeCastInParameter);\n              }\n\n              break;\n          }\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"toAssignableList\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"typeCastToParameter\",\n      value: function typeCastToParameter(node) {\n        node.expression.typeAnnotation = node.typeAnnotation;\n        this.resetEndLocation(node.expression, node.typeAnnotation.end, node.typeAnnotation.loc.end);\n        return node.expression;\n      }\n    }, {\n      key: \"shouldParseArrow\",\n      value: function shouldParseArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_class3.prototype), \"shouldParseArrow\", this).call(this);\n      }\n    }, {\n      key: \"shouldParseAsyncArrow\",\n      value: function shouldParseAsyncArrow() {\n        return this.match(types.colon) || _get(_getPrototypeOf(_class3.prototype), \"shouldParseAsyncArrow\", this).call(this);\n      }\n    }, {\n      key: \"canHaveLeadingDecorator\",\n      value: function canHaveLeadingDecorator() {\n        return _get(_getPrototypeOf(_class3.prototype), \"canHaveLeadingDecorator\", this).call(this) || this.isAbstractClass();\n      }\n    }, {\n      key: \"jsxParseOpeningElementAfterName\",\n      value: function jsxParseOpeningElementAfterName(node) {\n        var _this37 = this;\n\n        if (this.isRelational(\"<\")) {\n          var typeArguments = this.tsTryParseAndCatch(function () {\n            return _this37.tsParseTypeArguments();\n          });\n          if (typeArguments) node.typeParameters = typeArguments;\n        }\n\n        return _get(_getPrototypeOf(_class3.prototype), \"jsxParseOpeningElementAfterName\", this).call(this, node);\n      }\n    }, {\n      key: \"getGetterSetterExpectedParamCount\",\n      value: function getGetterSetterExpectedParamCount(method) {\n        var baseCount = _get(_getPrototypeOf(_class3.prototype), \"getGetterSetterExpectedParamCount\", this).call(this, method);\n\n        var params = this.getObjectOrClassMethodParams(method);\n        var firstParam = params[0];\n        var hasContextParam = firstParam && firstParam.type === \"Identifier\" && firstParam.name === \"this\";\n        return hasContextParam ? baseCount + 1 : baseCount;\n      }\n    }, {\n      key: \"parseCatchClauseParam\",\n      value: function parseCatchClauseParam() {\n        var param = _get(_getPrototypeOf(_class3.prototype), \"parseCatchClauseParam\", this).call(this);\n\n        var type = this.tsTryParseTypeAnnotation();\n\n        if (type) {\n          param.typeAnnotation = type;\n          this.resetEndLocation(param);\n        }\n\n        return param;\n      }\n    }, {\n      key: \"tsInDeclareContext\",\n      value: function tsInDeclareContext(cb) {\n        var oldIsDeclareContext = this.state.isDeclareContext;\n        this.state.isDeclareContext = true;\n\n        try {\n          return cb();\n        } finally {\n          this.state.isDeclareContext = oldIsDeclareContext;\n        }\n      }\n    }]);\n\n    return _class3;\n  }(superClass);\n};\n\ntypes.placeholder = new TokenType(\"%%\", {\n  startsExpr: true\n});\n\nvar placeholders = function placeholders(superClass) {\n  return /*#__PURE__*/function (_superClass5) {\n    _inherits(_class4, _superClass5);\n\n    var _super9 = _createSuper(_class4);\n\n    function _class4() {\n      _classCallCheck(this, _class4);\n\n      return _super9.apply(this, arguments);\n    }\n\n    _createClass(_class4, [{\n      key: \"parsePlaceholder\",\n      value: function parsePlaceholder(expectedNode) {\n        if (this.match(types.placeholder)) {\n          var node = this.startNode();\n          this.next();\n          this.assertNoSpace(\"Unexpected space in placeholder.\");\n          node.name = _get(_getPrototypeOf(_class4.prototype), \"parseIdentifier\", this).call(this, true);\n          this.assertNoSpace(\"Unexpected space in placeholder.\");\n          this.expect(types.placeholder);\n          return this.finishPlaceholder(node, expectedNode);\n        }\n      }\n    }, {\n      key: \"finishPlaceholder\",\n      value: function finishPlaceholder(node, expectedNode) {\n        var isFinished = !!(node.expectedNode && node.type === \"Placeholder\");\n        node.expectedNode = expectedNode;\n        return isFinished ? node : this.finishNode(node, \"Placeholder\");\n      }\n    }, {\n      key: \"getTokenFromCode\",\n      value: function getTokenFromCode(code) {\n        if (code === 37 && this.input.charCodeAt(this.state.pos + 1) === 37) {\n          return this.finishOp(types.placeholder, 2);\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"getTokenFromCode\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom() {\n        return this.parsePlaceholder(\"Expression\") || _get(_getPrototypeOf(_class4.prototype), \"parseExprAtom\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseIdentifier\",\n      value: function parseIdentifier() {\n        return this.parsePlaceholder(\"Identifier\") || _get(_getPrototypeOf(_class4.prototype), \"parseIdentifier\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkReservedWord\",\n      value: function checkReservedWord(word) {\n        if (word !== undefined) _get(_getPrototypeOf(_class4.prototype), \"checkReservedWord\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseBindingAtom\",\n      value: function parseBindingAtom() {\n        return this.parsePlaceholder(\"Pattern\") || _get(_getPrototypeOf(_class4.prototype), \"parseBindingAtom\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkLVal\",\n      value: function checkLVal(expr) {\n        if (expr.type !== \"Placeholder\") _get(_getPrototypeOf(_class4.prototype), \"checkLVal\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"toAssignable\",\n      value: function toAssignable(node) {\n        if (node && node.type === \"Placeholder\" && node.expectedNode === \"Expression\") {\n          node.expectedNode = \"Pattern\";\n          return node;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"toAssignable\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"verifyBreakContinue\",\n      value: function verifyBreakContinue(node) {\n        if (node.label && node.label.type === \"Placeholder\") return;\n\n        _get(_getPrototypeOf(_class4.prototype), \"verifyBreakContinue\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseExpressionStatement\",\n      value: function parseExpressionStatement(node, expr) {\n        if (expr.type !== \"Placeholder\" || expr.extra && expr.extra.parenthesized) {\n          return _get(_getPrototypeOf(_class4.prototype), \"parseExpressionStatement\", this).apply(this, arguments);\n        }\n\n        if (this.match(types.colon)) {\n          var stmt = node;\n          stmt.label = this.finishPlaceholder(expr, \"Identifier\");\n          this.next();\n          stmt.body = this.parseStatement(\"label\");\n          return this.finishNode(stmt, \"LabeledStatement\");\n        }\n\n        this.semicolon();\n        node.name = expr.name;\n        return this.finishPlaceholder(node, \"Statement\");\n      }\n    }, {\n      key: \"parseBlock\",\n      value: function parseBlock() {\n        return this.parsePlaceholder(\"BlockStatement\") || _get(_getPrototypeOf(_class4.prototype), \"parseBlock\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseFunctionId\",\n      value: function parseFunctionId() {\n        return this.parsePlaceholder(\"Identifier\") || _get(_getPrototypeOf(_class4.prototype), \"parseFunctionId\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"parseClass\",\n      value: function parseClass(node, isStatement, optionalId) {\n        var type = isStatement ? \"ClassDeclaration\" : \"ClassExpression\";\n        this.next();\n        this.takeDecorators(node);\n        var oldStrict = this.state.strict;\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n\n        if (placeholder) {\n          if (this.match(types._extends) || this.match(types.placeholder) || this.match(types.braceL)) {\n            node.id = placeholder;\n          } else if (optionalId || !isStatement) {\n            node.id = null;\n            node.body = this.finishPlaceholder(placeholder, \"ClassBody\");\n            return this.finishNode(node, type);\n          } else {\n            this.unexpected(null, \"A class name is required\");\n          }\n        } else {\n          this.parseClassId(node, isStatement, optionalId);\n        }\n\n        this.parseClassSuper(node);\n        node.body = this.parsePlaceholder(\"ClassBody\") || this.parseClassBody(!!node.superClass, oldStrict);\n        return this.finishNode(node, type);\n      }\n    }, {\n      key: \"parseExport\",\n      value: function parseExport(node) {\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n        if (!placeholder) return _get(_getPrototypeOf(_class4.prototype), \"parseExport\", this).apply(this, arguments);\n\n        if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n          node.specifiers = [];\n          node.source = null;\n          node.declaration = this.finishPlaceholder(placeholder, \"Declaration\");\n          return this.finishNode(node, \"ExportNamedDeclaration\");\n        }\n\n        this.expectPlugin(\"exportDefaultFrom\");\n        var specifier = this.startNode();\n        specifier.exported = placeholder;\n        node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n        return _get(_getPrototypeOf(_class4.prototype), \"parseExport\", this).call(this, node);\n      }\n    }, {\n      key: \"isExportDefaultSpecifier\",\n      value: function isExportDefaultSpecifier() {\n        if (this.match(types._default)) {\n          var next = this.nextTokenStart();\n\n          if (this.isUnparsedContextual(next, \"from\")) {\n            if (this.input.startsWith(types.placeholder.label, this.nextTokenStartSince(next + 4))) {\n              return true;\n            }\n          }\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"isExportDefaultSpecifier\", this).call(this);\n      }\n    }, {\n      key: \"maybeParseExportDefaultSpecifier\",\n      value: function maybeParseExportDefaultSpecifier(node) {\n        if (node.specifiers && node.specifiers.length > 0) {\n          return true;\n        }\n\n        return _get(_getPrototypeOf(_class4.prototype), \"maybeParseExportDefaultSpecifier\", this).apply(this, arguments);\n      }\n    }, {\n      key: \"checkExport\",\n      value: function checkExport(node) {\n        var specifiers = node.specifiers;\n\n        if (specifiers == null ? void 0 : specifiers.length) {\n          node.specifiers = specifiers.filter(function (node) {\n            return node.exported.type === \"Placeholder\";\n          });\n        }\n\n        _get(_getPrototypeOf(_class4.prototype), \"checkExport\", this).call(this, node);\n\n        node.specifiers = specifiers;\n      }\n    }, {\n      key: \"parseImport\",\n      value: function parseImport(node) {\n        var placeholder = this.parsePlaceholder(\"Identifier\");\n        if (!placeholder) return _get(_getPrototypeOf(_class4.prototype), \"parseImport\", this).apply(this, arguments);\n        node.specifiers = [];\n\n        if (!this.isContextual(\"from\") && !this.match(types.comma)) {\n          node.source = this.finishPlaceholder(placeholder, \"StringLiteral\");\n          this.semicolon();\n          return this.finishNode(node, \"ImportDeclaration\");\n        }\n\n        var specifier = this.startNodeAtNode(placeholder);\n        specifier.local = placeholder;\n        this.finishNode(specifier, \"ImportDefaultSpecifier\");\n        node.specifiers.push(specifier);\n\n        if (this.eat(types.comma)) {\n          var hasStarImport = this.maybeParseStarImportSpecifier(node);\n          if (!hasStarImport) this.parseNamedImportSpecifiers(node);\n        }\n\n        this.expectContextual(\"from\");\n        node.source = this.parseImportSource();\n        this.semicolon();\n        return this.finishNode(node, \"ImportDeclaration\");\n      }\n    }, {\n      key: \"parseImportSource\",\n      value: function parseImportSource() {\n        return this.parsePlaceholder(\"StringLiteral\") || _get(_getPrototypeOf(_class4.prototype), \"parseImportSource\", this).apply(this, arguments);\n      }\n    }]);\n\n    return _class4;\n  }(superClass);\n};\n\nvar v8intrinsic = function v8intrinsic(superClass) {\n  return /*#__PURE__*/function (_superClass6) {\n    _inherits(_class5, _superClass6);\n\n    var _super10 = _createSuper(_class5);\n\n    function _class5() {\n      _classCallCheck(this, _class5);\n\n      return _super10.apply(this, arguments);\n    }\n\n    _createClass(_class5, [{\n      key: \"parseV8Intrinsic\",\n      value: function parseV8Intrinsic() {\n        if (this.match(types.modulo)) {\n          var v8IntrinsicStart = this.state.start;\n          var node = this.startNode();\n          this.eat(types.modulo);\n\n          if (this.match(types.name)) {\n            var name = this.parseIdentifierName(this.state.start);\n            var identifier = this.createIdentifier(node, name);\n            identifier.type = \"V8IntrinsicIdentifier\";\n\n            if (this.match(types.parenL)) {\n              return identifier;\n            }\n          }\n\n          this.unexpected(v8IntrinsicStart);\n        }\n      }\n    }, {\n      key: \"parseExprAtom\",\n      value: function parseExprAtom() {\n        return this.parseV8Intrinsic() || _get(_getPrototypeOf(_class5.prototype), \"parseExprAtom\", this).apply(this, arguments);\n      }\n    }]);\n\n    return _class5;\n  }(superClass);\n};\n\nfunction hasPlugin(plugins, name) {\n  return plugins.some(function (plugin) {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n}\n\nfunction getPluginOption(plugins, name, option) {\n  var plugin = plugins.find(function (plugin) {\n    if (Array.isArray(plugin)) {\n      return plugin[0] === name;\n    } else {\n      return plugin === name;\n    }\n  });\n\n  if (plugin && Array.isArray(plugin)) {\n    return plugin[1][option];\n  }\n\n  return null;\n}\n\nvar PIPELINE_PROPOSALS = [\"minimal\", \"smart\", \"fsharp\"];\nvar RECORD_AND_TUPLE_SYNTAX_TYPES = [\"hash\", \"bar\"];\n\nfunction validatePlugins(plugins) {\n  if (hasPlugin(plugins, \"decorators\")) {\n    if (hasPlugin(plugins, \"decorators-legacy\")) {\n      throw new Error(\"Cannot use the decorators and decorators-legacy plugin together\");\n    }\n\n    var decoratorsBeforeExport = getPluginOption(plugins, \"decorators\", \"decoratorsBeforeExport\");\n\n    if (decoratorsBeforeExport == null) {\n      throw new Error(\"The 'decorators' plugin requires a 'decoratorsBeforeExport' option,\" + \" whose value must be a boolean. If you are migrating from\" + \" Babylon/Babel 6 or want to use the old decorators proposal, you\" + \" should use the 'decorators-legacy' plugin instead of 'decorators'.\");\n    } else if (typeof decoratorsBeforeExport !== \"boolean\") {\n      throw new Error(\"'decoratorsBeforeExport' must be a boolean.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"flow\") && hasPlugin(plugins, \"typescript\")) {\n    throw new Error(\"Cannot combine flow and typescript plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"placeholders\") && hasPlugin(plugins, \"v8intrinsic\")) {\n    throw new Error(\"Cannot combine placeholders and v8intrinsic plugins.\");\n  }\n\n  if (hasPlugin(plugins, \"pipelineOperator\") && !PIPELINE_PROPOSALS.includes(getPluginOption(plugins, \"pipelineOperator\", \"proposal\"))) {\n    throw new Error(\"'pipelineOperator' requires 'proposal' option whose value should be one of: \" + PIPELINE_PROPOSALS.map(function (p) {\n      return \"'\".concat(p, \"'\");\n    }).join(\", \"));\n  }\n\n  if (hasPlugin(plugins, \"moduleAttributes\")) {\n    if (hasPlugin(plugins, \"importAssertions\")) {\n      throw new Error(\"Cannot combine importAssertions and moduleAttributes plugins.\");\n    }\n\n    var moduleAttributesVerionPluginOption = getPluginOption(plugins, \"moduleAttributes\", \"version\");\n\n    if (moduleAttributesVerionPluginOption !== \"may-2020\") {\n      throw new Error(\"The 'moduleAttributes' plugin requires a 'version' option,\" + \" representing the last proposal update. Currently, the\" + \" only supported value is 'may-2020'.\");\n    }\n  }\n\n  if (hasPlugin(plugins, \"recordAndTuple\") && !RECORD_AND_TUPLE_SYNTAX_TYPES.includes(getPluginOption(plugins, \"recordAndTuple\", \"syntaxType\"))) {\n    throw new Error(\"'recordAndTuple' requires 'syntaxType' option whose value should be one of: \" + RECORD_AND_TUPLE_SYNTAX_TYPES.map(function (p) {\n      return \"'\".concat(p, \"'\");\n    }).join(\", \"));\n  }\n}\n\nvar mixinPlugins = {\n  estree: estree,\n  jsx: jsx,\n  flow: flow,\n  typescript: typescript,\n  v8intrinsic: v8intrinsic,\n  placeholders: placeholders\n};\nvar mixinPluginNames = Object.keys(mixinPlugins);\nvar defaultOptions = {\n  sourceType: \"script\",\n  sourceFilename: undefined,\n  startLine: 1,\n  allowAwaitOutsideFunction: false,\n  allowReturnOutsideFunction: false,\n  allowImportExportEverywhere: false,\n  allowSuperOutsideMethod: false,\n  allowUndeclaredExports: false,\n  plugins: [],\n  strictMode: null,\n  ranges: false,\n  tokens: false,\n  createParenthesizedExpressions: false,\n  errorRecovery: false\n};\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var _i = 0, _Object$keys = Object.keys(defaultOptions); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    options[key] = opts && opts[key] != null ? opts[key] : defaultOptions[key];\n  }\n\n  return options;\n}\n\nvar State = /*#__PURE__*/function () {\n  function State() {\n    _classCallCheck(this, State);\n\n    this.strict = void 0;\n    this.curLine = void 0;\n    this.startLoc = void 0;\n    this.endLoc = void 0;\n    this.errors = [];\n    this.potentialArrowAt = -1;\n    this.noArrowAt = [];\n    this.noArrowParamsConversionAt = [];\n    this.maybeInArrowParameters = false;\n    this.inPipeline = false;\n    this.inType = false;\n    this.noAnonFunctionType = false;\n    this.inPropertyName = false;\n    this.hasFlowComment = false;\n    this.isIterator = false;\n    this.isDeclareContext = false;\n    this.topicContext = {\n      maxNumOfResolvableTopics: 0,\n      maxTopicIndex: null\n    };\n    this.soloAwait = false;\n    this.inFSharpPipelineDirectBody = false;\n    this.labels = [];\n    this.decoratorStack = [[]];\n    this.comments = [];\n    this.trailingComments = [];\n    this.leadingComments = [];\n    this.commentStack = [];\n    this.commentPreviousNode = null;\n    this.pos = 0;\n    this.lineStart = 0;\n    this.type = types.eof;\n    this.value = null;\n    this.start = 0;\n    this.end = 0;\n    this.lastTokEndLoc = null;\n    this.lastTokStartLoc = null;\n    this.lastTokStart = 0;\n    this.lastTokEnd = 0;\n    this.context = [types$1.braceStatement];\n    this.exprAllowed = true;\n    this.containsEsc = false;\n    this.octalPositions = [];\n    this.exportedIdentifiers = [];\n    this.tokensLength = 0;\n  }\n\n  _createClass(State, [{\n    key: \"init\",\n    value: function init(options) {\n      this.strict = options.strictMode === false ? false : options.sourceType === \"module\";\n      this.curLine = options.startLine;\n      this.startLoc = this.endLoc = this.curPosition();\n    }\n  }, {\n    key: \"curPosition\",\n    value: function curPosition() {\n      return new Position(this.curLine, this.pos - this.lineStart);\n    }\n  }, {\n    key: \"clone\",\n    value: function clone(skipArrays) {\n      var state = new State();\n      var keys = Object.keys(this);\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i];\n        var val = this[key];\n\n        if (!skipArrays && Array.isArray(val)) {\n          val = val.slice();\n        }\n\n        state[key] = val;\n      }\n\n      return state;\n    }\n  }]);\n\n  return State;\n}();\n\nvar _isDigit = function isDigit(code) {\n  return code >= 48 && code <= 57;\n};\n\nvar VALID_REGEX_FLAGS = new Set([\"g\", \"m\", \"s\", \"i\", \"y\", \"u\"]);\nvar forbiddenNumericSeparatorSiblings = {\n  decBinOct: [46, 66, 69, 79, 95, 98, 101, 111],\n  hex: [46, 88, 95, 120]\n};\nvar allowedNumericSeparatorSiblings = {};\nallowedNumericSeparatorSiblings.bin = [48, 49];\nallowedNumericSeparatorSiblings.oct = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.bin), [50, 51, 52, 53, 54, 55]);\nallowedNumericSeparatorSiblings.dec = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.oct), [56, 57]);\nallowedNumericSeparatorSiblings.hex = [].concat(_toConsumableArray(allowedNumericSeparatorSiblings.dec), [65, 66, 67, 68, 69, 70, 97, 98, 99, 100, 101, 102]);\n\nvar Token = function Token(state) {\n  _classCallCheck(this, Token);\n\n  this.type = state.type;\n  this.value = state.value;\n  this.start = state.start;\n  this.end = state.end;\n  this.loc = new SourceLocation(state.startLoc, state.endLoc);\n};\n\nvar Tokenizer = /*#__PURE__*/function (_ParserError) {\n  _inherits(Tokenizer, _ParserError);\n\n  var _super11 = _createSuper(Tokenizer);\n\n  function Tokenizer(options, input) {\n    var _this38;\n\n    _classCallCheck(this, Tokenizer);\n\n    _this38 = _super11.call(this);\n    _this38.isLookahead = void 0;\n    _this38.tokens = [];\n    _this38.state = new State();\n\n    _this38.state.init(options);\n\n    _this38.input = input;\n    _this38.length = input.length;\n    _this38.isLookahead = false;\n    return _this38;\n  }\n\n  _createClass(Tokenizer, [{\n    key: \"pushToken\",\n    value: function pushToken(token) {\n      this.tokens.length = this.state.tokensLength;\n      this.tokens.push(token);\n      ++this.state.tokensLength;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (!this.isLookahead) {\n        this.checkKeywordEscapes();\n\n        if (this.options.tokens) {\n          this.pushToken(new Token(this.state));\n        }\n      }\n\n      this.state.lastTokEnd = this.state.end;\n      this.state.lastTokStart = this.state.start;\n      this.state.lastTokEndLoc = this.state.endLoc;\n      this.state.lastTokStartLoc = this.state.startLoc;\n      this.nextToken();\n    }\n  }, {\n    key: \"eat\",\n    value: function eat(type) {\n      if (this.match(type)) {\n        this.next();\n        return true;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"match\",\n    value: function match(type) {\n      return this.state.type === type;\n    }\n  }, {\n    key: \"lookahead\",\n    value: function lookahead() {\n      var old = this.state;\n      this.state = old.clone(true);\n      this.isLookahead = true;\n      this.next();\n      this.isLookahead = false;\n      var curr = this.state;\n      this.state = old;\n      return curr;\n    }\n  }, {\n    key: \"nextTokenStart\",\n    value: function nextTokenStart() {\n      return this.nextTokenStartSince(this.state.pos);\n    }\n  }, {\n    key: \"nextTokenStartSince\",\n    value: function nextTokenStartSince(pos) {\n      skipWhiteSpace.lastIndex = pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      return pos + skip[0].length;\n    }\n  }, {\n    key: \"lookaheadCharCode\",\n    value: function lookaheadCharCode() {\n      return this.input.charCodeAt(this.nextTokenStart());\n    }\n  }, {\n    key: \"setStrict\",\n    value: function setStrict(strict) {\n      this.state.strict = strict;\n      if (!this.match(types.num) && !this.match(types.string)) return;\n      this.state.pos = this.state.start;\n\n      while (this.state.pos < this.state.lineStart) {\n        this.state.lineStart = this.input.lastIndexOf(\"\\n\", this.state.lineStart - 2) + 1;\n        --this.state.curLine;\n      }\n\n      this.nextToken();\n    }\n  }, {\n    key: \"curContext\",\n    value: function curContext() {\n      return this.state.context[this.state.context.length - 1];\n    }\n  }, {\n    key: \"nextToken\",\n    value: function nextToken() {\n      var curContext = this.curContext();\n      if (!(curContext == null ? void 0 : curContext.preserveSpace)) this.skipSpace();\n      this.state.octalPositions = [];\n      this.state.start = this.state.pos;\n      this.state.startLoc = this.state.curPosition();\n\n      if (this.state.pos >= this.length) {\n        this.finishToken(types.eof);\n        return;\n      }\n\n      var override = curContext == null ? void 0 : curContext.override;\n\n      if (override) {\n        override(this);\n      } else {\n        this.getTokenFromCode(this.input.codePointAt(this.state.pos));\n      }\n    }\n  }, {\n    key: \"pushComment\",\n    value: function pushComment(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"CommentBlock\" : \"CommentLine\",\n        value: text,\n        start: start,\n        end: end,\n        loc: new SourceLocation(startLoc, endLoc)\n      };\n      if (this.options.tokens) this.pushToken(comment);\n      this.state.comments.push(comment);\n      this.addComment(comment);\n    }\n  }, {\n    key: \"skipBlockComment\",\n    value: function skipBlockComment() {\n      var startLoc = this.state.curPosition();\n      var start = this.state.pos;\n      var end = this.input.indexOf(\"*/\", this.state.pos + 2);\n      if (end === -1) throw this.raise(start, ErrorMessages.UnterminatedComment);\n      this.state.pos = end + 2;\n      lineBreakG.lastIndex = start;\n      var match;\n\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.state.pos) {\n        ++this.state.curLine;\n        this.state.lineStart = match.index + match[0].length;\n      }\n\n      if (this.isLookahead) return;\n      this.pushComment(true, this.input.slice(start + 2, end), start, this.state.pos, startLoc, this.state.curPosition());\n    }\n  }, {\n    key: \"skipLineComment\",\n    value: function skipLineComment(startSkip) {\n      var start = this.state.pos;\n      var startLoc = this.state.curPosition();\n      var ch = this.input.charCodeAt(this.state.pos += startSkip);\n\n      if (this.state.pos < this.length) {\n        while (!isNewLine(ch) && ++this.state.pos < this.length) {\n          ch = this.input.charCodeAt(this.state.pos);\n        }\n      }\n\n      if (this.isLookahead) return;\n      this.pushComment(false, this.input.slice(start + startSkip, this.state.pos), start, this.state.pos, startLoc, this.state.curPosition());\n    }\n  }, {\n    key: \"skipSpace\",\n    value: function skipSpace() {\n      loop: while (this.state.pos < this.length) {\n        var ch = this.input.charCodeAt(this.state.pos);\n\n        switch (ch) {\n          case 32:\n          case 160:\n          case 9:\n            ++this.state.pos;\n            break;\n\n          case 13:\n            if (this.input.charCodeAt(this.state.pos + 1) === 10) {\n              ++this.state.pos;\n            }\n\n          case 10:\n          case 8232:\n          case 8233:\n            ++this.state.pos;\n            ++this.state.curLine;\n            this.state.lineStart = this.state.pos;\n            break;\n\n          case 47:\n            switch (this.input.charCodeAt(this.state.pos + 1)) {\n              case 42:\n                this.skipBlockComment();\n                break;\n\n              case 47:\n                this.skipLineComment(2);\n                break;\n\n              default:\n                break loop;\n            }\n\n            break;\n\n          default:\n            if (isWhitespace(ch)) {\n              ++this.state.pos;\n            } else {\n              break loop;\n            }\n\n        }\n      }\n    }\n  }, {\n    key: \"finishToken\",\n    value: function finishToken(type, val) {\n      this.state.end = this.state.pos;\n      this.state.endLoc = this.state.curPosition();\n      var prevType = this.state.type;\n      this.state.type = type;\n      this.state.value = val;\n      if (!this.isLookahead) this.updateContext(prevType);\n    }\n  }, {\n    key: \"readToken_numberSign\",\n    value: function readToken_numberSign() {\n      if (this.state.pos === 0 && this.readToken_interpreter()) {\n        return;\n      }\n\n      var nextPos = this.state.pos + 1;\n      var next = this.input.charCodeAt(nextPos);\n\n      if (next >= 48 && next <= 57) {\n        throw this.raise(this.state.pos, ErrorMessages.UnexpectedDigitAfterHash);\n      }\n\n      if (next === 123 || next === 91 && this.hasPlugin(\"recordAndTuple\")) {\n        this.expectPlugin(\"recordAndTuple\");\n\n        if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"hash\") {\n          throw this.raise(this.state.pos, next === 123 ? ErrorMessages.RecordExpressionHashIncorrectStartSyntaxType : ErrorMessages.TupleExpressionHashIncorrectStartSyntaxType);\n        }\n\n        if (next === 123) {\n          this.finishToken(types.braceHashL);\n        } else {\n          this.finishToken(types.bracketHashL);\n        }\n\n        this.state.pos += 2;\n      } else {\n        this.finishOp(types.hash, 1);\n      }\n    }\n  }, {\n    key: \"readToken_dot\",\n    value: function readToken_dot() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next >= 48 && next <= 57) {\n        this.readNumber(true);\n        return;\n      }\n\n      if (next === 46 && this.input.charCodeAt(this.state.pos + 2) === 46) {\n        this.state.pos += 3;\n        this.finishToken(types.ellipsis);\n      } else {\n        ++this.state.pos;\n        this.finishToken(types.dot);\n      }\n    }\n  }, {\n    key: \"readToken_slash\",\n    value: function readToken_slash() {\n      if (this.state.exprAllowed && !this.state.inType) {\n        ++this.state.pos;\n        this.readRegexp();\n        return;\n      }\n\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n      } else {\n        this.finishOp(types.slash, 1);\n      }\n    }\n  }, {\n    key: \"readToken_interpreter\",\n    value: function readToken_interpreter() {\n      if (this.state.pos !== 0 || this.length < 2) return false;\n      var ch = this.input.charCodeAt(this.state.pos + 1);\n      if (ch !== 33) return false;\n      var start = this.state.pos;\n      this.state.pos += 1;\n\n      while (!isNewLine(ch) && ++this.state.pos < this.length) {\n        ch = this.input.charCodeAt(this.state.pos);\n      }\n\n      var value = this.input.slice(start + 2, this.state.pos);\n      this.finishToken(types.interpreterDirective, value);\n      return true;\n    }\n  }, {\n    key: \"readToken_mult_modulo\",\n    value: function readToken_mult_modulo(code) {\n      var type = code === 42 ? types.star : types.modulo;\n      var width = 1;\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var exprAllowed = this.state.exprAllowed;\n\n      if (code === 42 && next === 42) {\n        width++;\n        next = this.input.charCodeAt(this.state.pos + 2);\n        type = types.exponent;\n      }\n\n      if (next === 61 && !exprAllowed) {\n        width++;\n        type = types.assign;\n      }\n\n      this.finishOp(type, width);\n    }\n  }, {\n    key: \"readToken_pipe_amp\",\n    value: function readToken_pipe_amp(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === code) {\n        if (this.input.charCodeAt(this.state.pos + 2) === 61) {\n          this.finishOp(types.assign, 3);\n        } else {\n          this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2);\n        }\n\n        return;\n      }\n\n      if (code === 124) {\n        if (next === 62) {\n          this.finishOp(types.pipeline, 2);\n          return;\n        }\n\n        if (this.hasPlugin(\"recordAndTuple\") && next === 125) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectEndSyntaxType);\n          }\n\n          this.finishOp(types.braceBarR, 2);\n          return;\n        }\n\n        if (this.hasPlugin(\"recordAndTuple\") && next === 93) {\n          if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n            throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectEndSyntaxType);\n          }\n\n          this.finishOp(types.bracketBarR, 2);\n          return;\n        }\n      }\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n        return;\n      }\n\n      this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1);\n    }\n  }, {\n    key: \"readToken_caret\",\n    value: function readToken_caret() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n      } else {\n        this.finishOp(types.bitwiseXOR, 1);\n      }\n    }\n  }, {\n    key: \"readToken_plus_min\",\n    value: function readToken_plus_min(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === code) {\n        if (next === 45 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 62 && (this.state.lastTokEnd === 0 || this.hasPrecedingLineBreak())) {\n          this.skipLineComment(3);\n          this.skipSpace();\n          this.nextToken();\n          return;\n        }\n\n        this.finishOp(types.incDec, 2);\n        return;\n      }\n\n      if (next === 61) {\n        this.finishOp(types.assign, 2);\n      } else {\n        this.finishOp(types.plusMin, 1);\n      }\n    }\n  }, {\n    key: \"readToken_lt_gt\",\n    value: function readToken_lt_gt(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var size = 1;\n\n      if (next === code) {\n        size = code === 62 && this.input.charCodeAt(this.state.pos + 2) === 62 ? 3 : 2;\n\n        if (this.input.charCodeAt(this.state.pos + size) === 61) {\n          this.finishOp(types.assign, size + 1);\n          return;\n        }\n\n        this.finishOp(types.bitShift, size);\n        return;\n      }\n\n      if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.state.pos + 2) === 45 && this.input.charCodeAt(this.state.pos + 3) === 45) {\n        this.skipLineComment(4);\n        this.skipSpace();\n        this.nextToken();\n        return;\n      }\n\n      if (next === 61) {\n        size = 2;\n      }\n\n      this.finishOp(types.relational, size);\n    }\n  }, {\n    key: \"readToken_eq_excl\",\n    value: function readToken_eq_excl(code) {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n\n      if (next === 61) {\n        this.finishOp(types.equality, this.input.charCodeAt(this.state.pos + 2) === 61 ? 3 : 2);\n        return;\n      }\n\n      if (code === 61 && next === 62) {\n        this.state.pos += 2;\n        this.finishToken(types.arrow);\n        return;\n      }\n\n      this.finishOp(code === 61 ? types.eq : types.bang, 1);\n    }\n  }, {\n    key: \"readToken_question\",\n    value: function readToken_question() {\n      var next = this.input.charCodeAt(this.state.pos + 1);\n      var next2 = this.input.charCodeAt(this.state.pos + 2);\n\n      if (next === 63) {\n        if (next2 === 61) {\n          this.finishOp(types.assign, 3);\n        } else {\n          this.finishOp(types.nullishCoalescing, 2);\n        }\n      } else if (next === 46 && !(next2 >= 48 && next2 <= 57)) {\n        this.state.pos += 2;\n        this.finishToken(types.questionDot);\n      } else {\n        ++this.state.pos;\n        this.finishToken(types.question);\n      }\n    }\n  }, {\n    key: \"getTokenFromCode\",\n    value: function getTokenFromCode(code) {\n      switch (code) {\n        case 46:\n          this.readToken_dot();\n          return;\n\n        case 40:\n          ++this.state.pos;\n          this.finishToken(types.parenL);\n          return;\n\n        case 41:\n          ++this.state.pos;\n          this.finishToken(types.parenR);\n          return;\n\n        case 59:\n          ++this.state.pos;\n          this.finishToken(types.semi);\n          return;\n\n        case 44:\n          ++this.state.pos;\n          this.finishToken(types.comma);\n          return;\n\n        case 91:\n          if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n            if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n              throw this.raise(this.state.pos, ErrorMessages.TupleExpressionBarIncorrectStartSyntaxType);\n            }\n\n            this.finishToken(types.bracketBarL);\n            this.state.pos += 2;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.bracketL);\n          }\n\n          return;\n\n        case 93:\n          ++this.state.pos;\n          this.finishToken(types.bracketR);\n          return;\n\n        case 123:\n          if (this.hasPlugin(\"recordAndTuple\") && this.input.charCodeAt(this.state.pos + 1) === 124) {\n            if (this.getPluginOption(\"recordAndTuple\", \"syntaxType\") !== \"bar\") {\n              throw this.raise(this.state.pos, ErrorMessages.RecordExpressionBarIncorrectStartSyntaxType);\n            }\n\n            this.finishToken(types.braceBarL);\n            this.state.pos += 2;\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.braceL);\n          }\n\n          return;\n\n        case 125:\n          ++this.state.pos;\n          this.finishToken(types.braceR);\n          return;\n\n        case 58:\n          if (this.hasPlugin(\"functionBind\") && this.input.charCodeAt(this.state.pos + 1) === 58) {\n            this.finishOp(types.doubleColon, 2);\n          } else {\n            ++this.state.pos;\n            this.finishToken(types.colon);\n          }\n\n          return;\n\n        case 63:\n          this.readToken_question();\n          return;\n\n        case 96:\n          ++this.state.pos;\n          this.finishToken(types.backQuote);\n          return;\n\n        case 48:\n          {\n            var next = this.input.charCodeAt(this.state.pos + 1);\n\n            if (next === 120 || next === 88) {\n              this.readRadixNumber(16);\n              return;\n            }\n\n            if (next === 111 || next === 79) {\n              this.readRadixNumber(8);\n              return;\n            }\n\n            if (next === 98 || next === 66) {\n              this.readRadixNumber(2);\n              return;\n            }\n          }\n\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n          this.readNumber(false);\n          return;\n\n        case 34:\n        case 39:\n          this.readString(code);\n          return;\n\n        case 47:\n          this.readToken_slash();\n          return;\n\n        case 37:\n        case 42:\n          this.readToken_mult_modulo(code);\n          return;\n\n        case 124:\n        case 38:\n          this.readToken_pipe_amp(code);\n          return;\n\n        case 94:\n          this.readToken_caret();\n          return;\n\n        case 43:\n        case 45:\n          this.readToken_plus_min(code);\n          return;\n\n        case 60:\n        case 62:\n          this.readToken_lt_gt(code);\n          return;\n\n        case 61:\n        case 33:\n          this.readToken_eq_excl(code);\n          return;\n\n        case 126:\n          this.finishOp(types.tilde, 1);\n          return;\n\n        case 64:\n          ++this.state.pos;\n          this.finishToken(types.at);\n          return;\n\n        case 35:\n          this.readToken_numberSign();\n          return;\n\n        case 92:\n          this.readWord();\n          return;\n\n        default:\n          if (isIdentifierStart(code)) {\n            this.readWord();\n            return;\n          }\n\n      }\n\n      throw this.raise(this.state.pos, ErrorMessages.InvalidOrUnexpectedToken, String.fromCodePoint(code));\n    }\n  }, {\n    key: \"finishOp\",\n    value: function finishOp(type, size) {\n      var str = this.input.slice(this.state.pos, this.state.pos + size);\n      this.state.pos += size;\n      this.finishToken(type, str);\n    }\n  }, {\n    key: \"readRegexp\",\n    value: function readRegexp() {\n      var start = this.state.pos;\n      var escaped, inClass;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n        }\n\n        var ch = this.input.charAt(this.state.pos);\n\n        if (lineBreak.test(ch)) {\n          throw this.raise(start, ErrorMessages.UnterminatedRegExp);\n        }\n\n        if (escaped) {\n          escaped = false;\n        } else {\n          if (ch === \"[\") {\n            inClass = true;\n          } else if (ch === \"]\" && inClass) {\n            inClass = false;\n          } else if (ch === \"/\" && !inClass) {\n            break;\n          }\n\n          escaped = ch === \"\\\\\";\n        }\n\n        ++this.state.pos;\n      }\n\n      var content = this.input.slice(start, this.state.pos);\n      ++this.state.pos;\n      var mods = \"\";\n\n      while (this.state.pos < this.length) {\n        var char = this.input[this.state.pos];\n        var charCode = this.input.codePointAt(this.state.pos);\n\n        if (VALID_REGEX_FLAGS.has(char)) {\n          if (mods.indexOf(char) > -1) {\n            this.raise(this.state.pos + 1, ErrorMessages.DuplicateRegExpFlags);\n          }\n        } else if (isIdentifierChar(charCode) || charCode === 92) {\n          this.raise(this.state.pos + 1, ErrorMessages.MalformedRegExpFlags);\n        } else {\n          break;\n        }\n\n        ++this.state.pos;\n        mods += char;\n      }\n\n      this.finishToken(types.regexp, {\n        pattern: content,\n        flags: mods\n      });\n    }\n  }, {\n    key: \"readInt\",\n    value: function readInt(radix, len, forceLen) {\n      var allowNumSeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var start = this.state.pos;\n      var forbiddenSiblings = radix === 16 ? forbiddenNumericSeparatorSiblings.hex : forbiddenNumericSeparatorSiblings.decBinOct;\n      var allowedSiblings = radix === 16 ? allowedNumericSeparatorSiblings.hex : radix === 10 ? allowedNumericSeparatorSiblings.dec : radix === 8 ? allowedNumericSeparatorSiblings.oct : allowedNumericSeparatorSiblings.bin;\n      var invalid = false;\n      var total = 0;\n\n      for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n        var code = this.input.charCodeAt(this.state.pos);\n        var val = void 0;\n\n        if (code === 95) {\n          var prev = this.input.charCodeAt(this.state.pos - 1);\n          var next = this.input.charCodeAt(this.state.pos + 1);\n\n          if (allowedSiblings.indexOf(next) === -1) {\n            this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n          } else if (forbiddenSiblings.indexOf(prev) > -1 || forbiddenSiblings.indexOf(next) > -1 || Number.isNaN(next)) {\n            this.raise(this.state.pos, ErrorMessages.UnexpectedNumericSeparator);\n          }\n\n          if (!allowNumSeparator) {\n            this.raise(this.state.pos, ErrorMessages.NumericSeparatorInEscapeSequence);\n          }\n\n          ++this.state.pos;\n          continue;\n        }\n\n        if (code >= 97) {\n          val = code - 97 + 10;\n        } else if (code >= 65) {\n          val = code - 65 + 10;\n        } else if (_isDigit(code)) {\n          val = code - 48;\n        } else {\n          val = Infinity;\n        }\n\n        if (val >= radix) {\n          if (this.options.errorRecovery && val <= 9) {\n            val = 0;\n            this.raise(this.state.start + i + 2, ErrorMessages.InvalidDigit, radix);\n          } else if (forceLen) {\n            val = 0;\n            invalid = true;\n          } else {\n            break;\n          }\n        }\n\n        ++this.state.pos;\n        total = total * radix + val;\n      }\n\n      if (this.state.pos === start || len != null && this.state.pos - start !== len || invalid) {\n        return null;\n      }\n\n      return total;\n    }\n  }, {\n    key: \"readRadixNumber\",\n    value: function readRadixNumber(radix) {\n      var start = this.state.pos;\n      var isBigInt = false;\n      this.state.pos += 2;\n      var val = this.readInt(radix);\n\n      if (val == null) {\n        this.raise(this.state.start + 2, ErrorMessages.InvalidDigit, radix);\n      }\n\n      var next = this.input.charCodeAt(this.state.pos);\n\n      if (next === 110) {\n        ++this.state.pos;\n        isBigInt = true;\n      } else if (next === 109) {\n        throw this.raise(start, ErrorMessages.InvalidDecimal);\n      }\n\n      if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n        throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n      }\n\n      if (isBigInt) {\n        var str = this.input.slice(start, this.state.pos).replace(/[_n]/g, \"\");\n        this.finishToken(types.bigint, str);\n        return;\n      }\n\n      this.finishToken(types.num, val);\n    }\n  }, {\n    key: \"readNumber\",\n    value: function readNumber(startsWithDot) {\n      var start = this.state.pos;\n      var isFloat = false;\n      var isBigInt = false;\n      var isDecimal = false;\n      var hasExponent = false;\n      var isOctal = false;\n\n      if (!startsWithDot && this.readInt(10) === null) {\n        this.raise(start, ErrorMessages.InvalidNumber);\n      }\n\n      var hasLeadingZero = this.state.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n\n      if (hasLeadingZero) {\n        var integer = this.input.slice(start, this.state.pos);\n\n        if (this.state.strict) {\n          this.raise(start, ErrorMessages.StrictOctalLiteral);\n        } else {\n          var underscorePos = integer.indexOf(\"_\");\n\n          if (underscorePos > 0) {\n            this.raise(underscorePos + start, ErrorMessages.ZeroDigitNumericSeparator);\n          }\n        }\n\n        isOctal = hasLeadingZero && !/[89]/.test(integer);\n      }\n\n      var next = this.input.charCodeAt(this.state.pos);\n\n      if (next === 46 && !isOctal) {\n        ++this.state.pos;\n        this.readInt(10);\n        isFloat = true;\n        next = this.input.charCodeAt(this.state.pos);\n      }\n\n      if ((next === 69 || next === 101) && !isOctal) {\n        next = this.input.charCodeAt(++this.state.pos);\n\n        if (next === 43 || next === 45) {\n          ++this.state.pos;\n        }\n\n        if (this.readInt(10) === null) {\n          this.raise(start, ErrorMessages.InvalidOrMissingExponent);\n        }\n\n        isFloat = true;\n        hasExponent = true;\n        next = this.input.charCodeAt(this.state.pos);\n      }\n\n      if (next === 110) {\n        if (isFloat || hasLeadingZero) {\n          this.raise(start, ErrorMessages.InvalidBigIntLiteral);\n        }\n\n        ++this.state.pos;\n        isBigInt = true;\n      }\n\n      if (next === 109) {\n        this.expectPlugin(\"decimal\", this.state.pos);\n\n        if (hasExponent || hasLeadingZero) {\n          this.raise(start, ErrorMessages.InvalidDecimal);\n        }\n\n        ++this.state.pos;\n        isDecimal = true;\n      }\n\n      if (isIdentifierStart(this.input.codePointAt(this.state.pos))) {\n        throw this.raise(this.state.pos, ErrorMessages.NumberIdentifier);\n      }\n\n      var str = this.input.slice(start, this.state.pos).replace(/[_mn]/g, \"\");\n\n      if (isBigInt) {\n        this.finishToken(types.bigint, str);\n        return;\n      }\n\n      if (isDecimal) {\n        this.finishToken(types.decimal, str);\n        return;\n      }\n\n      var val = isOctal ? parseInt(str, 8) : parseFloat(str);\n      this.finishToken(types.num, val);\n    }\n  }, {\n    key: \"readCodePoint\",\n    value: function readCodePoint(throwOnInvalid) {\n      var ch = this.input.charCodeAt(this.state.pos);\n      var code;\n\n      if (ch === 123) {\n        var codePos = ++this.state.pos;\n        code = this.readHexChar(this.input.indexOf(\"}\", this.state.pos) - this.state.pos, true, throwOnInvalid);\n        ++this.state.pos;\n\n        if (code !== null && code > 0x10ffff) {\n          if (throwOnInvalid) {\n            this.raise(codePos, ErrorMessages.InvalidCodePoint);\n          } else {\n            return null;\n          }\n        }\n      } else {\n        code = this.readHexChar(4, false, throwOnInvalid);\n      }\n\n      return code;\n    }\n  }, {\n    key: \"readString\",\n    value: function readString(quote) {\n      var out = \"\",\n          chunkStart = ++this.state.pos;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n        }\n\n        var ch = this.input.charCodeAt(this.state.pos);\n        if (ch === quote) break;\n\n        if (ch === 92) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          out += this.readEscapedChar(false);\n          chunkStart = this.state.pos;\n        } else if (ch === 8232 || ch === 8233) {\n          ++this.state.pos;\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedString);\n        } else {\n          ++this.state.pos;\n        }\n      }\n\n      out += this.input.slice(chunkStart, this.state.pos++);\n      this.finishToken(types.string, out);\n    }\n  }, {\n    key: \"readTmplToken\",\n    value: function readTmplToken() {\n      var out = \"\",\n          chunkStart = this.state.pos,\n          containsInvalid = false;\n\n      for (;;) {\n        if (this.state.pos >= this.length) {\n          throw this.raise(this.state.start, ErrorMessages.UnterminatedTemplate);\n        }\n\n        var ch = this.input.charCodeAt(this.state.pos);\n\n        if (ch === 96 || ch === 36 && this.input.charCodeAt(this.state.pos + 1) === 123) {\n          if (this.state.pos === this.state.start && this.match(types.template)) {\n            if (ch === 36) {\n              this.state.pos += 2;\n              this.finishToken(types.dollarBraceL);\n              return;\n            } else {\n              ++this.state.pos;\n              this.finishToken(types.backQuote);\n              return;\n            }\n          }\n\n          out += this.input.slice(chunkStart, this.state.pos);\n          this.finishToken(types.template, containsInvalid ? null : out);\n          return;\n        }\n\n        if (ch === 92) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          var escaped = this.readEscapedChar(true);\n\n          if (escaped === null) {\n            containsInvalid = true;\n          } else {\n            out += escaped;\n          }\n\n          chunkStart = this.state.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.state.pos);\n          ++this.state.pos;\n\n          switch (ch) {\n            case 13:\n              if (this.input.charCodeAt(this.state.pos) === 10) {\n                ++this.state.pos;\n              }\n\n            case 10:\n              out += \"\\n\";\n              break;\n\n            default:\n              out += String.fromCharCode(ch);\n              break;\n          }\n\n          ++this.state.curLine;\n          this.state.lineStart = this.state.pos;\n          chunkStart = this.state.pos;\n        } else {\n          ++this.state.pos;\n        }\n      }\n    }\n  }, {\n    key: \"readEscapedChar\",\n    value: function readEscapedChar(inTemplate) {\n      var throwOnInvalid = !inTemplate;\n      var ch = this.input.charCodeAt(++this.state.pos);\n      ++this.state.pos;\n\n      switch (ch) {\n        case 110:\n          return \"\\n\";\n\n        case 114:\n          return \"\\r\";\n\n        case 120:\n          {\n            var code = this.readHexChar(2, false, throwOnInvalid);\n            return code === null ? null : String.fromCharCode(code);\n          }\n\n        case 117:\n          {\n            var _code = this.readCodePoint(throwOnInvalid);\n\n            return _code === null ? null : String.fromCodePoint(_code);\n          }\n\n        case 116:\n          return \"\\t\";\n\n        case 98:\n          return \"\\b\";\n\n        case 118:\n          return \"\\x0B\";\n\n        case 102:\n          return \"\\f\";\n\n        case 13:\n          if (this.input.charCodeAt(this.state.pos) === 10) {\n            ++this.state.pos;\n          }\n\n        case 10:\n          this.state.lineStart = this.state.pos;\n          ++this.state.curLine;\n\n        case 8232:\n        case 8233:\n          return \"\";\n\n        case 56:\n        case 57:\n          if (inTemplate) {\n            return null;\n          } else if (this.state.strict) {\n            this.raise(this.state.pos - 1, ErrorMessages.StrictNumericEscape);\n          }\n\n        default:\n          if (ch >= 48 && ch <= 55) {\n            var codePos = this.state.pos - 1;\n            var match = this.input.substr(this.state.pos - 1, 3).match(/^[0-7]+/);\n            var octalStr = match[0];\n            var octal = parseInt(octalStr, 8);\n\n            if (octal > 255) {\n              octalStr = octalStr.slice(0, -1);\n              octal = parseInt(octalStr, 8);\n            }\n\n            this.state.pos += octalStr.length - 1;\n            var next = this.input.charCodeAt(this.state.pos);\n\n            if (octalStr !== \"0\" || next === 56 || next === 57) {\n              if (inTemplate) {\n                return null;\n              } else if (this.state.strict) {\n                this.raise(codePos, ErrorMessages.StrictNumericEscape);\n              } else {\n                this.state.octalPositions.push(codePos);\n              }\n            }\n\n            return String.fromCharCode(octal);\n          }\n\n          return String.fromCharCode(ch);\n      }\n    }\n  }, {\n    key: \"readHexChar\",\n    value: function readHexChar(len, forceLen, throwOnInvalid) {\n      var codePos = this.state.pos;\n      var n = this.readInt(16, len, forceLen, false);\n\n      if (n === null) {\n        if (throwOnInvalid) {\n          this.raise(codePos, ErrorMessages.InvalidEscapeSequence);\n        } else {\n          this.state.pos = codePos - 1;\n        }\n      }\n\n      return n;\n    }\n  }, {\n    key: \"readWord1\",\n    value: function readWord1() {\n      var word = \"\";\n      this.state.containsEsc = false;\n      var start = this.state.pos;\n      var chunkStart = this.state.pos;\n\n      while (this.state.pos < this.length) {\n        var ch = this.input.codePointAt(this.state.pos);\n\n        if (isIdentifierChar(ch)) {\n          this.state.pos += ch <= 0xffff ? 1 : 2;\n        } else if (this.state.isIterator && ch === 64) {\n          ++this.state.pos;\n        } else if (ch === 92) {\n          this.state.containsEsc = true;\n          word += this.input.slice(chunkStart, this.state.pos);\n          var escStart = this.state.pos;\n          var identifierCheck = this.state.pos === start ? isIdentifierStart : isIdentifierChar;\n\n          if (this.input.charCodeAt(++this.state.pos) !== 117) {\n            this.raise(this.state.pos, ErrorMessages.MissingUnicodeEscape);\n            continue;\n          }\n\n          ++this.state.pos;\n          var esc = this.readCodePoint(true);\n\n          if (esc !== null) {\n            if (!identifierCheck(esc)) {\n              this.raise(escStart, ErrorMessages.EscapedCharNotAnIdentifier);\n            }\n\n            word += String.fromCodePoint(esc);\n          }\n\n          chunkStart = this.state.pos;\n        } else {\n          break;\n        }\n      }\n\n      return word + this.input.slice(chunkStart, this.state.pos);\n    }\n  }, {\n    key: \"isIterator\",\n    value: function isIterator(word) {\n      return word === \"@@iterator\" || word === \"@@asyncIterator\";\n    }\n  }, {\n    key: \"readWord\",\n    value: function readWord() {\n      var word = this.readWord1();\n      var type = keywords.get(word) || types.name;\n\n      if (this.state.isIterator && (!this.isIterator(word) || !this.state.inType)) {\n        this.raise(this.state.pos, ErrorMessages.InvalidIdentifier, word);\n      }\n\n      this.finishToken(type, word);\n    }\n  }, {\n    key: \"checkKeywordEscapes\",\n    value: function checkKeywordEscapes() {\n      var kw = this.state.type.keyword;\n\n      if (kw && this.state.containsEsc) {\n        this.raise(this.state.start, ErrorMessages.InvalidEscapedReservedWord, kw);\n      }\n    }\n  }, {\n    key: \"braceIsBlock\",\n    value: function braceIsBlock(prevType) {\n      var parent = this.curContext();\n\n      if (parent === types$1.functionExpression || parent === types$1.functionStatement) {\n        return true;\n      }\n\n      if (prevType === types.colon && (parent === types$1.braceStatement || parent === types$1.braceExpression)) {\n        return !parent.isExpr;\n      }\n\n      if (prevType === types._return || prevType === types.name && this.state.exprAllowed) {\n        return this.hasPrecedingLineBreak();\n      }\n\n      if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow) {\n        return true;\n      }\n\n      if (prevType === types.braceL) {\n        return parent === types$1.braceStatement;\n      }\n\n      if (prevType === types._var || prevType === types._const || prevType === types.name) {\n        return false;\n      }\n\n      if (prevType === types.relational) {\n        return true;\n      }\n\n      return !this.state.exprAllowed;\n    }\n  }, {\n    key: \"updateContext\",\n    value: function updateContext(prevType) {\n      var type = this.state.type;\n      var update;\n\n      if (type.keyword && (prevType === types.dot || prevType === types.questionDot)) {\n        this.state.exprAllowed = false;\n      } else if (update = type.updateContext) {\n        update.call(this, prevType);\n      } else {\n        this.state.exprAllowed = type.beforeExpr;\n      }\n    }\n  }]);\n\n  return Tokenizer;\n}(ParserError);\n\nvar UtilParser = /*#__PURE__*/function (_Tokenizer) {\n  _inherits(UtilParser, _Tokenizer);\n\n  var _super12 = _createSuper(UtilParser);\n\n  function UtilParser() {\n    _classCallCheck(this, UtilParser);\n\n    return _super12.apply(this, arguments);\n  }\n\n  _createClass(UtilParser, [{\n    key: \"addExtra\",\n    value: function addExtra(node, key, val) {\n      if (!node) return;\n      var extra = node.extra = node.extra || {};\n      extra[key] = val;\n    }\n  }, {\n    key: \"isRelational\",\n    value: function isRelational(op) {\n      return this.match(types.relational) && this.state.value === op;\n    }\n  }, {\n    key: \"expectRelational\",\n    value: function expectRelational(op) {\n      if (this.isRelational(op)) {\n        this.next();\n      } else {\n        this.unexpected(null, types.relational);\n      }\n    }\n  }, {\n    key: \"isContextual\",\n    value: function isContextual(name) {\n      return this.match(types.name) && this.state.value === name && !this.state.containsEsc;\n    }\n  }, {\n    key: \"isUnparsedContextual\",\n    value: function isUnparsedContextual(nameStart, name) {\n      var nameEnd = nameStart + name.length;\n      return this.input.slice(nameStart, nameEnd) === name && (nameEnd === this.input.length || !isIdentifierChar(this.input.charCodeAt(nameEnd)));\n    }\n  }, {\n    key: \"isLookaheadContextual\",\n    value: function isLookaheadContextual(name) {\n      var next = this.nextTokenStart();\n      return this.isUnparsedContextual(next, name);\n    }\n  }, {\n    key: \"eatContextual\",\n    value: function eatContextual(name) {\n      return this.isContextual(name) && this.eat(types.name);\n    }\n  }, {\n    key: \"expectContextual\",\n    value: function expectContextual(name, message) {\n      if (!this.eatContextual(name)) this.unexpected(null, message);\n    }\n  }, {\n    key: \"canInsertSemicolon\",\n    value: function canInsertSemicolon() {\n      return this.match(types.eof) || this.match(types.braceR) || this.hasPrecedingLineBreak();\n    }\n  }, {\n    key: \"hasPrecedingLineBreak\",\n    value: function hasPrecedingLineBreak() {\n      return lineBreak.test(this.input.slice(this.state.lastTokEnd, this.state.start));\n    }\n  }, {\n    key: \"isLineTerminator\",\n    value: function isLineTerminator() {\n      return this.eat(types.semi) || this.canInsertSemicolon();\n    }\n  }, {\n    key: \"semicolon\",\n    value: function semicolon() {\n      if (!this.isLineTerminator()) this.unexpected(null, types.semi);\n    }\n  }, {\n    key: \"expect\",\n    value: function expect(type, pos) {\n      this.eat(type) || this.unexpected(pos, type);\n    }\n  }, {\n    key: \"assertNoSpace\",\n    value: function assertNoSpace() {\n      var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"Unexpected space.\";\n\n      if (this.state.start > this.state.lastTokEnd) {\n        this.raise(this.state.lastTokEnd, message);\n      }\n    }\n  }, {\n    key: \"unexpected\",\n    value: function unexpected(pos) {\n      var messageOrType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Unexpected token\";\n\n      if (typeof messageOrType !== \"string\") {\n        messageOrType = \"Unexpected token, expected \\\"\".concat(messageOrType.label, \"\\\"\");\n      }\n\n      throw this.raise(pos != null ? pos : this.state.start, messageOrType);\n    }\n  }, {\n    key: \"expectPlugin\",\n    value: function expectPlugin(name, pos) {\n      if (!this.hasPlugin(name)) {\n        throw this.raiseWithData(pos != null ? pos : this.state.start, {\n          missingPlugin: [name]\n        }, \"This experimental syntax requires enabling the parser plugin: '\".concat(name, \"'\"));\n      }\n\n      return true;\n    }\n  }, {\n    key: \"expectOnePlugin\",\n    value: function expectOnePlugin(names, pos) {\n      var _this39 = this;\n\n      if (!names.some(function (n) {\n        return _this39.hasPlugin(n);\n      })) {\n        throw this.raiseWithData(pos != null ? pos : this.state.start, {\n          missingPlugin: names\n        }, \"This experimental syntax requires enabling one of the following parser plugin(s): '\".concat(names.join(\", \"), \"'\"));\n      }\n    }\n  }, {\n    key: \"tryParse\",\n    value: function tryParse(fn) {\n      var oldState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.clone();\n      var abortSignal = {\n        node: null\n      };\n\n      try {\n        var node = fn(function () {\n          var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n          abortSignal.node = node;\n          throw abortSignal;\n        });\n\n        if (this.state.errors.length > oldState.errors.length) {\n          var failState = this.state;\n          this.state = oldState;\n          return {\n            node: node,\n            error: failState.errors[oldState.errors.length],\n            thrown: false,\n            aborted: false,\n            failState: failState\n          };\n        }\n\n        return {\n          node: node,\n          error: null,\n          thrown: false,\n          aborted: false,\n          failState: null\n        };\n      } catch (error) {\n        var _failState = this.state;\n        this.state = oldState;\n\n        if (error instanceof SyntaxError) {\n          return {\n            node: null,\n            error: error,\n            thrown: true,\n            aborted: false,\n            failState: _failState\n          };\n        }\n\n        if (error === abortSignal) {\n          return {\n            node: abortSignal.node,\n            error: null,\n            thrown: false,\n            aborted: true,\n            failState: _failState\n          };\n        }\n\n        throw error;\n      }\n    }\n  }, {\n    key: \"checkExpressionErrors\",\n    value: function checkExpressionErrors(refExpressionErrors, andThrow) {\n      if (!refExpressionErrors) return false;\n      var shorthandAssign = refExpressionErrors.shorthandAssign,\n          doubleProto = refExpressionErrors.doubleProto;\n      if (!andThrow) return shorthandAssign >= 0 || doubleProto >= 0;\n\n      if (shorthandAssign >= 0) {\n        this.unexpected(shorthandAssign);\n      }\n\n      if (doubleProto >= 0) {\n        this.raise(doubleProto, ErrorMessages.DuplicateProto);\n      }\n    }\n  }, {\n    key: \"isLiteralPropertyName\",\n    value: function isLiteralPropertyName() {\n      return this.match(types.name) || !!this.state.type.keyword || this.match(types.string) || this.match(types.num) || this.match(types.bigint) || this.match(types.decimal);\n    }\n  }]);\n\n  return UtilParser;\n}(Tokenizer);\n\nvar ExpressionErrors = function ExpressionErrors() {\n  _classCallCheck(this, ExpressionErrors);\n\n  this.shorthandAssign = -1;\n  this.doubleProto = -1;\n};\n\nvar Node = /*#__PURE__*/function () {\n  function Node(parser, pos, loc) {\n    _classCallCheck(this, Node);\n\n    this.type = void 0;\n    this.start = void 0;\n    this.end = void 0;\n    this.loc = void 0;\n    this.range = void 0;\n    this.leadingComments = void 0;\n    this.trailingComments = void 0;\n    this.innerComments = void 0;\n    this.extra = void 0;\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    this.loc = new SourceLocation(loc);\n    if (parser == null ? void 0 : parser.options.ranges) this.range = [pos, 0];\n    if (parser == null ? void 0 : parser.filename) this.loc.filename = parser.filename;\n  }\n\n  _createClass(Node, [{\n    key: \"__clone\",\n    value: function __clone() {\n      var newNode = new Node();\n      var keys = Object.keys(this);\n\n      for (var i = 0, length = keys.length; i < length; i++) {\n        var key = keys[i];\n\n        if (key !== \"leadingComments\" && key !== \"trailingComments\" && key !== \"innerComments\") {\n          newNode[key] = this[key];\n        }\n      }\n\n      return newNode;\n    }\n  }]);\n\n  return Node;\n}();\n\nvar NodeUtils = /*#__PURE__*/function (_UtilParser) {\n  _inherits(NodeUtils, _UtilParser);\n\n  var _super13 = _createSuper(NodeUtils);\n\n  function NodeUtils() {\n    _classCallCheck(this, NodeUtils);\n\n    return _super13.apply(this, arguments);\n  }\n\n  _createClass(NodeUtils, [{\n    key: \"startNode\",\n    value: function startNode() {\n      return new Node(this, this.state.start, this.state.startLoc);\n    }\n  }, {\n    key: \"startNodeAt\",\n    value: function startNodeAt(pos, loc) {\n      return new Node(this, pos, loc);\n    }\n  }, {\n    key: \"startNodeAtNode\",\n    value: function startNodeAtNode(type) {\n      return this.startNodeAt(type.start, type.loc.start);\n    }\n  }, {\n    key: \"finishNode\",\n    value: function finishNode(node, type) {\n      return this.finishNodeAt(node, type, this.state.lastTokEnd, this.state.lastTokEndLoc);\n    }\n  }, {\n    key: \"finishNodeAt\",\n    value: function finishNodeAt(node, type, pos, loc) {\n      node.type = type;\n      node.end = pos;\n      node.loc.end = loc;\n      if (this.options.ranges) node.range[1] = pos;\n      this.processComment(node);\n      return node;\n    }\n  }, {\n    key: \"resetStartLocation\",\n    value: function resetStartLocation(node, start, startLoc) {\n      node.start = start;\n      node.loc.start = startLoc;\n      if (this.options.ranges) node.range[0] = start;\n    }\n  }, {\n    key: \"resetEndLocation\",\n    value: function resetEndLocation(node) {\n      var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.state.lastTokEnd;\n      var endLoc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.state.lastTokEndLoc;\n      node.end = end;\n      node.loc.end = endLoc;\n      if (this.options.ranges) node.range[1] = end;\n    }\n  }, {\n    key: \"resetStartLocationFromNode\",\n    value: function resetStartLocationFromNode(node, locationNode) {\n      this.resetStartLocation(node, locationNode.start, locationNode.loc.start);\n    }\n  }]);\n\n  return NodeUtils;\n}(UtilParser);\n\nvar unwrapParenthesizedExpression = function unwrapParenthesizedExpression(node) {\n  return node.type === \"ParenthesizedExpression\" ? unwrapParenthesizedExpression(node.expression) : node;\n};\n\nvar LValParser = /*#__PURE__*/function (_NodeUtils) {\n  _inherits(LValParser, _NodeUtils);\n\n  var _super14 = _createSuper(LValParser);\n\n  function LValParser() {\n    _classCallCheck(this, LValParser);\n\n    return _super14.apply(this, arguments);\n  }\n\n  _createClass(LValParser, [{\n    key: \"toAssignable\",\n    value: function toAssignable(node) {\n      var isLHS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      var _node$extra, _node$extra3;\n\n      var parenthesized = undefined;\n\n      if (node.type === \"ParenthesizedExpression\" || ((_node$extra = node.extra) == null ? void 0 : _node$extra.parenthesized)) {\n        parenthesized = unwrapParenthesizedExpression(node);\n\n        if (isLHS) {\n          if (parenthesized.type === \"Identifier\") {\n            this.expressionScope.recordParenthesizedIdentifierError(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n          } else if (parenthesized.type !== \"MemberExpression\") {\n            this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n          }\n        } else {\n          this.raise(node.start, ErrorMessages.InvalidParenthesizedAssignment);\n        }\n      }\n\n      switch (node.type) {\n        case \"Identifier\":\n        case \"ObjectPattern\":\n        case \"ArrayPattern\":\n        case \"AssignmentPattern\":\n          break;\n\n        case \"ObjectExpression\":\n          node.type = \"ObjectPattern\";\n\n          for (var i = 0, length = node.properties.length, _last2 = length - 1; i < length; i++) {\n            var _node$extra2;\n\n            var prop = node.properties[i];\n            var isLast = i === _last2;\n            this.toAssignableObjectExpressionProp(prop, isLast, isLHS);\n\n            if (isLast && prop.type === \"RestElement\" && ((_node$extra2 = node.extra) == null ? void 0 : _node$extra2.trailingComma)) {\n              this.raiseRestNotLast(node.extra.trailingComma);\n            }\n          }\n\n          break;\n\n        case \"ObjectProperty\":\n          this.toAssignable(node.value, isLHS);\n          break;\n\n        case \"SpreadElement\":\n          {\n            this.checkToRestConversion(node);\n            node.type = \"RestElement\";\n            var arg = node.argument;\n            this.toAssignable(arg, isLHS);\n            break;\n          }\n\n        case \"ArrayExpression\":\n          node.type = \"ArrayPattern\";\n          this.toAssignableList(node.elements, (_node$extra3 = node.extra) == null ? void 0 : _node$extra3.trailingComma, isLHS);\n          break;\n\n        case \"AssignmentExpression\":\n          if (node.operator !== \"=\") {\n            this.raise(node.left.end, ErrorMessages.MissingEqInAssignment);\n          }\n\n          node.type = \"AssignmentPattern\";\n          delete node.operator;\n          this.toAssignable(node.left, isLHS);\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.toAssignable(parenthesized, isLHS);\n          break;\n      }\n\n      return node;\n    }\n  }, {\n    key: \"toAssignableObjectExpressionProp\",\n    value: function toAssignableObjectExpressionProp(prop, isLast, isLHS) {\n      if (prop.type === \"ObjectMethod\") {\n        var error = prop.kind === \"get\" || prop.kind === \"set\" ? ErrorMessages.PatternHasAccessor : ErrorMessages.PatternHasMethod;\n        this.raise(prop.key.start, error);\n      } else if (prop.type === \"SpreadElement\" && !isLast) {\n        this.raiseRestNotLast(prop.start);\n      } else {\n        this.toAssignable(prop, isLHS);\n      }\n    }\n  }, {\n    key: \"toAssignableList\",\n    value: function toAssignableList(exprList, trailingCommaPos, isLHS) {\n      var end = exprList.length;\n\n      if (end) {\n        var _last3 = exprList[end - 1];\n\n        if ((_last3 == null ? void 0 : _last3.type) === \"RestElement\") {\n          --end;\n        } else if ((_last3 == null ? void 0 : _last3.type) === \"SpreadElement\") {\n          _last3.type = \"RestElement\";\n          var arg = _last3.argument;\n          this.toAssignable(arg, isLHS);\n          arg = unwrapParenthesizedExpression(arg);\n\n          if (arg.type !== \"Identifier\" && arg.type !== \"MemberExpression\" && arg.type !== \"ArrayPattern\" && arg.type !== \"ObjectPattern\") {\n            this.unexpected(arg.start);\n          }\n\n          if (trailingCommaPos) {\n            this.raiseTrailingCommaAfterRest(trailingCommaPos);\n          }\n\n          --end;\n        }\n      }\n\n      for (var i = 0; i < end; i++) {\n        var elt = exprList[i];\n\n        if (elt) {\n          this.toAssignable(elt, isLHS);\n\n          if (elt.type === \"RestElement\") {\n            this.raiseRestNotLast(elt.start);\n          }\n        }\n      }\n\n      return exprList;\n    }\n  }, {\n    key: \"toReferencedList\",\n    value: function toReferencedList(exprList, isParenthesizedExpr) {\n      return exprList;\n    }\n  }, {\n    key: \"toReferencedListDeep\",\n    value: function toReferencedListDeep(exprList, isParenthesizedExpr) {\n      this.toReferencedList(exprList, isParenthesizedExpr);\n\n      for (var _i = 0; _i < exprList.length; _i++) {\n        var expr = exprList[_i];\n\n        if ((expr == null ? void 0 : expr.type) === \"ArrayExpression\") {\n          this.toReferencedListDeep(expr.elements);\n        }\n      }\n    }\n  }, {\n    key: \"parseSpread\",\n    value: function parseSpread(refExpressionErrors, refNeedsArrowPos) {\n      var node = this.startNode();\n      this.next();\n      node.argument = this.parseMaybeAssignAllowIn(refExpressionErrors, undefined, refNeedsArrowPos);\n      return this.finishNode(node, \"SpreadElement\");\n    }\n  }, {\n    key: \"parseRestBinding\",\n    value: function parseRestBinding() {\n      var node = this.startNode();\n      this.next();\n      node.argument = this.parseBindingAtom();\n      return this.finishNode(node, \"RestElement\");\n    }\n  }, {\n    key: \"parseBindingAtom\",\n    value: function parseBindingAtom() {\n      switch (this.state.type) {\n        case types.bracketL:\n          {\n            var node = this.startNode();\n            this.next();\n            node.elements = this.parseBindingList(types.bracketR, 93, true);\n            return this.finishNode(node, \"ArrayPattern\");\n          }\n\n        case types.braceL:\n          return this.parseObjectLike(types.braceR, true);\n      }\n\n      return this.parseIdentifier();\n    }\n  }, {\n    key: \"parseBindingList\",\n    value: function parseBindingList(close, closeCharCode, allowEmpty, allowModifiers) {\n      var elts = [];\n      var first = true;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n        }\n\n        if (allowEmpty && this.match(types.comma)) {\n          elts.push(null);\n        } else if (this.eat(close)) {\n          break;\n        } else if (this.match(types.ellipsis)) {\n          elts.push(this.parseAssignableListItemTypes(this.parseRestBinding()));\n          this.checkCommaAfterRest(closeCharCode);\n          this.expect(close);\n          break;\n        } else {\n          var decorators = [];\n\n          if (this.match(types.at) && this.hasPlugin(\"decorators\")) {\n            this.raise(this.state.start, ErrorMessages.UnsupportedParameterDecorator);\n          }\n\n          while (this.match(types.at)) {\n            decorators.push(this.parseDecorator());\n          }\n\n          elts.push(this.parseAssignableListItem(allowModifiers, decorators));\n        }\n      }\n\n      return elts;\n    }\n  }, {\n    key: \"parseAssignableListItem\",\n    value: function parseAssignableListItem(allowModifiers, decorators) {\n      var left = this.parseMaybeDefault();\n      this.parseAssignableListItemTypes(left);\n      var elt = this.parseMaybeDefault(left.start, left.loc.start, left);\n\n      if (decorators.length) {\n        left.decorators = decorators;\n      }\n\n      return elt;\n    }\n  }, {\n    key: \"parseAssignableListItemTypes\",\n    value: function parseAssignableListItemTypes(param) {\n      return param;\n    }\n  }, {\n    key: \"parseMaybeDefault\",\n    value: function parseMaybeDefault(startPos, startLoc, left) {\n      var _startLoc, _startPos, _left;\n\n      startLoc = (_startLoc = startLoc) != null ? _startLoc : this.state.startLoc;\n      startPos = (_startPos = startPos) != null ? _startPos : this.state.start;\n      left = (_left = left) != null ? _left : this.parseBindingAtom();\n      if (!this.eat(types.eq)) return left;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.left = left;\n      node.right = this.parseMaybeAssignAllowIn();\n      return this.finishNode(node, \"AssignmentPattern\");\n    }\n  }, {\n    key: \"checkLVal\",\n    value: function checkLVal(expr, contextDescription) {\n      var bindingType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : BIND_NONE;\n      var checkClashes = arguments.length > 3 ? arguments[3] : undefined;\n      var disallowLetBinding = arguments.length > 4 ? arguments[4] : undefined;\n      var strictModeChanged = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n\n      switch (expr.type) {\n        case \"Identifier\":\n          {\n            var name = expr.name;\n\n            if (this.state.strict && (strictModeChanged ? isStrictBindReservedWord(name, this.inModule) : isStrictBindOnlyReservedWord(name))) {\n              this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.StrictEvalArguments : ErrorMessages.StrictEvalArgumentsBinding, name);\n            }\n\n            if (checkClashes) {\n              if (checkClashes.has(name)) {\n                this.raise(expr.start, ErrorMessages.ParamDupe);\n              } else {\n                checkClashes.add(name);\n              }\n            }\n\n            if (disallowLetBinding && name === \"let\") {\n              this.raise(expr.start, ErrorMessages.LetInLexicalBinding);\n            }\n\n            if (!(bindingType & BIND_NONE)) {\n              this.scope.declareName(name, bindingType, expr.start);\n            }\n\n            break;\n          }\n\n        case \"MemberExpression\":\n          if (bindingType !== BIND_NONE) {\n            this.raise(expr.start, ErrorMessages.InvalidPropertyBindingPattern);\n          }\n\n          break;\n\n        case \"ObjectPattern\":\n          for (var _i2 = 0, _expr$properties = expr.properties; _i2 < _expr$properties.length; _i2++) {\n            var prop = _expr$properties[_i2];\n            if (prop.type === \"ObjectProperty\") prop = prop.value;else if (prop.type === \"ObjectMethod\") continue;\n            this.checkLVal(prop, \"object destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n          }\n\n          break;\n\n        case \"ArrayPattern\":\n          for (var _i3 = 0, _expr$elements = expr.elements; _i3 < _expr$elements.length; _i3++) {\n            var elem = _expr$elements[_i3];\n\n            if (elem) {\n              this.checkLVal(elem, \"array destructuring pattern\", bindingType, checkClashes, disallowLetBinding);\n            }\n          }\n\n          break;\n\n        case \"AssignmentPattern\":\n          this.checkLVal(expr.left, \"assignment pattern\", bindingType, checkClashes);\n          break;\n\n        case \"RestElement\":\n          this.checkLVal(expr.argument, \"rest element\", bindingType, checkClashes);\n          break;\n\n        case \"ParenthesizedExpression\":\n          this.checkLVal(expr.expression, \"parenthesized expression\", bindingType, checkClashes);\n          break;\n\n        default:\n          {\n            this.raise(expr.start, bindingType === BIND_NONE ? ErrorMessages.InvalidLhs : ErrorMessages.InvalidLhsBinding, contextDescription);\n          }\n      }\n    }\n  }, {\n    key: \"checkToRestConversion\",\n    value: function checkToRestConversion(node) {\n      if (node.argument.type !== \"Identifier\" && node.argument.type !== \"MemberExpression\") {\n        this.raise(node.argument.start, ErrorMessages.InvalidRestAssignmentPattern);\n      }\n    }\n  }, {\n    key: \"checkCommaAfterRest\",\n    value: function checkCommaAfterRest(close) {\n      if (this.match(types.comma)) {\n        if (this.lookaheadCharCode() === close) {\n          this.raiseTrailingCommaAfterRest(this.state.start);\n        } else {\n          this.raiseRestNotLast(this.state.start);\n        }\n      }\n    }\n  }, {\n    key: \"raiseRestNotLast\",\n    value: function raiseRestNotLast(pos) {\n      throw this.raise(pos, ErrorMessages.ElementAfterRest);\n    }\n  }, {\n    key: \"raiseTrailingCommaAfterRest\",\n    value: function raiseTrailingCommaAfterRest(pos) {\n      this.raise(pos, ErrorMessages.RestTrailingComma);\n    }\n  }]);\n\n  return LValParser;\n}(NodeUtils);\n\nvar kExpression = 0,\n    kMaybeArrowParameterDeclaration = 1,\n    kMaybeAsyncArrowParameterDeclaration = 2,\n    kParameterDeclaration = 3;\n\nvar ExpressionScope = /*#__PURE__*/function () {\n  function ExpressionScope() {\n    var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : kExpression;\n\n    _classCallCheck(this, ExpressionScope);\n\n    this.type = void 0;\n    this.type = type;\n  }\n\n  _createClass(ExpressionScope, [{\n    key: \"canBeArrowParameterDeclaration\",\n    value: function canBeArrowParameterDeclaration() {\n      return this.type === kMaybeAsyncArrowParameterDeclaration || this.type === kMaybeArrowParameterDeclaration;\n    }\n  }, {\n    key: \"isCertainlyParameterDeclaration\",\n    value: function isCertainlyParameterDeclaration() {\n      return this.type === kParameterDeclaration;\n    }\n  }]);\n\n  return ExpressionScope;\n}();\n\nvar ArrowHeadParsingScope = /*#__PURE__*/function (_ExpressionScope) {\n  _inherits(ArrowHeadParsingScope, _ExpressionScope);\n\n  var _super15 = _createSuper(ArrowHeadParsingScope);\n\n  function ArrowHeadParsingScope(type) {\n    var _this40;\n\n    _classCallCheck(this, ArrowHeadParsingScope);\n\n    _this40 = _super15.call(this, type);\n    _this40.errors = new Map();\n    return _this40;\n  }\n\n  _createClass(ArrowHeadParsingScope, [{\n    key: \"recordDeclarationError\",\n    value: function recordDeclarationError(pos, message) {\n      this.errors.set(pos, message);\n    }\n  }, {\n    key: \"clearDeclarationError\",\n    value: function clearDeclarationError(pos) {\n      this.errors.delete(pos);\n    }\n  }, {\n    key: \"iterateErrors\",\n    value: function iterateErrors(iterator) {\n      this.errors.forEach(iterator);\n    }\n  }]);\n\n  return ArrowHeadParsingScope;\n}(ExpressionScope);\n\nvar ExpressionScopeHandler = /*#__PURE__*/function () {\n  function ExpressionScopeHandler(raise) {\n    _classCallCheck(this, ExpressionScopeHandler);\n\n    this.stack = [new ExpressionScope()];\n    this.raise = raise;\n  }\n\n  _createClass(ExpressionScopeHandler, [{\n    key: \"enter\",\n    value: function enter(scope) {\n      this.stack.push(scope);\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      this.stack.pop();\n    }\n  }, {\n    key: \"recordParameterInitializerError\",\n    value: function recordParameterInitializerError(pos, message) {\n      var stack = this.stack;\n      var i = stack.length - 1;\n      var scope = stack[i];\n\n      while (!scope.isCertainlyParameterDeclaration()) {\n        if (scope.canBeArrowParameterDeclaration()) {\n          scope.recordDeclarationError(pos, message);\n        } else {\n          return;\n        }\n\n        scope = stack[--i];\n      }\n\n      this.raise(pos, message);\n    }\n  }, {\n    key: \"recordParenthesizedIdentifierError\",\n    value: function recordParenthesizedIdentifierError(pos, message) {\n      var stack = this.stack;\n      var scope = stack[stack.length - 1];\n\n      if (scope.isCertainlyParameterDeclaration()) {\n        this.raise(pos, message);\n      } else if (scope.canBeArrowParameterDeclaration()) {\n        scope.recordDeclarationError(pos, message);\n      } else {\n        return;\n      }\n    }\n  }, {\n    key: \"recordAsyncArrowParametersError\",\n    value: function recordAsyncArrowParametersError(pos, message) {\n      var stack = this.stack;\n      var i = stack.length - 1;\n      var scope = stack[i];\n\n      while (scope.canBeArrowParameterDeclaration()) {\n        if (scope.type === kMaybeAsyncArrowParameterDeclaration) {\n          scope.recordDeclarationError(pos, message);\n        }\n\n        scope = stack[--i];\n      }\n    }\n  }, {\n    key: \"validateAsPattern\",\n    value: function validateAsPattern() {\n      var _this41 = this;\n\n      var stack = this.stack;\n      var currentScope = stack[stack.length - 1];\n      if (!currentScope.canBeArrowParameterDeclaration()) return;\n      currentScope.iterateErrors(function (message, pos) {\n        _this41.raise(pos, message);\n\n        var i = stack.length - 2;\n        var scope = stack[i];\n\n        while (scope.canBeArrowParameterDeclaration()) {\n          scope.clearDeclarationError(pos);\n          scope = stack[--i];\n        }\n      });\n    }\n  }]);\n\n  return ExpressionScopeHandler;\n}();\n\nfunction newParameterDeclarationScope() {\n  return new ExpressionScope(kParameterDeclaration);\n}\n\nfunction newArrowHeadScope() {\n  return new ArrowHeadParsingScope(kMaybeArrowParameterDeclaration);\n}\n\nfunction newAsyncArrowScope() {\n  return new ArrowHeadParsingScope(kMaybeAsyncArrowParameterDeclaration);\n}\n\nfunction newExpressionScope() {\n  return new ExpressionScope();\n}\n\nvar ExpressionParser = /*#__PURE__*/function (_LValParser) {\n  _inherits(ExpressionParser, _LValParser);\n\n  var _super16 = _createSuper(ExpressionParser);\n\n  function ExpressionParser() {\n    _classCallCheck(this, ExpressionParser);\n\n    return _super16.apply(this, arguments);\n  }\n\n  _createClass(ExpressionParser, [{\n    key: \"checkProto\",\n    value: function checkProto(prop, isRecord, protoRef, refExpressionErrors) {\n      if (prop.type === \"SpreadElement\" || prop.type === \"ObjectMethod\" || prop.computed || prop.shorthand) {\n        return;\n      }\n\n      var key = prop.key;\n      var name = key.type === \"Identifier\" ? key.name : key.value;\n\n      if (name === \"__proto__\") {\n        if (isRecord) {\n          this.raise(key.start, ErrorMessages.RecordNoProto);\n          return;\n        }\n\n        if (protoRef.used) {\n          if (refExpressionErrors) {\n            if (refExpressionErrors.doubleProto === -1) {\n              refExpressionErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raise(key.start, ErrorMessages.DuplicateProto);\n          }\n        }\n\n        protoRef.used = true;\n      }\n    }\n  }, {\n    key: \"shouldExitDescending\",\n    value: function shouldExitDescending(expr, potentialArrowAt) {\n      return expr.type === \"ArrowFunctionExpression\" && expr.start === potentialArrowAt;\n    }\n  }, {\n    key: \"getExpression\",\n    value: function getExpression() {\n      var paramFlags = PARAM;\n\n      if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n        paramFlags |= PARAM_AWAIT;\n      }\n\n      this.scope.enter(SCOPE_PROGRAM);\n      this.prodParam.enter(paramFlags);\n      this.nextToken();\n      var expr = this.parseExpression();\n\n      if (!this.match(types.eof)) {\n        this.unexpected();\n      }\n\n      expr.comments = this.state.comments;\n      expr.errors = this.state.errors;\n      return expr;\n    }\n  }, {\n    key: \"parseExpression\",\n    value: function parseExpression(disallowIn, refExpressionErrors) {\n      var _this42 = this;\n\n      if (disallowIn) {\n        return this.disallowInAnd(function () {\n          return _this42.parseExpressionBase(refExpressionErrors);\n        });\n      }\n\n      return this.allowInAnd(function () {\n        return _this42.parseExpressionBase(refExpressionErrors);\n      });\n    }\n  }, {\n    key: \"parseExpressionBase\",\n    value: function parseExpressionBase(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var expr = this.parseMaybeAssign(refExpressionErrors);\n\n      if (this.match(types.comma)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.expressions = [expr];\n\n        while (this.eat(types.comma)) {\n          node.expressions.push(this.parseMaybeAssign(refExpressionErrors));\n        }\n\n        this.toReferencedList(node.expressions);\n        return this.finishNode(node, \"SequenceExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseMaybeAssignDisallowIn\",\n    value: function parseMaybeAssignDisallowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _this43 = this;\n\n      return this.disallowInAnd(function () {\n        return _this43.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n      });\n    }\n  }, {\n    key: \"parseMaybeAssignAllowIn\",\n    value: function parseMaybeAssignAllowIn(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var _this44 = this;\n\n      return this.allowInAnd(function () {\n        return _this44.parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos);\n      });\n    }\n  }, {\n    key: \"parseMaybeAssign\",\n    value: function parseMaybeAssign(refExpressionErrors, afterLeftParse, refNeedsArrowPos) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n\n      if (this.isContextual(\"yield\")) {\n        if (this.prodParam.hasYield) {\n          this.state.exprAllowed = true;\n\n          var _left2 = this.parseYield();\n\n          if (afterLeftParse) {\n            _left2 = afterLeftParse.call(this, _left2, startPos, startLoc);\n          }\n\n          return _left2;\n        }\n      }\n\n      var ownExpressionErrors;\n\n      if (refExpressionErrors) {\n        ownExpressionErrors = false;\n      } else {\n        refExpressionErrors = new ExpressionErrors();\n        ownExpressionErrors = true;\n      }\n\n      if (this.match(types.parenL) || this.match(types.name)) {\n        this.state.potentialArrowAt = this.state.start;\n      }\n\n      var left = this.parseMaybeConditional(refExpressionErrors, refNeedsArrowPos);\n\n      if (afterLeftParse) {\n        left = afterLeftParse.call(this, left, startPos, startLoc);\n      }\n\n      if (this.state.type.isAssign) {\n        var node = this.startNodeAt(startPos, startLoc);\n        var operator = this.state.value;\n        node.operator = operator;\n\n        if (this.match(types.eq)) {\n          node.left = this.toAssignable(left, true);\n          refExpressionErrors.doubleProto = -1;\n        } else {\n          node.left = left;\n        }\n\n        if (refExpressionErrors.shorthandAssign >= node.left.start) {\n          refExpressionErrors.shorthandAssign = -1;\n        }\n\n        this.checkLVal(left, \"assignment expression\");\n        this.next();\n        node.right = this.parseMaybeAssign();\n        return this.finishNode(node, \"AssignmentExpression\");\n      } else if (ownExpressionErrors) {\n        this.checkExpressionErrors(refExpressionErrors, true);\n      }\n\n      return left;\n    }\n  }, {\n    key: \"parseMaybeConditional\",\n    value: function parseMaybeConditional(refExpressionErrors, refNeedsArrowPos) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseExprOps(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseConditional(expr, startPos, startLoc, refNeedsArrowPos);\n    }\n  }, {\n    key: \"parseConditional\",\n    value: function parseConditional(expr, startPos, startLoc, refNeedsArrowPos) {\n      if (this.eat(types.question)) {\n        var node = this.startNodeAt(startPos, startLoc);\n        node.test = expr;\n        node.consequent = this.parseMaybeAssignAllowIn();\n        this.expect(types.colon);\n        node.alternate = this.parseMaybeAssign();\n        return this.finishNode(node, \"ConditionalExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExprOps\",\n    value: function parseExprOps(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseMaybeUnary(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseExprOp(expr, startPos, startLoc, -1);\n    }\n  }, {\n    key: \"parseExprOp\",\n    value: function parseExprOp(left, leftStartPos, leftStartLoc, minPrec) {\n      var prec = this.state.type.binop;\n\n      if (prec != null && (this.prodParam.hasIn || !this.match(types._in))) {\n        if (prec > minPrec) {\n          var op = this.state.type;\n\n          if (op === types.pipeline) {\n            this.expectPlugin(\"pipelineOperator\");\n\n            if (this.state.inFSharpPipelineDirectBody) {\n              return left;\n            }\n\n            this.state.inPipeline = true;\n            this.checkPipelineAtInfixOperator(left, leftStartPos);\n          }\n\n          var node = this.startNodeAt(leftStartPos, leftStartLoc);\n          node.left = left;\n          node.operator = this.state.value;\n\n          if (op === types.exponent && left.type === \"UnaryExpression\" && (this.options.createParenthesizedExpressions || !(left.extra && left.extra.parenthesized))) {\n            this.raise(left.argument.start, ErrorMessages.UnexpectedTokenUnaryExponentiation);\n          }\n\n          var logical = op === types.logicalOR || op === types.logicalAND;\n          var coalesce = op === types.nullishCoalescing;\n\n          if (coalesce) {\n            prec = types.logicalAND.binop;\n          }\n\n          this.next();\n\n          if (op === types.pipeline && this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"minimal\") {\n            if (this.match(types.name) && this.state.value === \"await\" && this.prodParam.hasAwait) {\n              throw this.raise(this.state.start, ErrorMessages.UnexpectedAwaitAfterPipelineBody);\n            }\n          }\n\n          node.right = this.parseExprOpRightExpr(op, prec);\n          this.finishNode(node, logical || coalesce ? \"LogicalExpression\" : \"BinaryExpression\");\n          var nextOp = this.state.type;\n\n          if (coalesce && (nextOp === types.logicalOR || nextOp === types.logicalAND) || logical && nextOp === types.nullishCoalescing) {\n            throw this.raise(this.state.start, ErrorMessages.MixingCoalesceWithLogical);\n          }\n\n          return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec);\n        }\n      }\n\n      return left;\n    }\n  }, {\n    key: \"parseExprOpRightExpr\",\n    value: function parseExprOpRightExpr(op, prec) {\n      var _this45 = this;\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n\n      switch (op) {\n        case types.pipeline:\n          switch (this.getPluginOption(\"pipelineOperator\", \"proposal\")) {\n            case \"smart\":\n              return this.withTopicPermittingContext(function () {\n                return _this45.parseSmartPipelineBody(_this45.parseExprOpBaseRightExpr(op, prec), startPos, startLoc);\n              });\n\n            case \"fsharp\":\n              return this.withSoloAwaitPermittingContext(function () {\n                return _this45.parseFSharpPipelineBody(prec);\n              });\n          }\n\n        default:\n          return this.parseExprOpBaseRightExpr(op, prec);\n      }\n    }\n  }, {\n    key: \"parseExprOpBaseRightExpr\",\n    value: function parseExprOpBaseRightExpr(op, prec) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      return this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, op.rightAssociative ? prec - 1 : prec);\n    }\n  }, {\n    key: \"parseMaybeUnary\",\n    value: function parseMaybeUnary(refExpressionErrors) {\n      if (this.isContextual(\"await\") && this.isAwaitAllowed()) {\n        return this.parseAwait();\n      }\n\n      var update = this.match(types.incDec);\n      var node = this.startNode();\n\n      if (this.state.type.prefix) {\n        node.operator = this.state.value;\n        node.prefix = true;\n\n        if (this.match(types._throw)) {\n          this.expectPlugin(\"throwExpressions\");\n        }\n\n        var isDelete = this.match(types._delete);\n        this.next();\n        node.argument = this.parseMaybeUnary();\n        this.checkExpressionErrors(refExpressionErrors, true);\n\n        if (this.state.strict && isDelete) {\n          var arg = node.argument;\n\n          if (arg.type === \"Identifier\") {\n            this.raise(node.start, ErrorMessages.StrictDelete);\n          } else if ((arg.type === \"MemberExpression\" || arg.type === \"OptionalMemberExpression\") && arg.property.type === \"PrivateName\") {\n            this.raise(node.start, ErrorMessages.DeletePrivateField);\n          }\n        }\n\n        if (!update) {\n          return this.finishNode(node, \"UnaryExpression\");\n        }\n      }\n\n      return this.parseUpdate(node, update, refExpressionErrors);\n    }\n  }, {\n    key: \"parseUpdate\",\n    value: function parseUpdate(node, update, refExpressionErrors) {\n      if (update) {\n        this.checkLVal(node.argument, \"prefix operation\");\n        return this.finishNode(node, \"UpdateExpression\");\n      }\n\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var expr = this.parseExprSubscripts(refExpressionErrors);\n      if (this.checkExpressionErrors(refExpressionErrors, false)) return expr;\n\n      while (this.state.type.postfix && !this.canInsertSemicolon()) {\n        var _node11 = this.startNodeAt(startPos, startLoc);\n\n        _node11.operator = this.state.value;\n        _node11.prefix = false;\n        _node11.argument = expr;\n        this.checkLVal(expr, \"postfix operation\");\n        this.next();\n        expr = this.finishNode(_node11, \"UpdateExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseExprSubscripts\",\n    value: function parseExprSubscripts(refExpressionErrors) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var potentialArrowAt = this.state.potentialArrowAt;\n      var expr = this.parseExprAtom(refExpressionErrors);\n\n      if (this.shouldExitDescending(expr, potentialArrowAt)) {\n        return expr;\n      }\n\n      return this.parseSubscripts(expr, startPos, startLoc);\n    }\n  }, {\n    key: \"parseSubscripts\",\n    value: function parseSubscripts(base, startPos, startLoc, noCalls) {\n      var state = {\n        optionalChainMember: false,\n        maybeAsyncArrow: this.atPossibleAsyncArrow(base),\n        stop: false\n      };\n\n      do {\n        base = this.parseSubscript(base, startPos, startLoc, noCalls, state);\n        state.maybeAsyncArrow = false;\n      } while (!state.stop);\n\n      return base;\n    }\n  }, {\n    key: \"parseSubscript\",\n    value: function parseSubscript(base, startPos, startLoc, noCalls, state) {\n      if (!noCalls && this.eat(types.doubleColon)) {\n        return this.parseBind(base, startPos, startLoc, noCalls, state);\n      } else if (this.match(types.backQuote)) {\n        return this.parseTaggedTemplateExpression(base, startPos, startLoc, state);\n      }\n\n      var optional = false;\n\n      if (this.match(types.questionDot)) {\n        state.optionalChainMember = optional = true;\n\n        if (noCalls && this.lookaheadCharCode() === 40) {\n          state.stop = true;\n          return base;\n        }\n\n        this.next();\n      }\n\n      if (!noCalls && this.match(types.parenL)) {\n        return this.parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional);\n      } else if (optional || this.match(types.bracketL) || this.eat(types.dot)) {\n        return this.parseMember(base, startPos, startLoc, state, optional);\n      } else {\n        state.stop = true;\n        return base;\n      }\n    }\n  }, {\n    key: \"parseMember\",\n    value: function parseMember(base, startPos, startLoc, state, optional) {\n      var node = this.startNodeAt(startPos, startLoc);\n      var computed = this.eat(types.bracketL);\n      node.object = base;\n      node.computed = computed;\n      var property = computed ? this.parseExpression() : this.parseMaybePrivateName(true);\n\n      if (property.type === \"PrivateName\") {\n        if (node.object.type === \"Super\") {\n          this.raise(startPos, ErrorMessages.SuperPrivateField);\n        }\n\n        this.classScope.usePrivateName(property.id.name, property.start);\n      }\n\n      node.property = property;\n\n      if (computed) {\n        this.expect(types.bracketR);\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n        return this.finishNode(node, \"OptionalMemberExpression\");\n      } else {\n        return this.finishNode(node, \"MemberExpression\");\n      }\n    }\n  }, {\n    key: \"parseBind\",\n    value: function parseBind(base, startPos, startLoc, noCalls, state) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.callee = this.parseNoCallExpr();\n      state.stop = true;\n      return this.parseSubscripts(this.finishNode(node, \"BindExpression\"), startPos, startLoc, noCalls);\n    }\n  }, {\n    key: \"parseCoverCallAndAsyncArrowHead\",\n    value: function parseCoverCallAndAsyncArrowHead(base, startPos, startLoc, state, optional) {\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = true;\n      this.next();\n      var node = this.startNodeAt(startPos, startLoc);\n      node.callee = base;\n\n      if (state.maybeAsyncArrow) {\n        this.expressionScope.enter(newAsyncArrowScope());\n      }\n\n      if (state.optionalChainMember) {\n        node.optional = optional;\n      }\n\n      if (optional) {\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n      } else {\n        node.arguments = this.parseCallExpressionArguments(types.parenR, state.maybeAsyncArrow, base.type === \"Import\", base.type !== \"Super\", node);\n      }\n\n      this.finishCallExpression(node, state.optionalChainMember);\n\n      if (state.maybeAsyncArrow && this.shouldParseAsyncArrow() && !optional) {\n        state.stop = true;\n        this.expressionScope.validateAsPattern();\n        this.expressionScope.exit();\n        node = this.parseAsyncArrowFromCallExpression(this.startNodeAt(startPos, startLoc), node);\n      } else {\n        if (state.maybeAsyncArrow) {\n          this.expressionScope.exit();\n        }\n\n        this.toReferencedArguments(node);\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return node;\n    }\n  }, {\n    key: \"toReferencedArguments\",\n    value: function toReferencedArguments(node, isParenthesizedExpr) {\n      this.toReferencedListDeep(node.arguments, isParenthesizedExpr);\n    }\n  }, {\n    key: \"parseTaggedTemplateExpression\",\n    value: function parseTaggedTemplateExpression(base, startPos, startLoc, state) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.tag = base;\n      node.quasi = this.parseTemplate(true);\n\n      if (state.optionalChainMember) {\n        this.raise(startPos, ErrorMessages.OptionalChainingNoTemplate);\n      }\n\n      return this.finishNode(node, \"TaggedTemplateExpression\");\n    }\n  }, {\n    key: \"atPossibleAsyncArrow\",\n    value: function atPossibleAsyncArrow(base) {\n      return base.type === \"Identifier\" && base.name === \"async\" && this.state.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 && base.start === this.state.potentialArrowAt;\n    }\n  }, {\n    key: \"finishCallExpression\",\n    value: function finishCallExpression(node, optional) {\n      if (node.callee.type === \"Import\") {\n        if (node.arguments.length === 2) {\n          if (!this.hasPlugin(\"moduleAttributes\")) {\n            this.expectPlugin(\"importAssertions\");\n          }\n        }\n\n        if (node.arguments.length === 0 || node.arguments.length > 2) {\n          this.raise(node.start, ErrorMessages.ImportCallArity, this.hasPlugin(\"importAssertions\") || this.hasPlugin(\"moduleAttributes\") ? \"one or two arguments\" : \"one argument\");\n        } else {\n          for (var _i = 0, _node$arguments = node.arguments; _i < _node$arguments.length; _i++) {\n            var arg = _node$arguments[_i];\n\n            if (arg.type === \"SpreadElement\") {\n              this.raise(arg.start, ErrorMessages.ImportCallSpreadArgument);\n            }\n          }\n        }\n      }\n\n      return this.finishNode(node, optional ? \"OptionalCallExpression\" : \"CallExpression\");\n    }\n  }, {\n    key: \"parseCallExpressionArguments\",\n    value: function parseCallExpressionArguments(close, possibleAsyncArrow, dynamicImport, allowPlaceholder, nodeForExtra) {\n      var elts = [];\n      var first = true;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n\n          if (this.match(close)) {\n            if (dynamicImport && !this.hasPlugin(\"importAssertions\") && !this.hasPlugin(\"moduleAttributes\")) {\n              this.raise(this.state.lastTokStart, ErrorMessages.ImportCallArgumentTrailingComma);\n            }\n\n            if (nodeForExtra) {\n              this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n            }\n\n            this.next();\n            break;\n          }\n        }\n\n        elts.push(this.parseExprListItem(false, possibleAsyncArrow ? new ExpressionErrors() : undefined, possibleAsyncArrow ? {\n          start: 0\n        } : undefined, allowPlaceholder));\n      }\n\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return elts;\n    }\n  }, {\n    key: \"shouldParseAsyncArrow\",\n    value: function shouldParseAsyncArrow() {\n      return this.match(types.arrow) && !this.canInsertSemicolon();\n    }\n  }, {\n    key: \"parseAsyncArrowFromCallExpression\",\n    value: function parseAsyncArrowFromCallExpression(node, call) {\n      var _call$extra;\n\n      this.expect(types.arrow);\n      this.parseArrowExpression(node, call.arguments, true, (_call$extra = call.extra) == null ? void 0 : _call$extra.trailingComma);\n      return node;\n    }\n  }, {\n    key: \"parseNoCallExpr\",\n    value: function parseNoCallExpr() {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      return this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    }\n  }, {\n    key: \"parseExprAtom\",\n    value: function parseExprAtom(refExpressionErrors) {\n      if (this.state.type === types.slash) this.readRegexp();\n      var canBeArrow = this.state.potentialArrowAt === this.state.start;\n      var node;\n\n      switch (this.state.type) {\n        case types._super:\n          return this.parseSuper();\n\n        case types._import:\n          node = this.startNode();\n          this.next();\n\n          if (this.match(types.dot)) {\n            return this.parseImportMetaProperty(node);\n          }\n\n          if (!this.match(types.parenL)) {\n            this.raise(this.state.lastTokStart, ErrorMessages.UnsupportedImport);\n          }\n\n          return this.finishNode(node, \"Import\");\n\n        case types._this:\n          node = this.startNode();\n          this.next();\n          return this.finishNode(node, \"ThisExpression\");\n\n        case types.name:\n          {\n            var containsEsc = this.state.containsEsc;\n            var id = this.parseIdentifier();\n\n            if (!containsEsc && id.name === \"async\" && !this.canInsertSemicolon()) {\n              if (this.match(types._function)) {\n                var _last4 = this.state.context.length - 1;\n\n                if (this.state.context[_last4] !== types$1.functionStatement) {\n                  throw new Error(\"Internal error\");\n                }\n\n                this.state.context[_last4] = types$1.functionExpression;\n                this.next();\n                return this.parseFunction(this.startNodeAtNode(id), undefined, true);\n              } else if (this.match(types.name)) {\n                return this.parseAsyncArrowUnaryFunction(id);\n              }\n            }\n\n            if (canBeArrow && this.match(types.arrow) && !this.canInsertSemicolon()) {\n              this.next();\n              return this.parseArrowExpression(this.startNodeAtNode(id), [id], false);\n            }\n\n            return id;\n          }\n\n        case types._do:\n          {\n            return this.parseDo();\n          }\n\n        case types.regexp:\n          {\n            var value = this.state.value;\n            node = this.parseLiteral(value.value, \"RegExpLiteral\");\n            node.pattern = value.pattern;\n            node.flags = value.flags;\n            return node;\n          }\n\n        case types.num:\n          return this.parseLiteral(this.state.value, \"NumericLiteral\");\n\n        case types.bigint:\n          return this.parseLiteral(this.state.value, \"BigIntLiteral\");\n\n        case types.decimal:\n          return this.parseLiteral(this.state.value, \"DecimalLiteral\");\n\n        case types.string:\n          return this.parseLiteral(this.state.value, \"StringLiteral\");\n\n        case types._null:\n          node = this.startNode();\n          this.next();\n          return this.finishNode(node, \"NullLiteral\");\n\n        case types._true:\n        case types._false:\n          return this.parseBooleanLiteral();\n\n        case types.parenL:\n          return this.parseParenAndDistinguishExpression(canBeArrow);\n\n        case types.bracketBarL:\n        case types.bracketHashL:\n          {\n            return this.parseArrayLike(this.state.type === types.bracketBarL ? types.bracketBarR : types.bracketR, false, true, refExpressionErrors);\n          }\n\n        case types.bracketL:\n          {\n            return this.parseArrayLike(types.bracketR, true, false, refExpressionErrors);\n          }\n\n        case types.braceBarL:\n        case types.braceHashL:\n          {\n            return this.parseObjectLike(this.state.type === types.braceBarL ? types.braceBarR : types.braceR, false, true, refExpressionErrors);\n          }\n\n        case types.braceL:\n          {\n            return this.parseObjectLike(types.braceR, false, false, refExpressionErrors);\n          }\n\n        case types._function:\n          return this.parseFunctionOrFunctionSent();\n\n        case types.at:\n          this.parseDecorators();\n\n        case types._class:\n          node = this.startNode();\n          this.takeDecorators(node);\n          return this.parseClass(node, false);\n\n        case types._new:\n          return this.parseNewOrNewTarget();\n\n        case types.backQuote:\n          return this.parseTemplate(false);\n\n        case types.doubleColon:\n          {\n            node = this.startNode();\n            this.next();\n            node.object = null;\n            var callee = node.callee = this.parseNoCallExpr();\n\n            if (callee.type === \"MemberExpression\") {\n              return this.finishNode(node, \"BindExpression\");\n            } else {\n              throw this.raise(callee.start, ErrorMessages.UnsupportedBind);\n            }\n          }\n\n        case types.hash:\n          {\n            if (this.state.inPipeline) {\n              node = this.startNode();\n\n              if (this.getPluginOption(\"pipelineOperator\", \"proposal\") !== \"smart\") {\n                this.raise(node.start, ErrorMessages.PrimaryTopicRequiresSmartPipeline);\n              }\n\n              this.next();\n\n              if (!this.primaryTopicReferenceIsAllowedInCurrentTopicContext()) {\n                this.raise(node.start, ErrorMessages.PrimaryTopicNotAllowed);\n              }\n\n              this.registerTopicReference();\n              return this.finishNode(node, \"PipelinePrimaryTopicReference\");\n            }\n\n            var nextCh = this.input.codePointAt(this.state.end);\n\n            if (isIdentifierStart(nextCh) || nextCh === 92) {\n              var start = this.state.start;\n              node = this.parseMaybePrivateName(true);\n\n              if (this.match(types._in)) {\n                this.expectPlugin(\"privateIn\");\n                this.classScope.usePrivateName(node.id.name, node.start);\n              } else if (this.hasPlugin(\"privateIn\")) {\n                this.raise(this.state.start, ErrorMessages.PrivateInExpectedIn, node.id.name);\n              } else {\n                throw this.unexpected(start);\n              }\n\n              return node;\n            }\n          }\n\n        case types.relational:\n          {\n            if (this.state.value === \"<\") {\n              var lookaheadCh = this.input.codePointAt(this.nextTokenStart());\n\n              if (isIdentifierStart(lookaheadCh) || lookaheadCh === 62) {\n                this.expectOnePlugin([\"jsx\", \"flow\", \"typescript\"]);\n              }\n            }\n          }\n\n        default:\n          throw this.unexpected();\n      }\n    }\n  }, {\n    key: \"parseAsyncArrowUnaryFunction\",\n    value: function parseAsyncArrowUnaryFunction(id) {\n      var node = this.startNodeAtNode(id);\n      this.prodParam.enter(functionFlags(true, this.prodParam.hasYield));\n      var params = [this.parseIdentifier()];\n      this.prodParam.exit();\n\n      if (this.hasPrecedingLineBreak()) {\n        this.raise(this.state.pos, ErrorMessages.LineTerminatorBeforeArrow);\n      }\n\n      this.expect(types.arrow);\n      this.parseArrowExpression(node, params, true);\n      return node;\n    }\n  }, {\n    key: \"parseDo\",\n    value: function parseDo() {\n      this.expectPlugin(\"doExpressions\");\n      var node = this.startNode();\n      this.next();\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      node.body = this.parseBlock();\n      this.state.labels = oldLabels;\n      return this.finishNode(node, \"DoExpression\");\n    }\n  }, {\n    key: \"parseSuper\",\n    value: function parseSuper() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.match(types.parenL) && !this.scope.allowDirectSuper && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, ErrorMessages.SuperNotAllowed);\n      } else if (!this.scope.allowSuper && !this.options.allowSuperOutsideMethod) {\n        this.raise(node.start, ErrorMessages.UnexpectedSuper);\n      }\n\n      if (!this.match(types.parenL) && !this.match(types.bracketL) && !this.match(types.dot)) {\n        this.raise(node.start, ErrorMessages.UnsupportedSuper);\n      }\n\n      return this.finishNode(node, \"Super\");\n    }\n  }, {\n    key: \"parseBooleanLiteral\",\n    value: function parseBooleanLiteral() {\n      var node = this.startNode();\n      node.value = this.match(types._true);\n      this.next();\n      return this.finishNode(node, \"BooleanLiteral\");\n    }\n  }, {\n    key: \"parseMaybePrivateName\",\n    value: function parseMaybePrivateName(isPrivateNameAllowed) {\n      var isPrivate = this.match(types.hash);\n\n      if (isPrivate) {\n        this.expectOnePlugin([\"classPrivateProperties\", \"classPrivateMethods\"]);\n\n        if (!isPrivateNameAllowed) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedPrivateField);\n        }\n\n        var node = this.startNode();\n        this.next();\n        this.assertNoSpace(\"Unexpected space between # and identifier\");\n        node.id = this.parseIdentifier(true);\n        return this.finishNode(node, \"PrivateName\");\n      } else {\n        return this.parseIdentifier(true);\n      }\n    }\n  }, {\n    key: \"parseFunctionOrFunctionSent\",\n    value: function parseFunctionOrFunctionSent() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.prodParam.hasYield && this.match(types.dot)) {\n        var meta = this.createIdentifier(this.startNodeAtNode(node), \"function\");\n        this.next();\n        return this.parseMetaProperty(node, meta, \"sent\");\n      }\n\n      return this.parseFunction(node);\n    }\n  }, {\n    key: \"parseMetaProperty\",\n    value: function parseMetaProperty(node, meta, propertyName) {\n      node.meta = meta;\n\n      if (meta.name === \"function\" && propertyName === \"sent\") {\n        if (this.isContextual(propertyName)) {\n          this.expectPlugin(\"functionSent\");\n        } else if (!this.hasPlugin(\"functionSent\")) {\n          this.unexpected();\n        }\n      }\n\n      var containsEsc = this.state.containsEsc;\n      node.property = this.parseIdentifier(true);\n\n      if (node.property.name !== propertyName || containsEsc) {\n        this.raise(node.property.start, ErrorMessages.UnsupportedMetaProperty, meta.name, propertyName);\n      }\n\n      return this.finishNode(node, \"MetaProperty\");\n    }\n  }, {\n    key: \"parseImportMetaProperty\",\n    value: function parseImportMetaProperty(node) {\n      var id = this.createIdentifier(this.startNodeAtNode(node), \"import\");\n      this.next();\n\n      if (this.isContextual(\"meta\")) {\n        if (!this.inModule) {\n          this.raiseWithData(id.start, {\n            code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n          }, ErrorMessages.ImportMetaOutsideModule);\n        }\n\n        this.sawUnambiguousESM = true;\n      }\n\n      return this.parseMetaProperty(node, id, \"meta\");\n    }\n  }, {\n    key: \"parseLiteral\",\n    value: function parseLiteral(value, type, startPos, startLoc) {\n      startPos = startPos || this.state.start;\n      startLoc = startLoc || this.state.startLoc;\n      var node = this.startNodeAt(startPos, startLoc);\n      this.addExtra(node, \"rawValue\", value);\n      this.addExtra(node, \"raw\", this.input.slice(startPos, this.state.end));\n      node.value = value;\n      this.next();\n      return this.finishNode(node, type);\n    }\n  }, {\n    key: \"parseParenAndDistinguishExpression\",\n    value: function parseParenAndDistinguishExpression(canBeArrow) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      var val;\n      this.next();\n      this.expressionScope.enter(newArrowHeadScope());\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.maybeInArrowParameters = true;\n      this.state.inFSharpPipelineDirectBody = false;\n      var innerStartPos = this.state.start;\n      var innerStartLoc = this.state.startLoc;\n      var exprList = [];\n      var refExpressionErrors = new ExpressionErrors();\n      var refNeedsArrowPos = {\n        start: 0\n      };\n      var first = true;\n      var spreadStart;\n      var optionalCommaStart;\n\n      while (!this.match(types.parenR)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma, refNeedsArrowPos.start || null);\n\n          if (this.match(types.parenR)) {\n            optionalCommaStart = this.state.start;\n            break;\n          }\n        }\n\n        if (this.match(types.ellipsis)) {\n          var spreadNodeStartPos = this.state.start;\n          var spreadNodeStartLoc = this.state.startLoc;\n          spreadStart = this.state.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding(), spreadNodeStartPos, spreadNodeStartLoc));\n          this.checkCommaAfterRest(41);\n          break;\n        } else {\n          exprList.push(this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos));\n        }\n      }\n\n      var innerEndPos = this.state.lastTokEnd;\n      var innerEndLoc = this.state.lastTokEndLoc;\n      this.expect(types.parenR);\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      var arrowNode = this.startNodeAt(startPos, startLoc);\n\n      if (canBeArrow && this.shouldParseArrow() && (arrowNode = this.parseArrow(arrowNode))) {\n        this.expressionScope.validateAsPattern();\n        this.expressionScope.exit();\n        this.parseArrowExpression(arrowNode, exprList, false);\n        return arrowNode;\n      }\n\n      this.expressionScope.exit();\n\n      if (!exprList.length) {\n        this.unexpected(this.state.lastTokStart);\n      }\n\n      if (optionalCommaStart) this.unexpected(optionalCommaStart);\n      if (spreadStart) this.unexpected(spreadStart);\n      this.checkExpressionErrors(refExpressionErrors, true);\n      if (refNeedsArrowPos.start) this.unexpected(refNeedsArrowPos.start);\n      this.toReferencedListDeep(exprList, true);\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n\n      if (!this.options.createParenthesizedExpressions) {\n        this.addExtra(val, \"parenthesized\", true);\n        this.addExtra(val, \"parenStart\", startPos);\n        return val;\n      }\n\n      var parenExpression = this.startNodeAt(startPos, startLoc);\n      parenExpression.expression = val;\n      this.finishNode(parenExpression, \"ParenthesizedExpression\");\n      return parenExpression;\n    }\n  }, {\n    key: \"shouldParseArrow\",\n    value: function shouldParseArrow() {\n      return !this.canInsertSemicolon();\n    }\n  }, {\n    key: \"parseArrow\",\n    value: function parseArrow(node) {\n      if (this.eat(types.arrow)) {\n        return node;\n      }\n    }\n  }, {\n    key: \"parseParenItem\",\n    value: function parseParenItem(node, startPos, startLoc) {\n      return node;\n    }\n  }, {\n    key: \"parseNewOrNewTarget\",\n    value: function parseNewOrNewTarget() {\n      var node = this.startNode();\n      this.next();\n\n      if (this.match(types.dot)) {\n        var meta = this.createIdentifier(this.startNodeAtNode(node), \"new\");\n        this.next();\n        var metaProp = this.parseMetaProperty(node, meta, \"target\");\n\n        if (!this.scope.inNonArrowFunction && !this.scope.inClass) {\n          var error = ErrorMessages.UnexpectedNewTarget;\n\n          if (this.hasPlugin(\"classProperties\")) {\n            error += \" or class properties\";\n          }\n\n          this.raise(metaProp.start, error);\n        }\n\n        return metaProp;\n      }\n\n      return this.parseNew(node);\n    }\n  }, {\n    key: \"parseNew\",\n    value: function parseNew(node) {\n      node.callee = this.parseNoCallExpr();\n\n      if (node.callee.type === \"Import\") {\n        this.raise(node.callee.start, ErrorMessages.ImportCallNotNewExpression);\n      } else if (node.callee.type === \"OptionalMemberExpression\" || node.callee.type === \"OptionalCallExpression\") {\n        this.raise(this.state.lastTokEnd, ErrorMessages.OptionalChainingNoNew);\n      } else if (this.eat(types.questionDot)) {\n        this.raise(this.state.start, ErrorMessages.OptionalChainingNoNew);\n      }\n\n      this.parseNewArguments(node);\n      return this.finishNode(node, \"NewExpression\");\n    }\n  }, {\n    key: \"parseNewArguments\",\n    value: function parseNewArguments(node) {\n      if (this.eat(types.parenL)) {\n        var args = this.parseExprList(types.parenR);\n        this.toReferencedList(args);\n        node.arguments = args;\n      } else {\n        node.arguments = [];\n      }\n    }\n  }, {\n    key: \"parseTemplateElement\",\n    value: function parseTemplateElement(isTagged) {\n      var elem = this.startNode();\n\n      if (this.state.value === null) {\n        if (!isTagged) {\n          this.raise(this.state.start + 1, ErrorMessages.InvalidEscapeSequenceTemplate);\n        }\n      }\n\n      elem.value = {\n        raw: this.input.slice(this.state.start, this.state.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.state.value\n      };\n      this.next();\n      elem.tail = this.match(types.backQuote);\n      return this.finishNode(elem, \"TemplateElement\");\n    }\n  }, {\n    key: \"parseTemplate\",\n    value: function parseTemplate(isTagged) {\n      var node = this.startNode();\n      this.next();\n      node.expressions = [];\n      var curElt = this.parseTemplateElement(isTagged);\n      node.quasis = [curElt];\n\n      while (!curElt.tail) {\n        this.expect(types.dollarBraceL);\n        node.expressions.push(this.parseTemplateSubstitution());\n        this.expect(types.braceR);\n        node.quasis.push(curElt = this.parseTemplateElement(isTagged));\n      }\n\n      this.next();\n      return this.finishNode(node, \"TemplateLiteral\");\n    }\n  }, {\n    key: \"parseTemplateSubstitution\",\n    value: function parseTemplateSubstitution() {\n      return this.parseExpression();\n    }\n  }, {\n    key: \"parseObjectLike\",\n    value: function parseObjectLike(close, isPattern, isRecord, refExpressionErrors) {\n      if (isRecord) {\n        this.expectPlugin(\"recordAndTuple\");\n      }\n\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n      var propHash = Object.create(null);\n      var first = true;\n      var node = this.startNode();\n      node.properties = [];\n      this.next();\n\n      while (!this.match(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n\n          if (this.match(close)) {\n            this.addExtra(node, \"trailingComma\", this.state.lastTokStart);\n            break;\n          }\n        }\n\n        var prop = this.parsePropertyDefinition(isPattern, refExpressionErrors);\n\n        if (!isPattern) {\n          this.checkProto(prop, isRecord, propHash, refExpressionErrors);\n        }\n\n        if (isRecord && prop.type !== \"ObjectProperty\" && prop.type !== \"SpreadElement\") {\n          this.raise(prop.start, ErrorMessages.InvalidRecordProperty);\n        }\n\n        if (prop.shorthand) {\n          this.addExtra(prop, \"shorthand\", true);\n        }\n\n        node.properties.push(prop);\n      }\n\n      this.state.exprAllowed = false;\n      this.next();\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      var type = \"ObjectExpression\";\n\n      if (isPattern) {\n        type = \"ObjectPattern\";\n      } else if (isRecord) {\n        type = \"RecordExpression\";\n      }\n\n      return this.finishNode(node, type);\n    }\n  }, {\n    key: \"maybeAsyncOrAccessorProp\",\n    value: function maybeAsyncOrAccessorProp(prop) {\n      return !prop.computed && prop.key.type === \"Identifier\" && (this.isLiteralPropertyName() || this.match(types.bracketL) || this.match(types.star));\n    }\n  }, {\n    key: \"parsePropertyDefinition\",\n    value: function parsePropertyDefinition(isPattern, refExpressionErrors) {\n      var decorators = [];\n\n      if (this.match(types.at)) {\n        if (this.hasPlugin(\"decorators\")) {\n          this.raise(this.state.start, ErrorMessages.UnsupportedPropertyDecorator);\n        }\n\n        while (this.match(types.at)) {\n          decorators.push(this.parseDecorator());\n        }\n      }\n\n      var prop = this.startNode();\n      var isGenerator = false;\n      var isAsync = false;\n      var isAccessor = false;\n      var startPos;\n      var startLoc;\n\n      if (this.match(types.ellipsis)) {\n        if (decorators.length) this.unexpected();\n\n        if (isPattern) {\n          this.next();\n          prop.argument = this.parseIdentifier();\n          this.checkCommaAfterRest(125);\n          return this.finishNode(prop, \"RestElement\");\n        }\n\n        return this.parseSpread();\n      }\n\n      if (decorators.length) {\n        prop.decorators = decorators;\n        decorators = [];\n      }\n\n      prop.method = false;\n\n      if (isPattern || refExpressionErrors) {\n        startPos = this.state.start;\n        startLoc = this.state.startLoc;\n      }\n\n      if (!isPattern) {\n        isGenerator = this.eat(types.star);\n      }\n\n      var containsEsc = this.state.containsEsc;\n      var key = this.parsePropertyName(prop, false);\n\n      if (!isPattern && !isGenerator && !containsEsc && this.maybeAsyncOrAccessorProp(prop)) {\n        var keyName = key.name;\n\n        if (keyName === \"async\" && !this.hasPrecedingLineBreak()) {\n          isAsync = true;\n          isGenerator = this.eat(types.star);\n          this.parsePropertyName(prop, false);\n        }\n\n        if (keyName === \"get\" || keyName === \"set\") {\n          isAccessor = true;\n          prop.kind = keyName;\n\n          if (this.match(types.star)) {\n            isGenerator = true;\n            this.raise(this.state.pos, ErrorMessages.AccessorIsGenerator, keyName);\n            this.next();\n          }\n\n          this.parsePropertyName(prop, false);\n        }\n      }\n\n      this.parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors);\n      return prop;\n    }\n  }, {\n    key: \"getGetterSetterExpectedParamCount\",\n    value: function getGetterSetterExpectedParamCount(method) {\n      return method.kind === \"get\" ? 0 : 1;\n    }\n  }, {\n    key: \"getObjectOrClassMethodParams\",\n    value: function getObjectOrClassMethodParams(method) {\n      return method.params;\n    }\n  }, {\n    key: \"checkGetterSetterParams\",\n    value: function checkGetterSetterParams(method) {\n      var _params;\n\n      var paramCount = this.getGetterSetterExpectedParamCount(method);\n      var params = this.getObjectOrClassMethodParams(method);\n      var start = method.start;\n\n      if (params.length !== paramCount) {\n        if (method.kind === \"get\") {\n          this.raise(start, ErrorMessages.BadGetterArity);\n        } else {\n          this.raise(start, ErrorMessages.BadSetterArity);\n        }\n      }\n\n      if (method.kind === \"set\" && ((_params = params[params.length - 1]) == null ? void 0 : _params.type) === \"RestElement\") {\n        this.raise(start, ErrorMessages.BadSetterRestParameter);\n      }\n    }\n  }, {\n    key: \"parseObjectMethod\",\n    value: function parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) {\n      if (isAccessor) {\n        this.parseMethod(prop, isGenerator, false, false, false, \"ObjectMethod\");\n        this.checkGetterSetterParams(prop);\n        return prop;\n      }\n\n      if (isAsync || isGenerator || this.match(types.parenL)) {\n        if (isPattern) this.unexpected();\n        prop.kind = \"method\";\n        prop.method = true;\n        return this.parseMethod(prop, isGenerator, isAsync, false, false, \"ObjectMethod\");\n      }\n    }\n  }, {\n    key: \"parseObjectProperty\",\n    value: function parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors) {\n      prop.shorthand = false;\n\n      if (this.eat(types.colon)) {\n        prop.value = isPattern ? this.parseMaybeDefault(this.state.start, this.state.startLoc) : this.parseMaybeAssignAllowIn(refExpressionErrors);\n        return this.finishNode(prop, \"ObjectProperty\");\n      }\n\n      if (!prop.computed && prop.key.type === \"Identifier\") {\n        this.checkReservedWord(prop.key.name, prop.key.start, true, false);\n\n        if (isPattern) {\n          prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n        } else if (this.match(types.eq) && refExpressionErrors) {\n          if (refExpressionErrors.shorthandAssign === -1) {\n            refExpressionErrors.shorthandAssign = this.state.start;\n          }\n\n          prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key.__clone());\n        } else {\n          prop.value = prop.key.__clone();\n        }\n\n        prop.shorthand = true;\n        return this.finishNode(prop, \"ObjectProperty\");\n      }\n    }\n  }, {\n    key: \"parseObjPropValue\",\n    value: function parseObjPropValue(prop, startPos, startLoc, isGenerator, isAsync, isPattern, isAccessor, refExpressionErrors) {\n      var node = this.parseObjectMethod(prop, isGenerator, isAsync, isPattern, isAccessor) || this.parseObjectProperty(prop, startPos, startLoc, isPattern, refExpressionErrors);\n      if (!node) this.unexpected();\n      return node;\n    }\n  }, {\n    key: \"parsePropertyName\",\n    value: function parsePropertyName(prop, isPrivateNameAllowed) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssignAllowIn();\n        this.expect(types.bracketR);\n      } else {\n        var oldInPropertyName = this.state.inPropertyName;\n        this.state.inPropertyName = true;\n        prop.key = this.match(types.num) || this.match(types.string) || this.match(types.bigint) || this.match(types.decimal) ? this.parseExprAtom() : this.parseMaybePrivateName(isPrivateNameAllowed);\n\n        if (prop.key.type !== \"PrivateName\") {\n          prop.computed = false;\n        }\n\n        this.state.inPropertyName = oldInPropertyName;\n      }\n\n      return prop.key;\n    }\n  }, {\n    key: \"initFunction\",\n    value: function initFunction(node, isAsync) {\n      node.id = null;\n      node.generator = false;\n      node.async = !!isAsync;\n    }\n  }, {\n    key: \"parseMethod\",\n    value: function parseMethod(node, isGenerator, isAsync, isConstructor, allowDirectSuper, type) {\n      var inClassScope = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n      this.initFunction(node, isAsync);\n      node.generator = !!isGenerator;\n      var allowModifiers = isConstructor;\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_SUPER | (inClassScope ? SCOPE_CLASS : 0) | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n      this.prodParam.enter(functionFlags(isAsync, node.generator));\n      this.parseFunctionParams(node, allowModifiers);\n      this.parseFunctionBodyAndFinish(node, type, true);\n      this.prodParam.exit();\n      this.scope.exit();\n      return node;\n    }\n  }, {\n    key: \"parseArrayLike\",\n    value: function parseArrayLike(close, canBePattern, isTuple, refExpressionErrors) {\n      if (isTuple) {\n        this.expectPlugin(\"recordAndTuple\");\n      }\n\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = false;\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(close, !isTuple, refExpressionErrors, node);\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return this.finishNode(node, isTuple ? \"TupleExpression\" : \"ArrayExpression\");\n    }\n  }, {\n    key: \"parseArrowExpression\",\n    value: function parseArrowExpression(node, params, isAsync, trailingCommaPos) {\n      this.scope.enter(SCOPE_FUNCTION | SCOPE_ARROW);\n      var flags = functionFlags(isAsync, false);\n\n      if (!this.match(types.bracketL) && this.prodParam.hasIn) {\n        flags |= PARAM_IN;\n      }\n\n      this.prodParam.enter(flags);\n      this.initFunction(node, isAsync);\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n\n      if (params) {\n        this.state.maybeInArrowParameters = true;\n        this.setArrowFunctionParameters(node, params, trailingCommaPos);\n      }\n\n      this.state.maybeInArrowParameters = false;\n      this.parseFunctionBody(node, true);\n      this.prodParam.exit();\n      this.scope.exit();\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return this.finishNode(node, \"ArrowFunctionExpression\");\n    }\n  }, {\n    key: \"setArrowFunctionParameters\",\n    value: function setArrowFunctionParameters(node, params, trailingCommaPos) {\n      node.params = this.toAssignableList(params, trailingCommaPos, false);\n    }\n  }, {\n    key: \"parseFunctionBodyAndFinish\",\n    value: function parseFunctionBodyAndFinish(node, type) {\n      var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      this.parseFunctionBody(node, false, isMethod);\n      this.finishNode(node, type);\n    }\n  }, {\n    key: \"parseFunctionBody\",\n    value: function parseFunctionBody(node, allowExpression) {\n      var _this46 = this;\n\n      var isMethod = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isExpression = allowExpression && !this.match(types.braceL);\n      this.expressionScope.enter(newExpressionScope());\n\n      if (isExpression) {\n        node.body = this.parseMaybeAssign();\n        this.checkParams(node, false, allowExpression, false);\n      } else {\n        var oldStrict = this.state.strict;\n        var oldLabels = this.state.labels;\n        this.state.labels = [];\n        this.prodParam.enter(this.prodParam.currentFlags() | PARAM_RETURN);\n        node.body = this.parseBlock(true, false, function (hasStrictModeDirective) {\n          var nonSimple = !_this46.isSimpleParamList(node.params);\n\n          if (hasStrictModeDirective && nonSimple) {\n            var errorPos = (node.kind === \"method\" || node.kind === \"constructor\") && !!node.key ? node.key.end : node.start;\n\n            _this46.raise(errorPos, ErrorMessages.IllegalLanguageModeDirective);\n          }\n\n          var strictModeChanged = !oldStrict && _this46.state.strict;\n\n          _this46.checkParams(node, !_this46.state.strict && !allowExpression && !isMethod && !nonSimple, allowExpression, strictModeChanged);\n\n          if (_this46.state.strict && node.id) {\n            _this46.checkLVal(node.id, \"function name\", BIND_OUTSIDE, undefined, undefined, strictModeChanged);\n          }\n        });\n        this.prodParam.exit();\n        this.expressionScope.exit();\n        this.state.labels = oldLabels;\n      }\n    }\n  }, {\n    key: \"isSimpleParamList\",\n    value: function isSimpleParamList(params) {\n      for (var i = 0, len = params.length; i < len; i++) {\n        if (params[i].type !== \"Identifier\") return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkParams\",\n    value: function checkParams(node, allowDuplicates, isArrowFunction) {\n      var strictModeChanged = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var checkClashes = new Set();\n\n      for (var _i2 = 0, _node$params = node.params; _i2 < _node$params.length; _i2++) {\n        var param = _node$params[_i2];\n        this.checkLVal(param, \"function parameter list\", BIND_VAR, allowDuplicates ? null : checkClashes, undefined, strictModeChanged);\n      }\n    }\n  }, {\n    key: \"parseExprList\",\n    value: function parseExprList(close, allowEmpty, refExpressionErrors, nodeForExtra) {\n      var elts = [];\n      var first = true;\n\n      while (!this.eat(close)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n\n          if (this.match(close)) {\n            if (nodeForExtra) {\n              this.addExtra(nodeForExtra, \"trailingComma\", this.state.lastTokStart);\n            }\n\n            this.next();\n            break;\n          }\n        }\n\n        elts.push(this.parseExprListItem(allowEmpty, refExpressionErrors));\n      }\n\n      return elts;\n    }\n  }, {\n    key: \"parseExprListItem\",\n    value: function parseExprListItem(allowEmpty, refExpressionErrors, refNeedsArrowPos, allowPlaceholder) {\n      var elt;\n\n      if (this.match(types.comma)) {\n        if (!allowEmpty) {\n          this.raise(this.state.pos, ErrorMessages.UnexpectedToken, \",\");\n        }\n\n        elt = null;\n      } else if (this.match(types.ellipsis)) {\n        var spreadNodeStartPos = this.state.start;\n        var spreadNodeStartLoc = this.state.startLoc;\n        elt = this.parseParenItem(this.parseSpread(refExpressionErrors, refNeedsArrowPos), spreadNodeStartPos, spreadNodeStartLoc);\n      } else if (this.match(types.question)) {\n        this.expectPlugin(\"partialApplication\");\n\n        if (!allowPlaceholder) {\n          this.raise(this.state.start, ErrorMessages.UnexpectedArgumentPlaceholder);\n        }\n\n        var node = this.startNode();\n        this.next();\n        elt = this.finishNode(node, \"ArgumentPlaceholder\");\n      } else {\n        elt = this.parseMaybeAssignAllowIn(refExpressionErrors, this.parseParenItem, refNeedsArrowPos);\n      }\n\n      return elt;\n    }\n  }, {\n    key: \"parseIdentifier\",\n    value: function parseIdentifier(liberal) {\n      var node = this.startNode();\n      var name = this.parseIdentifierName(node.start, liberal);\n      return this.createIdentifier(node, name);\n    }\n  }, {\n    key: \"createIdentifier\",\n    value: function createIdentifier(node, name) {\n      node.name = name;\n      node.loc.identifierName = name;\n      return this.finishNode(node, \"Identifier\");\n    }\n  }, {\n    key: \"parseIdentifierName\",\n    value: function parseIdentifierName(pos, liberal) {\n      var name;\n      var _this$state2 = this.state,\n          start = _this$state2.start,\n          type = _this$state2.type;\n\n      if (type === types.name) {\n        name = this.state.value;\n      } else if (type.keyword) {\n        name = type.keyword;\n        var curContext = this.curContext();\n\n        if ((type === types._class || type === types._function) && (curContext === types$1.functionStatement || curContext === types$1.functionExpression)) {\n          this.state.context.pop();\n        }\n      } else {\n        throw this.unexpected();\n      }\n\n      if (liberal) {\n        this.state.type = types.name;\n      } else {\n        this.checkReservedWord(name, start, !!type.keyword, false);\n      }\n\n      this.next();\n      return name;\n    }\n  }, {\n    key: \"checkReservedWord\",\n    value: function checkReservedWord(word, startLoc, checkKeywords, isBinding) {\n      if (this.prodParam.hasYield && word === \"yield\") {\n        this.raise(startLoc, ErrorMessages.YieldBindingIdentifier);\n        return;\n      }\n\n      if (word === \"await\") {\n        if (this.prodParam.hasAwait) {\n          this.raise(startLoc, ErrorMessages.AwaitBindingIdentifier);\n          return;\n        } else {\n          this.expressionScope.recordAsyncArrowParametersError(startLoc, ErrorMessages.AwaitBindingIdentifier);\n        }\n      }\n\n      if (this.scope.inClass && !this.scope.inNonArrowFunction && word === \"arguments\") {\n        this.raise(startLoc, ErrorMessages.ArgumentsInClass);\n        return;\n      }\n\n      if (checkKeywords && isKeyword(word)) {\n        this.raise(startLoc, ErrorMessages.UnexpectedKeyword, word);\n        return;\n      }\n\n      var reservedTest = !this.state.strict ? isReservedWord : isBinding ? isStrictBindReservedWord : isStrictReservedWord;\n\n      if (reservedTest(word, this.inModule)) {\n        if (!this.prodParam.hasAwait && word === \"await\") {\n          this.raise(startLoc, this.hasPlugin(\"topLevelAwait\") ? ErrorMessages.AwaitNotInAsyncContext : ErrorMessages.AwaitNotInAsyncFunction);\n        } else {\n          this.raise(startLoc, ErrorMessages.UnexpectedReservedWord, word);\n        }\n      }\n    }\n  }, {\n    key: \"isAwaitAllowed\",\n    value: function isAwaitAllowed() {\n      if (this.scope.inFunction) return this.prodParam.hasAwait;\n      if (this.options.allowAwaitOutsideFunction) return true;\n\n      if (this.hasPlugin(\"topLevelAwait\")) {\n        return this.inModule && this.prodParam.hasAwait;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseAwait\",\n    value: function parseAwait() {\n      var node = this.startNode();\n      this.next();\n      this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.AwaitExpressionFormalParameter);\n\n      if (this.eat(types.star)) {\n        this.raise(node.start, ErrorMessages.ObsoleteAwaitStar);\n      }\n\n      if (!this.scope.inFunction && !this.options.allowAwaitOutsideFunction) {\n        if (this.hasPrecedingLineBreak() || this.match(types.plusMin) || this.match(types.parenL) || this.match(types.bracketL) || this.match(types.backQuote) || this.match(types.regexp) || this.match(types.slash) || this.hasPlugin(\"v8intrinsic\") && this.match(types.modulo)) {\n          this.ambiguousScriptDifferentAst = true;\n        } else {\n          this.sawUnambiguousESM = true;\n        }\n      }\n\n      if (!this.state.soloAwait) {\n        node.argument = this.parseMaybeUnary();\n      }\n\n      return this.finishNode(node, \"AwaitExpression\");\n    }\n  }, {\n    key: \"parseYield\",\n    value: function parseYield() {\n      var node = this.startNode();\n      this.expressionScope.recordParameterInitializerError(node.start, ErrorMessages.YieldInParameter);\n      this.next();\n\n      if (this.match(types.semi) || !this.match(types.star) && !this.state.type.startsExpr || this.hasPrecedingLineBreak()) {\n        node.delegate = false;\n        node.argument = null;\n      } else {\n        node.delegate = this.eat(types.star);\n        node.argument = this.parseMaybeAssign();\n      }\n\n      return this.finishNode(node, \"YieldExpression\");\n    }\n  }, {\n    key: \"checkPipelineAtInfixOperator\",\n    value: function checkPipelineAtInfixOperator(left, leftStartPos) {\n      if (this.getPluginOption(\"pipelineOperator\", \"proposal\") === \"smart\") {\n        if (left.type === \"SequenceExpression\") {\n          this.raise(leftStartPos, ErrorMessages.PipelineHeadSequenceExpression);\n        }\n      }\n    }\n  }, {\n    key: \"parseSmartPipelineBody\",\n    value: function parseSmartPipelineBody(childExpression, startPos, startLoc) {\n      this.checkSmartPipelineBodyEarlyErrors(childExpression, startPos);\n      return this.parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc);\n    }\n  }, {\n    key: \"checkSmartPipelineBodyEarlyErrors\",\n    value: function checkSmartPipelineBodyEarlyErrors(childExpression, startPos) {\n      if (this.match(types.arrow)) {\n        throw this.raise(this.state.start, ErrorMessages.PipelineBodyNoArrow);\n      } else if (childExpression.type === \"SequenceExpression\") {\n        this.raise(startPos, ErrorMessages.PipelineBodySequenceExpression);\n      }\n    }\n  }, {\n    key: \"parseSmartPipelineBodyInStyle\",\n    value: function parseSmartPipelineBodyInStyle(childExpression, startPos, startLoc) {\n      var bodyNode = this.startNodeAt(startPos, startLoc);\n      var isSimpleReference = this.isSimpleReference(childExpression);\n\n      if (isSimpleReference) {\n        bodyNode.callee = childExpression;\n      } else {\n        if (!this.topicReferenceWasUsedInCurrentTopicContext()) {\n          this.raise(startPos, ErrorMessages.PipelineTopicUnused);\n        }\n\n        bodyNode.expression = childExpression;\n      }\n\n      return this.finishNode(bodyNode, isSimpleReference ? \"PipelineBareFunction\" : \"PipelineTopicExpression\");\n    }\n  }, {\n    key: \"isSimpleReference\",\n    value: function isSimpleReference(expression) {\n      switch (expression.type) {\n        case \"MemberExpression\":\n          return !expression.computed && this.isSimpleReference(expression.object);\n\n        case \"Identifier\":\n          return true;\n\n        default:\n          return false;\n      }\n    }\n  }, {\n    key: \"withTopicPermittingContext\",\n    value: function withTopicPermittingContext(callback) {\n      var outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 1,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    }\n  }, {\n    key: \"withTopicForbiddingContext\",\n    value: function withTopicForbiddingContext(callback) {\n      var outerContextTopicState = this.state.topicContext;\n      this.state.topicContext = {\n        maxNumOfResolvableTopics: 0,\n        maxTopicIndex: null\n      };\n\n      try {\n        return callback();\n      } finally {\n        this.state.topicContext = outerContextTopicState;\n      }\n    }\n  }, {\n    key: \"withSoloAwaitPermittingContext\",\n    value: function withSoloAwaitPermittingContext(callback) {\n      var outerContextSoloAwaitState = this.state.soloAwait;\n      this.state.soloAwait = true;\n\n      try {\n        return callback();\n      } finally {\n        this.state.soloAwait = outerContextSoloAwaitState;\n      }\n    }\n  }, {\n    key: \"allowInAnd\",\n    value: function allowInAnd(callback) {\n      var flags = this.prodParam.currentFlags();\n      var prodParamToSet = PARAM_IN & ~flags;\n\n      if (prodParamToSet) {\n        this.prodParam.enter(flags | PARAM_IN);\n\n        try {\n          return callback();\n        } finally {\n          this.prodParam.exit();\n        }\n      }\n\n      return callback();\n    }\n  }, {\n    key: \"disallowInAnd\",\n    value: function disallowInAnd(callback) {\n      var flags = this.prodParam.currentFlags();\n      var prodParamToClear = PARAM_IN & flags;\n\n      if (prodParamToClear) {\n        this.prodParam.enter(flags & ~PARAM_IN);\n\n        try {\n          return callback();\n        } finally {\n          this.prodParam.exit();\n        }\n      }\n\n      return callback();\n    }\n  }, {\n    key: \"registerTopicReference\",\n    value: function registerTopicReference() {\n      this.state.topicContext.maxTopicIndex = 0;\n    }\n  }, {\n    key: \"primaryTopicReferenceIsAllowedInCurrentTopicContext\",\n    value: function primaryTopicReferenceIsAllowedInCurrentTopicContext() {\n      return this.state.topicContext.maxNumOfResolvableTopics >= 1;\n    }\n  }, {\n    key: \"topicReferenceWasUsedInCurrentTopicContext\",\n    value: function topicReferenceWasUsedInCurrentTopicContext() {\n      return this.state.topicContext.maxTopicIndex != null && this.state.topicContext.maxTopicIndex >= 0;\n    }\n  }, {\n    key: \"parseFSharpPipelineBody\",\n    value: function parseFSharpPipelineBody(prec) {\n      var startPos = this.state.start;\n      var startLoc = this.state.startLoc;\n      this.state.potentialArrowAt = this.state.start;\n      var oldInFSharpPipelineDirectBody = this.state.inFSharpPipelineDirectBody;\n      this.state.inFSharpPipelineDirectBody = true;\n      var ret = this.parseExprOp(this.parseMaybeUnary(), startPos, startLoc, prec);\n      this.state.inFSharpPipelineDirectBody = oldInFSharpPipelineDirectBody;\n      return ret;\n    }\n  }]);\n\n  return ExpressionParser;\n}(LValParser);\n\nvar loopLabel = {\n  kind: \"loop\"\n},\n    switchLabel = {\n  kind: \"switch\"\n};\nvar FUNC_NO_FLAGS = 0,\n    FUNC_STATEMENT = 1,\n    FUNC_HANGING_STATEMENT = 2,\n    FUNC_NULLABLE_ID = 4;\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\nvar StatementParser = /*#__PURE__*/function (_ExpressionParser) {\n  _inherits(StatementParser, _ExpressionParser);\n\n  var _super17 = _createSuper(StatementParser);\n\n  function StatementParser() {\n    _classCallCheck(this, StatementParser);\n\n    return _super17.apply(this, arguments);\n  }\n\n  _createClass(StatementParser, [{\n    key: \"parseTopLevel\",\n    value: function parseTopLevel(file, program) {\n      program.sourceType = this.options.sourceType;\n      program.interpreter = this.parseInterpreterDirective();\n      this.parseBlockBody(program, true, true, types.eof);\n\n      if (this.inModule && !this.options.allowUndeclaredExports && this.scope.undefinedExports.size > 0) {\n        for (var _i = 0, _Array$from = Array.from(this.scope.undefinedExports); _i < _Array$from.length; _i++) {\n          var _Array$from$_i = _slicedToArray(_Array$from[_i], 1),\n              name = _Array$from$_i[0];\n\n          var pos = this.scope.undefinedExports.get(name);\n          this.raise(pos, ErrorMessages.ModuleExportUndefined, name);\n        }\n      }\n\n      file.program = this.finishNode(program, \"Program\");\n      file.comments = this.state.comments;\n      if (this.options.tokens) file.tokens = this.tokens;\n      return this.finishNode(file, \"File\");\n    }\n  }, {\n    key: \"stmtToDirective\",\n    value: function stmtToDirective(stmt) {\n      var expr = stmt.expression;\n      var directiveLiteral = this.startNodeAt(expr.start, expr.loc.start);\n      var directive = this.startNodeAt(stmt.start, stmt.loc.start);\n      var raw = this.input.slice(expr.start, expr.end);\n      var val = directiveLiteral.value = raw.slice(1, -1);\n      this.addExtra(directiveLiteral, \"raw\", raw);\n      this.addExtra(directiveLiteral, \"rawValue\", val);\n      directive.value = this.finishNodeAt(directiveLiteral, \"DirectiveLiteral\", expr.end, expr.loc.end);\n      return this.finishNodeAt(directive, \"Directive\", stmt.end, stmt.loc.end);\n    }\n  }, {\n    key: \"parseInterpreterDirective\",\n    value: function parseInterpreterDirective() {\n      if (!this.match(types.interpreterDirective)) {\n        return null;\n      }\n\n      var node = this.startNode();\n      node.value = this.state.value;\n      this.next();\n      return this.finishNode(node, \"InterpreterDirective\");\n    }\n  }, {\n    key: \"isLet\",\n    value: function isLet(context) {\n      if (!this.isContextual(\"let\")) {\n        return false;\n      }\n\n      var next = this.nextTokenStart();\n      var nextCh = this.input.charCodeAt(next);\n      if (nextCh === 91) return true;\n      if (context) return false;\n      if (nextCh === 123) return true;\n\n      if (isIdentifierStart(nextCh)) {\n        var pos = next + 1;\n\n        while (isIdentifierChar(this.input.charCodeAt(pos))) {\n          ++pos;\n        }\n\n        var ident = this.input.slice(next, pos);\n        if (!keywordRelationalOperator.test(ident)) return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseStatement\",\n    value: function parseStatement(context, topLevel) {\n      if (this.match(types.at)) {\n        this.parseDecorators(true);\n      }\n\n      return this.parseStatementContent(context, topLevel);\n    }\n  }, {\n    key: \"parseStatementContent\",\n    value: function parseStatementContent(context, topLevel) {\n      var starttype = this.state.type;\n      var node = this.startNode();\n      var kind;\n\n      if (this.isLet(context)) {\n        starttype = types._var;\n        kind = \"let\";\n      }\n\n      switch (starttype) {\n        case types._break:\n        case types._continue:\n          return this.parseBreakContinueStatement(node, starttype.keyword);\n\n        case types._debugger:\n          return this.parseDebuggerStatement(node);\n\n        case types._do:\n          return this.parseDoStatement(node);\n\n        case types._for:\n          return this.parseForStatement(node);\n\n        case types._function:\n          if (this.lookaheadCharCode() === 46) break;\n\n          if (context) {\n            if (this.state.strict) {\n              this.raise(this.state.start, ErrorMessages.StrictFunction);\n            } else if (context !== \"if\" && context !== \"label\") {\n              this.raise(this.state.start, ErrorMessages.SloppyFunction);\n            }\n          }\n\n          return this.parseFunctionStatement(node, false, !context);\n\n        case types._class:\n          if (context) this.unexpected();\n          return this.parseClass(node, true);\n\n        case types._if:\n          return this.parseIfStatement(node);\n\n        case types._return:\n          return this.parseReturnStatement(node);\n\n        case types._switch:\n          return this.parseSwitchStatement(node);\n\n        case types._throw:\n          return this.parseThrowStatement(node);\n\n        case types._try:\n          return this.parseTryStatement(node);\n\n        case types._const:\n        case types._var:\n          kind = kind || this.state.value;\n\n          if (context && kind !== \"var\") {\n            this.raise(this.state.start, ErrorMessages.UnexpectedLexicalDeclaration);\n          }\n\n          return this.parseVarStatement(node, kind);\n\n        case types._while:\n          return this.parseWhileStatement(node);\n\n        case types._with:\n          return this.parseWithStatement(node);\n\n        case types.braceL:\n          return this.parseBlock();\n\n        case types.semi:\n          return this.parseEmptyStatement(node);\n\n        case types._import:\n          {\n            var nextTokenCharCode = this.lookaheadCharCode();\n\n            if (nextTokenCharCode === 40 || nextTokenCharCode === 46) {\n              break;\n            }\n          }\n\n        case types._export:\n          {\n            if (!this.options.allowImportExportEverywhere && !topLevel) {\n              this.raise(this.state.start, ErrorMessages.UnexpectedImportExport);\n            }\n\n            this.next();\n            var result;\n\n            if (starttype === types._import) {\n              result = this.parseImport(node);\n\n              if (result.type === \"ImportDeclaration\" && (!result.importKind || result.importKind === \"value\")) {\n                this.sawUnambiguousESM = true;\n              }\n            } else {\n              result = this.parseExport(node);\n\n              if (result.type === \"ExportNamedDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportAllDeclaration\" && (!result.exportKind || result.exportKind === \"value\") || result.type === \"ExportDefaultDeclaration\") {\n                this.sawUnambiguousESM = true;\n              }\n            }\n\n            this.assertModuleNodeAllowed(node);\n            return result;\n          }\n\n        default:\n          {\n            if (this.isAsyncFunction()) {\n              if (context) {\n                this.raise(this.state.start, ErrorMessages.AsyncFunctionInSingleStatementContext);\n              }\n\n              this.next();\n              return this.parseFunctionStatement(node, true, !context);\n            }\n          }\n      }\n\n      var maybeName = this.state.value;\n      var expr = this.parseExpression();\n\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon)) {\n        return this.parseLabeledStatement(node, maybeName, expr, context);\n      } else {\n        return this.parseExpressionStatement(node, expr);\n      }\n    }\n  }, {\n    key: \"assertModuleNodeAllowed\",\n    value: function assertModuleNodeAllowed(node) {\n      if (!this.options.allowImportExportEverywhere && !this.inModule) {\n        this.raiseWithData(node.start, {\n          code: \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\"\n        }, ErrorMessages.ImportOutsideModule);\n      }\n    }\n  }, {\n    key: \"takeDecorators\",\n    value: function takeDecorators(node) {\n      var decorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      if (decorators.length) {\n        node.decorators = decorators;\n        this.resetStartLocationFromNode(node, decorators[0]);\n        this.state.decoratorStack[this.state.decoratorStack.length - 1] = [];\n      }\n    }\n  }, {\n    key: \"canHaveLeadingDecorator\",\n    value: function canHaveLeadingDecorator() {\n      return this.match(types._class);\n    }\n  }, {\n    key: \"parseDecorators\",\n    value: function parseDecorators(allowExport) {\n      var currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      while (this.match(types.at)) {\n        var decorator = this.parseDecorator();\n        currentContextDecorators.push(decorator);\n      }\n\n      if (this.match(types._export)) {\n        if (!allowExport) {\n          this.unexpected();\n        }\n\n        if (this.hasPlugin(\"decorators\") && !this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.raise(this.state.start, ErrorMessages.DecoratorExportClass);\n        }\n      } else if (!this.canHaveLeadingDecorator()) {\n        throw this.raise(this.state.start, ErrorMessages.UnexpectedLeadingDecorator);\n      }\n    }\n  }, {\n    key: \"parseDecorator\",\n    value: function parseDecorator() {\n      this.expectOnePlugin([\"decorators-legacy\", \"decorators\"]);\n      var node = this.startNode();\n      this.next();\n\n      if (this.hasPlugin(\"decorators\")) {\n        this.state.decoratorStack.push([]);\n        var startPos = this.state.start;\n        var startLoc = this.state.startLoc;\n        var expr;\n\n        if (this.eat(types.parenL)) {\n          expr = this.parseExpression();\n          this.expect(types.parenR);\n        } else {\n          expr = this.parseIdentifier(false);\n\n          while (this.eat(types.dot)) {\n            var _node12 = this.startNodeAt(startPos, startLoc);\n\n            _node12.object = expr;\n            _node12.property = this.parseIdentifier(true);\n            _node12.computed = false;\n            expr = this.finishNode(_node12, \"MemberExpression\");\n          }\n        }\n\n        node.expression = this.parseMaybeDecoratorArguments(expr);\n        this.state.decoratorStack.pop();\n      } else {\n        node.expression = this.parseExprSubscripts();\n      }\n\n      return this.finishNode(node, \"Decorator\");\n    }\n  }, {\n    key: \"parseMaybeDecoratorArguments\",\n    value: function parseMaybeDecoratorArguments(expr) {\n      if (this.eat(types.parenL)) {\n        var node = this.startNodeAtNode(expr);\n        node.callee = expr;\n        node.arguments = this.parseCallExpressionArguments(types.parenR, false);\n        this.toReferencedList(node.arguments);\n        return this.finishNode(node, \"CallExpression\");\n      }\n\n      return expr;\n    }\n  }, {\n    key: \"parseBreakContinueStatement\",\n    value: function parseBreakContinueStatement(node, keyword) {\n      var isBreak = keyword === \"break\";\n      this.next();\n\n      if (this.isLineTerminator()) {\n        node.label = null;\n      } else {\n        node.label = this.parseIdentifier();\n        this.semicolon();\n      }\n\n      this.verifyBreakContinue(node, keyword);\n      return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\");\n    }\n  }, {\n    key: \"verifyBreakContinue\",\n    value: function verifyBreakContinue(node, keyword) {\n      var isBreak = keyword === \"break\";\n      var i;\n\n      for (i = 0; i < this.state.labels.length; ++i) {\n        var lab = this.state.labels[i];\n\n        if (node.label == null || lab.name === node.label.name) {\n          if (lab.kind != null && (isBreak || lab.kind === \"loop\")) break;\n          if (node.label && isBreak) break;\n        }\n      }\n\n      if (i === this.state.labels.length) {\n        this.raise(node.start, ErrorMessages.IllegalBreakContinue, keyword);\n      }\n    }\n  }, {\n    key: \"parseDebuggerStatement\",\n    value: function parseDebuggerStatement(node) {\n      this.next();\n      this.semicolon();\n      return this.finishNode(node, \"DebuggerStatement\");\n    }\n  }, {\n    key: \"parseHeaderExpression\",\n    value: function parseHeaderExpression() {\n      this.expect(types.parenL);\n      var val = this.parseExpression();\n      this.expect(types.parenR);\n      return val;\n    }\n  }, {\n    key: \"parseDoStatement\",\n    value: function parseDoStatement(node) {\n      var _this47 = this;\n\n      this.next();\n      this.state.labels.push(loopLabel);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this47.parseStatement(\"do\");\n      });\n      this.state.labels.pop();\n      this.expect(types._while);\n      node.test = this.parseHeaderExpression();\n      this.eat(types.semi);\n      return this.finishNode(node, \"DoWhileStatement\");\n    }\n  }, {\n    key: \"parseForStatement\",\n    value: function parseForStatement(node) {\n      this.next();\n      this.state.labels.push(loopLabel);\n      var awaitAt = -1;\n\n      if (this.isAwaitAllowed() && this.eatContextual(\"await\")) {\n        awaitAt = this.state.lastTokStart;\n      }\n\n      this.scope.enter(SCOPE_OTHER);\n      this.expect(types.parenL);\n\n      if (this.match(types.semi)) {\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n\n        return this.parseFor(node, null);\n      }\n\n      var isLet = this.isLet();\n\n      if (this.match(types._var) || this.match(types._const) || isLet) {\n        var _init = this.startNode();\n\n        var kind = isLet ? \"let\" : this.state.value;\n        this.next();\n        this.parseVar(_init, true, kind);\n        this.finishNode(_init, \"VariableDeclaration\");\n\n        if ((this.match(types._in) || this.isContextual(\"of\")) && _init.declarations.length === 1) {\n          return this.parseForIn(node, _init, awaitAt);\n        }\n\n        if (awaitAt > -1) {\n          this.unexpected(awaitAt);\n        }\n\n        return this.parseFor(node, _init);\n      }\n\n      var refExpressionErrors = new ExpressionErrors();\n      var init = this.parseExpression(true, refExpressionErrors);\n\n      if (this.match(types._in) || this.isContextual(\"of\")) {\n        this.toAssignable(init, true);\n        var description = this.isContextual(\"of\") ? \"for-of statement\" : \"for-in statement\";\n        this.checkLVal(init, description);\n        return this.parseForIn(node, init, awaitAt);\n      } else {\n        this.checkExpressionErrors(refExpressionErrors, true);\n      }\n\n      if (awaitAt > -1) {\n        this.unexpected(awaitAt);\n      }\n\n      return this.parseFor(node, init);\n    }\n  }, {\n    key: \"parseFunctionStatement\",\n    value: function parseFunctionStatement(node, isAsync, declarationPosition) {\n      this.next();\n      return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), isAsync);\n    }\n  }, {\n    key: \"parseIfStatement\",\n    value: function parseIfStatement(node) {\n      this.next();\n      node.test = this.parseHeaderExpression();\n      node.consequent = this.parseStatement(\"if\");\n      node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n      return this.finishNode(node, \"IfStatement\");\n    }\n  }, {\n    key: \"parseReturnStatement\",\n    value: function parseReturnStatement(node) {\n      if (!this.prodParam.hasReturn && !this.options.allowReturnOutsideFunction) {\n        this.raise(this.state.start, ErrorMessages.IllegalReturn);\n      }\n\n      this.next();\n\n      if (this.isLineTerminator()) {\n        node.argument = null;\n      } else {\n        node.argument = this.parseExpression();\n        this.semicolon();\n      }\n\n      return this.finishNode(node, \"ReturnStatement\");\n    }\n  }, {\n    key: \"parseSwitchStatement\",\n    value: function parseSwitchStatement(node) {\n      this.next();\n      node.discriminant = this.parseHeaderExpression();\n      var cases = node.cases = [];\n      this.expect(types.braceL);\n      this.state.labels.push(switchLabel);\n      this.scope.enter(SCOPE_OTHER);\n      var cur;\n\n      for (var sawDefault; !this.match(types.braceR);) {\n        if (this.match(types._case) || this.match(types._default)) {\n          var isCase = this.match(types._case);\n          if (cur) this.finishNode(cur, \"SwitchCase\");\n          cases.push(cur = this.startNode());\n          cur.consequent = [];\n          this.next();\n\n          if (isCase) {\n            cur.test = this.parseExpression();\n          } else {\n            if (sawDefault) {\n              this.raise(this.state.lastTokStart, ErrorMessages.MultipleDefaultsInSwitch);\n            }\n\n            sawDefault = true;\n            cur.test = null;\n          }\n\n          this.expect(types.colon);\n        } else {\n          if (cur) {\n            cur.consequent.push(this.parseStatement(null));\n          } else {\n            this.unexpected();\n          }\n        }\n      }\n\n      this.scope.exit();\n      if (cur) this.finishNode(cur, \"SwitchCase\");\n      this.next();\n      this.state.labels.pop();\n      return this.finishNode(node, \"SwitchStatement\");\n    }\n  }, {\n    key: \"parseThrowStatement\",\n    value: function parseThrowStatement(node) {\n      this.next();\n\n      if (this.hasPrecedingLineBreak()) {\n        this.raise(this.state.lastTokEnd, ErrorMessages.NewlineAfterThrow);\n      }\n\n      node.argument = this.parseExpression();\n      this.semicolon();\n      return this.finishNode(node, \"ThrowStatement\");\n    }\n  }, {\n    key: \"parseCatchClauseParam\",\n    value: function parseCatchClauseParam() {\n      var param = this.parseBindingAtom();\n      var simple = param.type === \"Identifier\";\n      this.scope.enter(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLVal(param, \"catch clause\", BIND_LEXICAL);\n      return param;\n    }\n  }, {\n    key: \"parseTryStatement\",\n    value: function parseTryStatement(node) {\n      var _this48 = this;\n\n      this.next();\n      node.block = this.parseBlock();\n      node.handler = null;\n\n      if (this.match(types._catch)) {\n        var clause = this.startNode();\n        this.next();\n\n        if (this.match(types.parenL)) {\n          this.expect(types.parenL);\n          clause.param = this.parseCatchClauseParam();\n          this.expect(types.parenR);\n        } else {\n          clause.param = null;\n          this.scope.enter(SCOPE_OTHER);\n        }\n\n        clause.body = this.withTopicForbiddingContext(function () {\n          return _this48.parseBlock(false, false);\n        });\n        this.scope.exit();\n        node.handler = this.finishNode(clause, \"CatchClause\");\n      }\n\n      node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n\n      if (!node.handler && !node.finalizer) {\n        this.raise(node.start, ErrorMessages.NoCatchOrFinally);\n      }\n\n      return this.finishNode(node, \"TryStatement\");\n    }\n  }, {\n    key: \"parseVarStatement\",\n    value: function parseVarStatement(node, kind) {\n      this.next();\n      this.parseVar(node, false, kind);\n      this.semicolon();\n      return this.finishNode(node, \"VariableDeclaration\");\n    }\n  }, {\n    key: \"parseWhileStatement\",\n    value: function parseWhileStatement(node) {\n      var _this49 = this;\n\n      this.next();\n      node.test = this.parseHeaderExpression();\n      this.state.labels.push(loopLabel);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this49.parseStatement(\"while\");\n      });\n      this.state.labels.pop();\n      return this.finishNode(node, \"WhileStatement\");\n    }\n  }, {\n    key: \"parseWithStatement\",\n    value: function parseWithStatement(node) {\n      var _this50 = this;\n\n      if (this.state.strict) {\n        this.raise(this.state.start, ErrorMessages.StrictWith);\n      }\n\n      this.next();\n      node.object = this.parseHeaderExpression();\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this50.parseStatement(\"with\");\n      });\n      return this.finishNode(node, \"WithStatement\");\n    }\n  }, {\n    key: \"parseEmptyStatement\",\n    value: function parseEmptyStatement(node) {\n      this.next();\n      return this.finishNode(node, \"EmptyStatement\");\n    }\n  }, {\n    key: \"parseLabeledStatement\",\n    value: function parseLabeledStatement(node, maybeName, expr, context) {\n      for (var _i2 = 0, _this$state$labels = this.state.labels; _i2 < _this$state$labels.length; _i2++) {\n        var label = _this$state$labels[_i2];\n\n        if (label.name === maybeName) {\n          this.raise(expr.start, ErrorMessages.LabelRedeclaration, maybeName);\n        }\n      }\n\n      var kind = this.state.type.isLoop ? \"loop\" : this.match(types._switch) ? \"switch\" : null;\n\n      for (var i = this.state.labels.length - 1; i >= 0; i--) {\n        var _label = this.state.labels[i];\n\n        if (_label.statementStart === node.start) {\n          _label.statementStart = this.state.start;\n          _label.kind = kind;\n        } else {\n          break;\n        }\n      }\n\n      this.state.labels.push({\n        name: maybeName,\n        kind: kind,\n        statementStart: this.state.start\n      });\n      node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n      this.state.labels.pop();\n      node.label = expr;\n      return this.finishNode(node, \"LabeledStatement\");\n    }\n  }, {\n    key: \"parseExpressionStatement\",\n    value: function parseExpressionStatement(node, expr) {\n      node.expression = expr;\n      this.semicolon();\n      return this.finishNode(node, \"ExpressionStatement\");\n    }\n  }, {\n    key: \"parseBlock\",\n    value: function parseBlock() {\n      var allowDirectives = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var createNewLexicalScope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var afterBlockParse = arguments.length > 2 ? arguments[2] : undefined;\n      var node = this.startNode();\n      this.expect(types.braceL);\n\n      if (createNewLexicalScope) {\n        this.scope.enter(SCOPE_OTHER);\n      }\n\n      this.parseBlockBody(node, allowDirectives, false, types.braceR, afterBlockParse);\n\n      if (createNewLexicalScope) {\n        this.scope.exit();\n      }\n\n      return this.finishNode(node, \"BlockStatement\");\n    }\n  }, {\n    key: \"isValidDirective\",\n    value: function isValidDirective(stmt) {\n      return stmt.type === \"ExpressionStatement\" && stmt.expression.type === \"StringLiteral\" && !stmt.expression.extra.parenthesized;\n    }\n  }, {\n    key: \"parseBlockBody\",\n    value: function parseBlockBody(node, allowDirectives, topLevel, end, afterBlockParse) {\n      var body = node.body = [];\n      var directives = node.directives = [];\n      this.parseBlockOrModuleBlockBody(body, allowDirectives ? directives : undefined, topLevel, end, afterBlockParse);\n    }\n  }, {\n    key: \"parseBlockOrModuleBlockBody\",\n    value: function parseBlockOrModuleBlockBody(body, directives, topLevel, end, afterBlockParse) {\n      var octalPositions = [];\n      var oldStrict = this.state.strict;\n      var hasStrictModeDirective = false;\n      var parsedNonDirective = false;\n\n      while (!this.match(end)) {\n        if (!parsedNonDirective && this.state.octalPositions.length) {\n          octalPositions.push.apply(octalPositions, _toConsumableArray(this.state.octalPositions));\n        }\n\n        var stmt = this.parseStatement(null, topLevel);\n\n        if (directives && !parsedNonDirective && this.isValidDirective(stmt)) {\n          var directive = this.stmtToDirective(stmt);\n          directives.push(directive);\n\n          if (!hasStrictModeDirective && directive.value.value === \"use strict\") {\n            hasStrictModeDirective = true;\n            this.setStrict(true);\n          }\n\n          continue;\n        }\n\n        parsedNonDirective = true;\n        body.push(stmt);\n      }\n\n      if (this.state.strict && octalPositions.length) {\n        for (var _i3 = 0; _i3 < octalPositions.length; _i3++) {\n          var pos = octalPositions[_i3];\n          this.raise(pos, ErrorMessages.StrictOctalLiteral);\n        }\n      }\n\n      if (afterBlockParse) {\n        afterBlockParse.call(this, hasStrictModeDirective);\n      }\n\n      if (!oldStrict) {\n        this.setStrict(false);\n      }\n\n      this.next();\n    }\n  }, {\n    key: \"parseFor\",\n    value: function parseFor(node, init) {\n      var _this51 = this;\n\n      node.init = init;\n      this.expect(types.semi);\n      node.test = this.match(types.semi) ? null : this.parseExpression();\n      this.expect(types.semi);\n      node.update = this.match(types.parenR) ? null : this.parseExpression();\n      this.expect(types.parenR);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this51.parseStatement(\"for\");\n      });\n      this.scope.exit();\n      this.state.labels.pop();\n      return this.finishNode(node, \"ForStatement\");\n    }\n  }, {\n    key: \"parseForIn\",\n    value: function parseForIn(node, init, awaitAt) {\n      var _this52 = this;\n\n      var isForIn = this.match(types._in);\n      this.next();\n\n      if (isForIn) {\n        if (awaitAt > -1) this.unexpected(awaitAt);\n      } else {\n        node.await = awaitAt > -1;\n      }\n\n      if (init.type === \"VariableDeclaration\" && init.declarations[0].init != null && (!isForIn || this.state.strict || init.kind !== \"var\" || init.declarations[0].id.type !== \"Identifier\")) {\n        this.raise(init.start, ErrorMessages.ForInOfLoopInitializer, isForIn ? \"for-in\" : \"for-of\");\n      } else if (init.type === \"AssignmentPattern\") {\n        this.raise(init.start, ErrorMessages.InvalidLhs, \"for-loop\");\n      }\n\n      node.left = init;\n      node.right = isForIn ? this.parseExpression() : this.parseMaybeAssignAllowIn();\n      this.expect(types.parenR);\n      node.body = this.withTopicForbiddingContext(function () {\n        return _this52.parseStatement(\"for\");\n      });\n      this.scope.exit();\n      this.state.labels.pop();\n      return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\");\n    }\n  }, {\n    key: \"parseVar\",\n    value: function parseVar(node, isFor, kind) {\n      var declarations = node.declarations = [];\n      var isTypescript = this.hasPlugin(\"typescript\");\n      node.kind = kind;\n\n      for (;;) {\n        var decl = this.startNode();\n        this.parseVarId(decl, kind);\n\n        if (this.eat(types.eq)) {\n          decl.init = isFor ? this.parseMaybeAssignDisallowIn() : this.parseMaybeAssignAllowIn();\n        } else {\n          if (kind === \"const\" && !(this.match(types._in) || this.isContextual(\"of\"))) {\n            if (!isTypescript) {\n              this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Const declarations\");\n            }\n          } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.match(types._in) || this.isContextual(\"of\")))) {\n            this.raise(this.state.lastTokEnd, ErrorMessages.DeclarationMissingInitializer, \"Complex binding patterns\");\n          }\n\n          decl.init = null;\n        }\n\n        declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n        if (!this.eat(types.comma)) break;\n      }\n\n      return node;\n    }\n  }, {\n    key: \"parseVarId\",\n    value: function parseVarId(decl, kind) {\n      decl.id = this.parseBindingAtom();\n      this.checkLVal(decl.id, \"variable declaration\", kind === \"var\" ? BIND_VAR : BIND_LEXICAL, undefined, kind !== \"var\");\n    }\n  }, {\n    key: \"parseFunction\",\n    value: function parseFunction(node) {\n      var _this53 = this;\n\n      var statement = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FUNC_NO_FLAGS;\n      var isAsync = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var isStatement = statement & FUNC_STATEMENT;\n      var isHangingStatement = statement & FUNC_HANGING_STATEMENT;\n      var requireId = !!isStatement && !(statement & FUNC_NULLABLE_ID);\n      this.initFunction(node, isAsync);\n\n      if (this.match(types.star) && isHangingStatement) {\n        this.raise(this.state.start, ErrorMessages.GeneratorInSingleStatementContext);\n      }\n\n      node.generator = this.eat(types.star);\n\n      if (isStatement) {\n        node.id = this.parseFunctionId(requireId);\n      }\n\n      var oldMaybeInArrowParameters = this.state.maybeInArrowParameters;\n      this.state.maybeInArrowParameters = false;\n      this.scope.enter(SCOPE_FUNCTION);\n      this.prodParam.enter(functionFlags(isAsync, node.generator));\n\n      if (!isStatement) {\n        node.id = this.parseFunctionId();\n      }\n\n      this.parseFunctionParams(node, false);\n      this.withTopicForbiddingContext(function () {\n        _this53.parseFunctionBodyAndFinish(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\");\n      });\n      this.prodParam.exit();\n      this.scope.exit();\n\n      if (isStatement && !isHangingStatement) {\n        this.registerFunctionStatementId(node);\n      }\n\n      this.state.maybeInArrowParameters = oldMaybeInArrowParameters;\n      return node;\n    }\n  }, {\n    key: \"parseFunctionId\",\n    value: function parseFunctionId(requireId) {\n      return requireId || this.match(types.name) ? this.parseIdentifier() : null;\n    }\n  }, {\n    key: \"parseFunctionParams\",\n    value: function parseFunctionParams(node, allowModifiers) {\n      this.expect(types.parenL);\n      this.expressionScope.enter(newParameterDeclarationScope());\n      node.params = this.parseBindingList(types.parenR, 41, false, allowModifiers);\n      this.expressionScope.exit();\n    }\n  }, {\n    key: \"registerFunctionStatementId\",\n    value: function registerFunctionStatementId(node) {\n      if (!node.id) return;\n      this.scope.declareName(node.id.name, this.state.strict || node.generator || node.async ? this.scope.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION, node.id.start);\n    }\n  }, {\n    key: \"parseClass\",\n    value: function parseClass(node, isStatement, optionalId) {\n      this.next();\n      this.takeDecorators(node);\n      var oldStrict = this.state.strict;\n      this.state.strict = true;\n      this.parseClassId(node, isStatement, optionalId);\n      this.parseClassSuper(node);\n      node.body = this.parseClassBody(!!node.superClass, oldStrict);\n      return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\");\n    }\n  }, {\n    key: \"isClassProperty\",\n    value: function isClassProperty() {\n      return this.match(types.eq) || this.match(types.semi) || this.match(types.braceR);\n    }\n  }, {\n    key: \"isClassMethod\",\n    value: function isClassMethod() {\n      return this.match(types.parenL);\n    }\n  }, {\n    key: \"isNonstaticConstructor\",\n    value: function isNonstaticConstructor(method) {\n      return !method.computed && !method.static && (method.key.name === \"constructor\" || method.key.value === \"constructor\");\n    }\n  }, {\n    key: \"parseClassBody\",\n    value: function parseClassBody(constructorAllowsSuper, oldStrict) {\n      var _this54 = this;\n\n      this.classScope.enter();\n      var state = {\n        constructorAllowsSuper: constructorAllowsSuper,\n        hadConstructor: false,\n        hadStaticBlock: false\n      };\n      var decorators = [];\n      var classBody = this.startNode();\n      classBody.body = [];\n      this.expect(types.braceL);\n      this.withTopicForbiddingContext(function () {\n        while (!_this54.match(types.braceR)) {\n          if (_this54.eat(types.semi)) {\n            if (decorators.length > 0) {\n              throw _this54.raise(_this54.state.lastTokEnd, ErrorMessages.DecoratorSemicolon);\n            }\n\n            continue;\n          }\n\n          if (_this54.match(types.at)) {\n            decorators.push(_this54.parseDecorator());\n            continue;\n          }\n\n          var member = _this54.startNode();\n\n          if (decorators.length) {\n            member.decorators = decorators;\n\n            _this54.resetStartLocationFromNode(member, decorators[0]);\n\n            decorators = [];\n          }\n\n          _this54.parseClassMember(classBody, member, state);\n\n          if (member.kind === \"constructor\" && member.decorators && member.decorators.length > 0) {\n            _this54.raise(member.start, ErrorMessages.DecoratorConstructor);\n          }\n        }\n      });\n      this.state.strict = oldStrict;\n      this.next();\n\n      if (decorators.length) {\n        throw this.raise(this.state.start, ErrorMessages.TrailingDecorator);\n      }\n\n      this.classScope.exit();\n      return this.finishNode(classBody, \"ClassBody\");\n    }\n  }, {\n    key: \"parseClassMemberFromModifier\",\n    value: function parseClassMemberFromModifier(classBody, member) {\n      var key = this.parseIdentifier(true);\n\n      if (this.isClassMethod()) {\n        var method = member;\n        method.kind = \"method\";\n        method.computed = false;\n        method.key = key;\n        method.static = false;\n        this.pushClassMethod(classBody, method, false, false, false, false);\n        return true;\n      } else if (this.isClassProperty()) {\n        var prop = member;\n        prop.computed = false;\n        prop.key = key;\n        prop.static = false;\n        classBody.body.push(this.parseClassProperty(prop));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseClassMember\",\n    value: function parseClassMember(classBody, member, state) {\n      var isStatic = this.isContextual(\"static\");\n\n      if (isStatic) {\n        if (this.parseClassMemberFromModifier(classBody, member)) {\n          return;\n        }\n\n        if (this.eat(types.braceL)) {\n          this.parseClassStaticBlock(classBody, member, state);\n          return;\n        }\n      }\n\n      this.parseClassMemberWithIsStatic(classBody, member, state, isStatic);\n    }\n  }, {\n    key: \"parseClassMemberWithIsStatic\",\n    value: function parseClassMemberWithIsStatic(classBody, member, state, isStatic) {\n      var publicMethod = member;\n      var privateMethod = member;\n      var publicProp = member;\n      var privateProp = member;\n      var method = publicMethod;\n      var publicMember = publicMethod;\n      member.static = isStatic;\n\n      if (this.eat(types.star)) {\n        method.kind = \"method\";\n        this.parseClassElementName(method);\n\n        if (method.key.type === \"PrivateName\") {\n          this.pushClassPrivateMethod(classBody, privateMethod, true, false);\n          return;\n        }\n\n        if (this.isNonstaticConstructor(publicMethod)) {\n          this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsGenerator);\n        }\n\n        this.pushClassMethod(classBody, publicMethod, true, false, false, false);\n        return;\n      }\n\n      var containsEsc = this.state.containsEsc;\n      var key = this.parseClassElementName(member);\n      var isPrivate = key.type === \"PrivateName\";\n      var isSimple = key.type === \"Identifier\";\n      var maybeQuestionTokenStart = this.state.start;\n      this.parsePostMemberNameModifiers(publicMember);\n\n      if (this.isClassMethod()) {\n        method.kind = \"method\";\n\n        if (isPrivate) {\n          this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n          return;\n        }\n\n        var isConstructor = this.isNonstaticConstructor(publicMethod);\n        var allowsDirectSuper = false;\n\n        if (isConstructor) {\n          publicMethod.kind = \"constructor\";\n\n          if (state.hadConstructor && !this.hasPlugin(\"typescript\")) {\n            this.raise(key.start, ErrorMessages.DuplicateConstructor);\n          }\n\n          state.hadConstructor = true;\n          allowsDirectSuper = state.constructorAllowsSuper;\n        }\n\n        this.pushClassMethod(classBody, publicMethod, false, false, isConstructor, allowsDirectSuper);\n      } else if (this.isClassProperty()) {\n        if (isPrivate) {\n          this.pushClassPrivateProperty(classBody, privateProp);\n        } else {\n          this.pushClassProperty(classBody, publicProp);\n        }\n      } else if (isSimple && key.name === \"async\" && !containsEsc && !this.isLineTerminator()) {\n        var isGenerator = this.eat(types.star);\n\n        if (publicMember.optional) {\n          this.unexpected(maybeQuestionTokenStart);\n        }\n\n        method.kind = \"method\";\n        this.parseClassElementName(method);\n        this.parsePostMemberNameModifiers(publicMember);\n\n        if (method.key.type === \"PrivateName\") {\n          this.pushClassPrivateMethod(classBody, privateMethod, isGenerator, true);\n        } else {\n          if (this.isNonstaticConstructor(publicMethod)) {\n            this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAsync);\n          }\n\n          this.pushClassMethod(classBody, publicMethod, isGenerator, true, false, false);\n        }\n      } else if (isSimple && (key.name === \"get\" || key.name === \"set\") && !containsEsc && !(this.match(types.star) && this.isLineTerminator())) {\n        method.kind = key.name;\n        this.parseClassElementName(publicMethod);\n\n        if (method.key.type === \"PrivateName\") {\n          this.pushClassPrivateMethod(classBody, privateMethod, false, false);\n        } else {\n          if (this.isNonstaticConstructor(publicMethod)) {\n            this.raise(publicMethod.key.start, ErrorMessages.ConstructorIsAccessor);\n          }\n\n          this.pushClassMethod(classBody, publicMethod, false, false, false, false);\n        }\n\n        this.checkGetterSetterParams(publicMethod);\n      } else if (this.isLineTerminator()) {\n        if (isPrivate) {\n          this.pushClassPrivateProperty(classBody, privateProp);\n        } else {\n          this.pushClassProperty(classBody, publicProp);\n        }\n      } else {\n        this.unexpected();\n      }\n    }\n  }, {\n    key: \"parseClassElementName\",\n    value: function parseClassElementName(member) {\n      var key = this.parsePropertyName(member, true);\n\n      if (!member.computed && member.static && (key.name === \"prototype\" || key.value === \"prototype\")) {\n        this.raise(key.start, ErrorMessages.StaticPrototype);\n      }\n\n      if (key.type === \"PrivateName\" && key.id.name === \"constructor\") {\n        this.raise(key.start, ErrorMessages.ConstructorClassPrivateField);\n      }\n\n      return key;\n    }\n  }, {\n    key: \"parseClassStaticBlock\",\n    value: function parseClassStaticBlock(classBody, member, state) {\n      var _member$decorators;\n\n      this.expectPlugin(\"classStaticBlock\", member.start);\n      this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n      this.expressionScope.enter(newExpressionScope());\n      var oldLabels = this.state.labels;\n      this.state.labels = [];\n      this.prodParam.enter(PARAM);\n      var body = member.body = [];\n      this.parseBlockOrModuleBlockBody(body, undefined, false, types.braceR);\n      this.prodParam.exit();\n      this.expressionScope.exit();\n      this.scope.exit();\n      this.state.labels = oldLabels;\n      classBody.body.push(this.finishNode(member, \"StaticBlock\"));\n\n      if (state.hadStaticBlock) {\n        this.raise(member.start, ErrorMessages.DuplicateStaticBlock);\n      }\n\n      if ((_member$decorators = member.decorators) == null ? void 0 : _member$decorators.length) {\n        this.raise(member.start, ErrorMessages.DecoratorStaticBlock);\n      }\n\n      state.hadStaticBlock = true;\n    }\n  }, {\n    key: \"pushClassProperty\",\n    value: function pushClassProperty(classBody, prop) {\n      if (!prop.computed && (prop.key.name === \"constructor\" || prop.key.value === \"constructor\")) {\n        this.raise(prop.key.start, ErrorMessages.ConstructorClassField);\n      }\n\n      classBody.body.push(this.parseClassProperty(prop));\n    }\n  }, {\n    key: \"pushClassPrivateProperty\",\n    value: function pushClassPrivateProperty(classBody, prop) {\n      this.expectPlugin(\"classPrivateProperties\", prop.key.start);\n      var node = this.parseClassPrivateProperty(prop);\n      classBody.body.push(node);\n      this.classScope.declarePrivateName(node.key.id.name, CLASS_ELEMENT_OTHER, node.key.start);\n    }\n  }, {\n    key: \"pushClassMethod\",\n    value: function pushClassMethod(classBody, method, isGenerator, isAsync, isConstructor, allowsDirectSuper) {\n      classBody.body.push(this.parseMethod(method, isGenerator, isAsync, isConstructor, allowsDirectSuper, \"ClassMethod\", true));\n    }\n  }, {\n    key: \"pushClassPrivateMethod\",\n    value: function pushClassPrivateMethod(classBody, method, isGenerator, isAsync) {\n      this.expectPlugin(\"classPrivateMethods\", method.key.start);\n      var node = this.parseMethod(method, isGenerator, isAsync, false, false, \"ClassPrivateMethod\", true);\n      classBody.body.push(node);\n      var kind = node.kind === \"get\" ? node.static ? CLASS_ELEMENT_STATIC_GETTER : CLASS_ELEMENT_INSTANCE_GETTER : node.kind === \"set\" ? node.static ? CLASS_ELEMENT_STATIC_SETTER : CLASS_ELEMENT_INSTANCE_SETTER : CLASS_ELEMENT_OTHER;\n      this.classScope.declarePrivateName(node.key.id.name, kind, node.key.start);\n    }\n  }, {\n    key: \"parsePostMemberNameModifiers\",\n    value: function parsePostMemberNameModifiers(methodOrProp) {}\n  }, {\n    key: \"parseClassPrivateProperty\",\n    value: function parseClassPrivateProperty(node) {\n      this.parseInitializer(node);\n      this.semicolon();\n      return this.finishNode(node, \"ClassPrivateProperty\");\n    }\n  }, {\n    key: \"parseClassProperty\",\n    value: function parseClassProperty(node) {\n      if (!node.typeAnnotation || this.match(types.eq)) {\n        this.expectPlugin(\"classProperties\");\n      }\n\n      this.parseInitializer(node);\n      this.semicolon();\n      return this.finishNode(node, \"ClassProperty\");\n    }\n  }, {\n    key: \"parseInitializer\",\n    value: function parseInitializer(node) {\n      this.scope.enter(SCOPE_CLASS | SCOPE_SUPER);\n      this.expressionScope.enter(newExpressionScope());\n      this.prodParam.enter(PARAM);\n      node.value = this.eat(types.eq) ? this.parseMaybeAssignAllowIn() : null;\n      this.expressionScope.exit();\n      this.prodParam.exit();\n      this.scope.exit();\n    }\n  }, {\n    key: \"parseClassId\",\n    value: function parseClassId(node, isStatement, optionalId) {\n      var bindingType = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : BIND_CLASS;\n\n      if (this.match(types.name)) {\n        node.id = this.parseIdentifier();\n\n        if (isStatement) {\n          this.checkLVal(node.id, \"class name\", bindingType);\n        }\n      } else {\n        if (optionalId || !isStatement) {\n          node.id = null;\n        } else {\n          this.unexpected(null, ErrorMessages.MissingClassName);\n        }\n      }\n    }\n  }, {\n    key: \"parseClassSuper\",\n    value: function parseClassSuper(node) {\n      node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n    }\n  }, {\n    key: \"parseExport\",\n    value: function parseExport(node) {\n      var hasDefault = this.maybeParseExportDefaultSpecifier(node);\n      var parseAfterDefault = !hasDefault || this.eat(types.comma);\n      var hasStar = parseAfterDefault && this.eatExportStar(node);\n      var hasNamespace = hasStar && this.maybeParseExportNamespaceSpecifier(node);\n      var parseAfterNamespace = parseAfterDefault && (!hasNamespace || this.eat(types.comma));\n      var isFromRequired = hasDefault || hasStar;\n\n      if (hasStar && !hasNamespace) {\n        if (hasDefault) this.unexpected();\n        this.parseExportFrom(node, true);\n        return this.finishNode(node, \"ExportAllDeclaration\");\n      }\n\n      var hasSpecifiers = this.maybeParseExportNamedSpecifiers(node);\n\n      if (hasDefault && parseAfterDefault && !hasStar && !hasSpecifiers || hasNamespace && parseAfterNamespace && !hasSpecifiers) {\n        throw this.unexpected(null, types.braceL);\n      }\n\n      var hasDeclaration;\n\n      if (isFromRequired || hasSpecifiers) {\n        hasDeclaration = false;\n        this.parseExportFrom(node, isFromRequired);\n      } else {\n        hasDeclaration = this.maybeParseExportDeclaration(node);\n      }\n\n      if (isFromRequired || hasSpecifiers || hasDeclaration) {\n        this.checkExport(node, true, false, !!node.source);\n        return this.finishNode(node, \"ExportNamedDeclaration\");\n      }\n\n      if (this.eat(types._default)) {\n        node.declaration = this.parseExportDefaultExpression();\n        this.checkExport(node, true, true);\n        return this.finishNode(node, \"ExportDefaultDeclaration\");\n      }\n\n      throw this.unexpected(null, types.braceL);\n    }\n  }, {\n    key: \"eatExportStar\",\n    value: function eatExportStar(node) {\n      return this.eat(types.star);\n    }\n  }, {\n    key: \"maybeParseExportDefaultSpecifier\",\n    value: function maybeParseExportDefaultSpecifier(node) {\n      if (this.isExportDefaultSpecifier()) {\n        this.expectPlugin(\"exportDefaultFrom\");\n        var specifier = this.startNode();\n        specifier.exported = this.parseIdentifier(true);\n        node.specifiers = [this.finishNode(specifier, \"ExportDefaultSpecifier\")];\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportNamespaceSpecifier\",\n    value: function maybeParseExportNamespaceSpecifier(node) {\n      if (this.isContextual(\"as\")) {\n        if (!node.specifiers) node.specifiers = [];\n        var specifier = this.startNodeAt(this.state.lastTokStart, this.state.lastTokStartLoc);\n        this.next();\n        specifier.exported = this.parseModuleExportName();\n        node.specifiers.push(this.finishNode(specifier, \"ExportNamespaceSpecifier\"));\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportNamedSpecifiers\",\n    value: function maybeParseExportNamedSpecifiers(node) {\n      if (this.match(types.braceL)) {\n        var _node$specifiers2;\n\n        if (!node.specifiers) node.specifiers = [];\n\n        (_node$specifiers2 = node.specifiers).push.apply(_node$specifiers2, _toConsumableArray(this.parseExportSpecifiers()));\n\n        node.source = null;\n        node.declaration = null;\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseExportDeclaration\",\n    value: function maybeParseExportDeclaration(node) {\n      if (this.shouldParseExportDeclaration()) {\n        node.specifiers = [];\n        node.source = null;\n        node.declaration = this.parseExportDeclaration(node);\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isAsyncFunction\",\n    value: function isAsyncFunction() {\n      if (!this.isContextual(\"async\")) return false;\n      var next = this.nextTokenStart();\n      return !lineBreak.test(this.input.slice(this.state.pos, next)) && this.isUnparsedContextual(next, \"function\");\n    }\n  }, {\n    key: \"parseExportDefaultExpression\",\n    value: function parseExportDefaultExpression() {\n      var expr = this.startNode();\n      var isAsync = this.isAsyncFunction();\n\n      if (this.match(types._function) || isAsync) {\n        this.next();\n\n        if (isAsync) {\n          this.next();\n        }\n\n        return this.parseFunction(expr, FUNC_STATEMENT | FUNC_NULLABLE_ID, isAsync);\n      } else if (this.match(types._class)) {\n        return this.parseClass(expr, true, true);\n      } else if (this.match(types.at)) {\n        if (this.hasPlugin(\"decorators\") && this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n          this.raise(this.state.start, ErrorMessages.DecoratorBeforeExport);\n        }\n\n        this.parseDecorators(false);\n        return this.parseClass(expr, true, true);\n      } else if (this.match(types._const) || this.match(types._var) || this.isLet()) {\n        throw this.raise(this.state.start, ErrorMessages.UnsupportedDefaultExport);\n      } else {\n        var res = this.parseMaybeAssignAllowIn();\n        this.semicolon();\n        return res;\n      }\n    }\n  }, {\n    key: \"parseExportDeclaration\",\n    value: function parseExportDeclaration(node) {\n      return this.parseStatement(null);\n    }\n  }, {\n    key: \"isExportDefaultSpecifier\",\n    value: function isExportDefaultSpecifier() {\n      if (this.match(types.name)) {\n        var value = this.state.value;\n\n        if (value === \"async\" && !this.state.containsEsc || value === \"let\") {\n          return false;\n        }\n\n        if ((value === \"type\" || value === \"interface\") && !this.state.containsEsc) {\n          var l = this.lookahead();\n\n          if (l.type === types.name && l.value !== \"from\" || l.type === types.braceL) {\n            this.expectOnePlugin([\"flow\", \"typescript\"]);\n            return false;\n          }\n        }\n      } else if (!this.match(types._default)) {\n        return false;\n      }\n\n      var next = this.nextTokenStart();\n      var hasFrom = this.isUnparsedContextual(next, \"from\");\n\n      if (this.input.charCodeAt(next) === 44 || this.match(types.name) && hasFrom) {\n        return true;\n      }\n\n      if (this.match(types._default) && hasFrom) {\n        var nextAfterFrom = this.input.charCodeAt(this.nextTokenStartSince(next + 4));\n        return nextAfterFrom === 34 || nextAfterFrom === 39;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseExportFrom\",\n    value: function parseExportFrom(node, expect) {\n      if (this.eatContextual(\"from\")) {\n        node.source = this.parseImportSource();\n        this.checkExport(node);\n        var assertions = this.maybeParseImportAssertions();\n\n        if (assertions) {\n          node.assertions = assertions;\n        }\n      } else {\n        if (expect) {\n          this.unexpected();\n        } else {\n          node.source = null;\n        }\n      }\n\n      this.semicolon();\n    }\n  }, {\n    key: \"shouldParseExportDeclaration\",\n    value: function shouldParseExportDeclaration() {\n      if (this.match(types.at)) {\n        this.expectOnePlugin([\"decorators\", \"decorators-legacy\"]);\n\n        if (this.hasPlugin(\"decorators\")) {\n          if (this.getPluginOption(\"decorators\", \"decoratorsBeforeExport\")) {\n            this.unexpected(this.state.start, ErrorMessages.DecoratorBeforeExport);\n          } else {\n            return true;\n          }\n        }\n      }\n\n      return this.state.type.keyword === \"var\" || this.state.type.keyword === \"const\" || this.state.type.keyword === \"function\" || this.state.type.keyword === \"class\" || this.isLet() || this.isAsyncFunction();\n    }\n  }, {\n    key: \"checkExport\",\n    value: function checkExport(node, checkNames, isDefault, isFrom) {\n      if (checkNames) {\n        if (isDefault) {\n          this.checkDuplicateExports(node, \"default\");\n\n          if (this.hasPlugin(\"exportDefaultFrom\")) {\n            var _declaration$extra;\n\n            var declaration = node.declaration;\n\n            if (declaration.type === \"Identifier\" && declaration.name === \"from\" && declaration.end - declaration.start === 4 && !((_declaration$extra = declaration.extra) == null ? void 0 : _declaration$extra.parenthesized)) {\n              this.raise(declaration.start, ErrorMessages.ExportDefaultFromAsIdentifier);\n            }\n          }\n        } else if (node.specifiers && node.specifiers.length) {\n          for (var _i4 = 0, _node$specifiers = node.specifiers; _i4 < _node$specifiers.length; _i4++) {\n            var specifier = _node$specifiers[_i4];\n            var exported = specifier.exported;\n            var exportedName = exported.type === \"Identifier\" ? exported.name : exported.value;\n            this.checkDuplicateExports(specifier, exportedName);\n\n            if (!isFrom && specifier.local) {\n              var local = specifier.local;\n\n              if (local.type === \"StringLiteral\") {\n                this.raise(specifier.start, ErrorMessages.ExportBindingIsString, local.extra.raw, exportedName);\n              } else {\n                this.checkReservedWord(local.name, local.start, true, false);\n                this.scope.checkLocalExport(local);\n              }\n            }\n          }\n        } else if (node.declaration) {\n          if (node.declaration.type === \"FunctionDeclaration\" || node.declaration.type === \"ClassDeclaration\") {\n            var id = node.declaration.id;\n            if (!id) throw new Error(\"Assertion failure\");\n            this.checkDuplicateExports(node, id.name);\n          } else if (node.declaration.type === \"VariableDeclaration\") {\n            for (var _i5 = 0, _node$declaration$dec = node.declaration.declarations; _i5 < _node$declaration$dec.length; _i5++) {\n              var _declaration = _node$declaration$dec[_i5];\n              this.checkDeclaration(_declaration.id);\n            }\n          }\n        }\n      }\n\n      var currentContextDecorators = this.state.decoratorStack[this.state.decoratorStack.length - 1];\n\n      if (currentContextDecorators.length) {\n        throw this.raise(node.start, ErrorMessages.UnsupportedDecoratorExport);\n      }\n    }\n  }, {\n    key: \"checkDeclaration\",\n    value: function checkDeclaration(node) {\n      if (node.type === \"Identifier\") {\n        this.checkDuplicateExports(node, node.name);\n      } else if (node.type === \"ObjectPattern\") {\n        for (var _i6 = 0, _node$properties = node.properties; _i6 < _node$properties.length; _i6++) {\n          var prop = _node$properties[_i6];\n          this.checkDeclaration(prop);\n        }\n      } else if (node.type === \"ArrayPattern\") {\n        for (var _i7 = 0, _node$elements = node.elements; _i7 < _node$elements.length; _i7++) {\n          var elem = _node$elements[_i7];\n\n          if (elem) {\n            this.checkDeclaration(elem);\n          }\n        }\n      } else if (node.type === \"ObjectProperty\") {\n        this.checkDeclaration(node.value);\n      } else if (node.type === \"RestElement\") {\n        this.checkDeclaration(node.argument);\n      } else if (node.type === \"AssignmentPattern\") {\n        this.checkDeclaration(node.left);\n      }\n    }\n  }, {\n    key: \"checkDuplicateExports\",\n    value: function checkDuplicateExports(node, name) {\n      if (this.state.exportedIdentifiers.indexOf(name) > -1) {\n        this.raise(node.start, name === \"default\" ? ErrorMessages.DuplicateDefaultExport : ErrorMessages.DuplicateExport, name);\n      }\n\n      this.state.exportedIdentifiers.push(name);\n    }\n  }, {\n    key: \"parseExportSpecifiers\",\n    value: function parseExportSpecifiers() {\n      var nodes = [];\n      var first = true;\n      this.expect(types.braceL);\n\n      while (!this.eat(types.braceR)) {\n        if (first) {\n          first = false;\n        } else {\n          this.expect(types.comma);\n          if (this.eat(types.braceR)) break;\n        }\n\n        var node = this.startNode();\n        node.local = this.parseModuleExportName();\n        node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local.__clone();\n        nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n      }\n\n      return nodes;\n    }\n  }, {\n    key: \"parseModuleExportName\",\n    value: function parseModuleExportName() {\n      if (this.match(types.string)) {\n        this.expectPlugin(\"moduleStringNames\");\n        var result = this.parseLiteral(this.state.value, \"StringLiteral\");\n        var surrogate = result.value.match(loneSurrogate);\n\n        if (surrogate) {\n          this.raise(result.start, ErrorMessages.ModuleExportNameHasLoneSurrogate, surrogate[0].charCodeAt(0).toString(16));\n        }\n\n        return result;\n      }\n\n      return this.parseIdentifier(true);\n    }\n  }, {\n    key: \"parseImport\",\n    value: function parseImport(node) {\n      node.specifiers = [];\n\n      if (!this.match(types.string)) {\n        var hasDefault = this.maybeParseDefaultImportSpecifier(node);\n        var parseNext = !hasDefault || this.eat(types.comma);\n        var hasStar = parseNext && this.maybeParseStarImportSpecifier(node);\n        if (parseNext && !hasStar) this.parseNamedImportSpecifiers(node);\n        this.expectContextual(\"from\");\n      }\n\n      node.source = this.parseImportSource();\n      var assertions = this.maybeParseImportAssertions();\n\n      if (assertions) {\n        node.assertions = assertions;\n      } else {\n        var attributes = this.maybeParseModuleAttributes();\n\n        if (attributes) {\n          node.attributes = attributes;\n        }\n      }\n\n      this.semicolon();\n      return this.finishNode(node, \"ImportDeclaration\");\n    }\n  }, {\n    key: \"parseImportSource\",\n    value: function parseImportSource() {\n      if (!this.match(types.string)) this.unexpected();\n      return this.parseExprAtom();\n    }\n  }, {\n    key: \"shouldParseDefaultImport\",\n    value: function shouldParseDefaultImport(node) {\n      return this.match(types.name);\n    }\n  }, {\n    key: \"parseImportSpecifierLocal\",\n    value: function parseImportSpecifierLocal(node, specifier, type, contextDescription) {\n      specifier.local = this.parseIdentifier();\n      this.checkLVal(specifier.local, contextDescription, BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, type));\n    }\n  }, {\n    key: \"parseAssertEntries\",\n    value: function parseAssertEntries() {\n      var attrs = [];\n      var attrNames = new Set();\n\n      do {\n        if (this.match(types.braceR)) {\n          break;\n        }\n\n        var node = this.startNode();\n        var keyName = this.state.value;\n\n        if (this.match(types.string)) {\n          node.key = this.parseLiteral(keyName, \"StringLiteral\");\n        } else {\n          node.key = this.parseIdentifier(true);\n        }\n\n        this.expect(types.colon);\n\n        if (keyName !== \"type\") {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, keyName);\n        }\n\n        if (attrNames.has(keyName)) {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, keyName);\n        }\n\n        attrNames.add(keyName);\n\n        if (!this.match(types.string)) {\n          throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n        }\n\n        node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n        this.finishNode(node, \"ImportAttribute\");\n        attrs.push(node);\n      } while (this.eat(types.comma));\n\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseModuleAttributes\",\n    value: function maybeParseModuleAttributes() {\n      if (this.match(types._with) && !this.hasPrecedingLineBreak()) {\n        this.expectPlugin(\"moduleAttributes\");\n        this.next();\n      } else {\n        if (this.hasPlugin(\"moduleAttributes\")) return [];\n        return null;\n      }\n\n      var attrs = [];\n      var attributes = new Set();\n\n      do {\n        var node = this.startNode();\n        node.key = this.parseIdentifier(true);\n\n        if (node.key.name !== \"type\") {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributeDifferentFromType, node.key.name);\n        }\n\n        if (attributes.has(node.key.name)) {\n          this.raise(node.key.start, ErrorMessages.ModuleAttributesWithDuplicateKeys, node.key.name);\n        }\n\n        attributes.add(node.key.name);\n        this.expect(types.colon);\n\n        if (!this.match(types.string)) {\n          throw this.unexpected(this.state.start, ErrorMessages.ModuleAttributeInvalidValue);\n        }\n\n        node.value = this.parseLiteral(this.state.value, \"StringLiteral\");\n        this.finishNode(node, \"ImportAttribute\");\n        attrs.push(node);\n      } while (this.eat(types.comma));\n\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseImportAssertions\",\n    value: function maybeParseImportAssertions() {\n      if (this.isContextual(\"assert\") && !this.hasPrecedingLineBreak()) {\n        this.expectPlugin(\"importAssertions\");\n        this.next();\n      } else {\n        if (this.hasPlugin(\"importAssertions\")) return [];\n        return null;\n      }\n\n      this.eat(types.braceL);\n      var attrs = this.parseAssertEntries();\n      this.eat(types.braceR);\n      return attrs;\n    }\n  }, {\n    key: \"maybeParseDefaultImportSpecifier\",\n    value: function maybeParseDefaultImportSpecifier(node) {\n      if (this.shouldParseDefaultImport(node)) {\n        this.parseImportSpecifierLocal(node, this.startNode(), \"ImportDefaultSpecifier\", \"default import specifier\");\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"maybeParseStarImportSpecifier\",\n    value: function maybeParseStarImportSpecifier(node) {\n      if (this.match(types.star)) {\n        var specifier = this.startNode();\n        this.next();\n        this.expectContextual(\"as\");\n        this.parseImportSpecifierLocal(node, specifier, \"ImportNamespaceSpecifier\", \"import namespace specifier\");\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"parseNamedImportSpecifiers\",\n    value: function parseNamedImportSpecifiers(node) {\n      var first = true;\n      this.expect(types.braceL);\n\n      while (!this.eat(types.braceR)) {\n        if (first) {\n          first = false;\n        } else {\n          if (this.eat(types.colon)) {\n            throw this.raise(this.state.start, ErrorMessages.DestructureNamedImport);\n          }\n\n          this.expect(types.comma);\n          if (this.eat(types.braceR)) break;\n        }\n\n        this.parseImportSpecifier(node);\n      }\n    }\n  }, {\n    key: \"parseImportSpecifier\",\n    value: function parseImportSpecifier(node) {\n      var specifier = this.startNode();\n      specifier.imported = this.parseModuleExportName();\n\n      if (this.eatContextual(\"as\")) {\n        specifier.local = this.parseIdentifier();\n      } else {\n        var imported = specifier.imported;\n\n        if (imported.type === \"StringLiteral\") {\n          throw this.raise(specifier.start, ErrorMessages.ImportBindingIsString, imported.value);\n        }\n\n        this.checkReservedWord(imported.name, specifier.start, true, true);\n        specifier.local = imported.__clone();\n      }\n\n      this.checkLVal(specifier.local, \"import specifier\", BIND_LEXICAL);\n      node.specifiers.push(this.finishNode(specifier, \"ImportSpecifier\"));\n    }\n  }]);\n\n  return StatementParser;\n}(ExpressionParser);\n\nvar ClassScope = function ClassScope() {\n  _classCallCheck(this, ClassScope);\n\n  this.privateNames = new Set();\n  this.loneAccessors = new Map();\n  this.undefinedPrivateNames = new Map();\n};\n\nvar ClassScopeHandler = /*#__PURE__*/function () {\n  function ClassScopeHandler(raise) {\n    _classCallCheck(this, ClassScopeHandler);\n\n    this.stack = [];\n    this.undefinedPrivateNames = new Map();\n    this.raise = raise;\n  }\n\n  _createClass(ClassScopeHandler, [{\n    key: \"current\",\n    value: function current() {\n      return this.stack[this.stack.length - 1];\n    }\n  }, {\n    key: \"enter\",\n    value: function enter() {\n      this.stack.push(new ClassScope());\n    }\n  }, {\n    key: \"exit\",\n    value: function exit() {\n      var oldClassScope = this.stack.pop();\n      var current = this.current();\n\n      for (var _i = 0, _Array$from = Array.from(oldClassScope.undefinedPrivateNames); _i < _Array$from.length; _i++) {\n        var _Array$from$_i2 = _slicedToArray(_Array$from[_i], 2),\n            name = _Array$from$_i2[0],\n            pos = _Array$from$_i2[1];\n\n        if (current) {\n          if (!current.undefinedPrivateNames.has(name)) {\n            current.undefinedPrivateNames.set(name, pos);\n          }\n        } else {\n          this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n        }\n      }\n    }\n  }, {\n    key: \"declarePrivateName\",\n    value: function declarePrivateName(name, elementType, pos) {\n      var classScope = this.current();\n      var redefined = classScope.privateNames.has(name);\n\n      if (elementType & CLASS_ELEMENT_KIND_ACCESSOR) {\n        var accessor = redefined && classScope.loneAccessors.get(name);\n\n        if (accessor) {\n          var oldStatic = accessor & CLASS_ELEMENT_FLAG_STATIC;\n          var newStatic = elementType & CLASS_ELEMENT_FLAG_STATIC;\n          var oldKind = accessor & CLASS_ELEMENT_KIND_ACCESSOR;\n          var newKind = elementType & CLASS_ELEMENT_KIND_ACCESSOR;\n          redefined = oldKind === newKind || oldStatic !== newStatic;\n          if (!redefined) classScope.loneAccessors.delete(name);\n        } else if (!redefined) {\n          classScope.loneAccessors.set(name, elementType);\n        }\n      }\n\n      if (redefined) {\n        this.raise(pos, ErrorMessages.PrivateNameRedeclaration, name);\n      }\n\n      classScope.privateNames.add(name);\n      classScope.undefinedPrivateNames.delete(name);\n    }\n  }, {\n    key: \"usePrivateName\",\n    value: function usePrivateName(name, pos) {\n      var classScope;\n\n      for (var _i2 = 0, _this$stack = this.stack; _i2 < _this$stack.length; _i2++) {\n        classScope = _this$stack[_i2];\n        if (classScope.privateNames.has(name)) return;\n      }\n\n      if (classScope) {\n        classScope.undefinedPrivateNames.set(name, pos);\n      } else {\n        this.raise(pos, ErrorMessages.InvalidPrivateFieldResolution, name);\n      }\n    }\n  }]);\n\n  return ClassScopeHandler;\n}();\n\nvar Parser = /*#__PURE__*/function (_StatementParser) {\n  _inherits(Parser, _StatementParser);\n\n  var _super18 = _createSuper(Parser);\n\n  function Parser(options, input) {\n    var _this55;\n\n    _classCallCheck(this, Parser);\n\n    options = getOptions(options);\n    _this55 = _super18.call(this, options, input);\n\n    var ScopeHandler = _this55.getScopeHandler();\n\n    _this55.options = options;\n    _this55.inModule = _this55.options.sourceType === \"module\";\n    _this55.scope = new ScopeHandler(_this55.raise.bind(_assertThisInitialized(_this55)), _this55.inModule);\n    _this55.prodParam = new ProductionParameterHandler();\n    _this55.classScope = new ClassScopeHandler(_this55.raise.bind(_assertThisInitialized(_this55)));\n    _this55.expressionScope = new ExpressionScopeHandler(_this55.raise.bind(_assertThisInitialized(_this55)));\n    _this55.plugins = pluginsMap(_this55.options.plugins);\n    _this55.filename = options.sourceFilename;\n    return _this55;\n  }\n\n  _createClass(Parser, [{\n    key: \"getScopeHandler\",\n    value: function getScopeHandler() {\n      return ScopeHandler;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      var paramFlags = PARAM;\n\n      if (this.hasPlugin(\"topLevelAwait\") && this.inModule) {\n        paramFlags |= PARAM_AWAIT;\n      }\n\n      this.scope.enter(SCOPE_PROGRAM);\n      this.prodParam.enter(paramFlags);\n      var file = this.startNode();\n      var program = this.startNode();\n      this.nextToken();\n      file.errors = null;\n      this.parseTopLevel(file, program);\n      file.errors = this.state.errors;\n      return file;\n    }\n  }]);\n\n  return Parser;\n}(StatementParser);\n\nfunction pluginsMap(plugins) {\n  var pluginMap = new Map();\n\n  for (var _i = 0; _i < plugins.length; _i++) {\n    var plugin = plugins[_i];\n\n    var _ref15 = Array.isArray(plugin) ? plugin : [plugin, {}],\n        _ref16 = _slicedToArray(_ref15, 2),\n        name = _ref16[0],\n        options = _ref16[1];\n\n    if (!pluginMap.has(name)) pluginMap.set(name, options || {});\n  }\n\n  return pluginMap;\n}\n\nfunction parse(input, options) {\n  var _options;\n\n  if (((_options = options) == null ? void 0 : _options.sourceType) === \"unambiguous\") {\n    options = Object.assign({}, options);\n\n    try {\n      options.sourceType = \"module\";\n      var parser = getParser(options, input);\n      var ast = parser.parse();\n\n      if (parser.sawUnambiguousESM) {\n        return ast;\n      }\n\n      if (parser.ambiguousScriptDifferentAst) {\n        try {\n          options.sourceType = \"script\";\n          return getParser(options, input).parse();\n        } catch (_unused) {}\n      } else {\n        ast.program.sourceType = \"script\";\n      }\n\n      return ast;\n    } catch (moduleError) {\n      try {\n        options.sourceType = \"script\";\n        return getParser(options, input).parse();\n      } catch (_unused2) {}\n\n      throw moduleError;\n    }\n  } else {\n    return getParser(options, input).parse();\n  }\n}\n\nfunction parseExpression(input, options) {\n  var parser = getParser(options, input);\n\n  if (parser.options.strictMode) {\n    parser.state.strict = true;\n  }\n\n  return parser.getExpression();\n}\n\nfunction getParser(options, input) {\n  var cls = Parser;\n\n  if (options == null ? void 0 : options.plugins) {\n    validatePlugins(options.plugins);\n    cls = getParserClass(options.plugins);\n  }\n\n  return new cls(options, input);\n}\n\nvar parserClassCache = {};\n\nfunction getParserClass(pluginsFromOptions) {\n  var pluginList = mixinPluginNames.filter(function (name) {\n    return hasPlugin(pluginsFromOptions, name);\n  });\n  var key = pluginList.join(\"/\");\n  var cls = parserClassCache[key];\n\n  if (!cls) {\n    cls = Parser;\n\n    for (var _i = 0; _i < pluginList.length; _i++) {\n      var plugin = pluginList[_i];\n      cls = mixinPlugins[plugin](cls);\n    }\n\n    parserClassCache[key] = cls;\n  }\n\n  return cls;\n}\n\nexports.parse = parse;\nexports.parseExpression = parseExpression;\nexports.tokTypes = types;"],"sourceRoot":""}